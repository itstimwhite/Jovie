/*! tailwindcss v4.1.12 | MIT License | https://tailwindcss.com */
@layer properties {
  @supports (((-webkit-hyphens: none)) and (not (margin-trim: inline))) or
    ((-moz-orient: inline) and (not (color: rgb(from red r g b)))) {
    *,
    :before,
    :after,
    ::backdrop {
      --tw-font-weight: initial;
      --tw-shadow: 0 0 #0000;
      --tw-shadow-color: initial;
      --tw-shadow-alpha: 100%;
      --tw-inset-shadow: 0 0 #0000;
      --tw-inset-shadow-color: initial;
      --tw-inset-shadow-alpha: 100%;
      --tw-ring-color: initial;
      --tw-ring-shadow: 0 0 #0000;
      --tw-inset-ring-color: initial;
      --tw-inset-ring-shadow: 0 0 #0000;
      --tw-ring-inset: initial;
      --tw-ring-offset-width: 0px;
      --tw-ring-offset-color: #fff;
      --tw-ring-offset-shadow: 0 0 #0000;
      --tw-translate-x: 0;
      --tw-translate-y: 0;
      --tw-translate-z: 0;
      --tw-scale-x: 1;
      --tw-scale-y: 1;
      --tw-scale-z: 1;
      --tw-rotate-x: initial;
      --tw-rotate-y: initial;
      --tw-rotate-z: initial;
      --tw-skew-x: initial;
      --tw-skew-y: initial;
      --tw-space-y-reverse: 0;
      --tw-space-x-reverse: 0;
      --tw-divide-y-reverse: 0;
      --tw-border-style: solid;
      --tw-gradient-position: initial;
      --tw-gradient-from: #0000;
      --tw-gradient-via: #0000;
      --tw-gradient-to: #0000;
      --tw-gradient-stops: initial;
      --tw-gradient-via-stops: initial;
      --tw-gradient-from-position: 0%;
      --tw-gradient-via-position: 50%;
      --tw-gradient-to-position: 100%;
      --tw-leading: initial;
      --tw-tracking: initial;
      --tw-ordinal: initial;
      --tw-slashed-zero: initial;
      --tw-numeric-figure: initial;
      --tw-numeric-spacing: initial;
      --tw-numeric-fraction: initial;
      --tw-outline-style: solid;
      --tw-blur: initial;
      --tw-brightness: initial;
      --tw-contrast: initial;
      --tw-grayscale: initial;
      --tw-hue-rotate: initial;
      --tw-invert: initial;
      --tw-opacity: initial;
      --tw-saturate: initial;
      --tw-sepia: initial;
      --tw-drop-shadow: initial;
      --tw-drop-shadow-color: initial;
      --tw-drop-shadow-alpha: 100%;
      --tw-drop-shadow-size: initial;
      --tw-backdrop-blur: initial;
      --tw-backdrop-brightness: initial;
      --tw-backdrop-contrast: initial;
      --tw-backdrop-grayscale: initial;
      --tw-backdrop-hue-rotate: initial;
      --tw-backdrop-invert: initial;
      --tw-backdrop-opacity: initial;
      --tw-backdrop-saturate: initial;
      --tw-backdrop-sepia: initial;
      --tw-duration: initial;
      --tw-ease: initial;
      --tw-content: '';
    }
  }
}
@layer theme {
  :root,
  :host {
    --font-sans:
      var(--font-inter), -apple-system, BlinkMacSystemFont, 'SF Pro Text',
      'SF Pro Display', 'Segoe UI', Roboto, Arial, sans-serif;
    --font-mono:
      ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, 'Liberation Mono',
      'Courier New', monospace;
    --color-red-50: oklch(97.1% 0.013 17.38);
    --color-red-100: oklch(93.6% 0.032 17.717);
    --color-red-200: oklch(88.5% 0.062 18.334);
    --color-red-300: oklch(80.8% 0.114 19.571);
    --color-red-400: oklch(70.4% 0.191 22.216);
    --color-red-500: oklch(63.7% 0.237 25.331);
    --color-red-600: oklch(57.7% 0.245 27.325);
    --color-red-700: oklch(50.5% 0.213 27.518);
    --color-red-800: oklch(44.4% 0.177 26.899);
    --color-red-900: oklch(39.6% 0.141 25.723);
    --color-orange-50: oklch(98% 0.016 73.684);
    --color-amber-400: oklch(82.8% 0.189 84.429);
    --color-amber-500: oklch(76.9% 0.188 70.08);
    --color-yellow-50: oklch(98.7% 0.026 102.212);
    --color-yellow-100: oklch(97.3% 0.071 103.193);
    --color-yellow-200: oklch(94.5% 0.129 101.54);
    --color-yellow-400: oklch(85.2% 0.199 91.936);
    --color-yellow-800: oklch(47.6% 0.114 61.907);
    --color-yellow-900: oklch(42.1% 0.095 57.708);
    --color-green-50: oklch(98.2% 0.018 155.826);
    --color-green-100: oklch(96.2% 0.044 156.743);
    --color-green-200: oklch(92.5% 0.084 155.995);
    --color-green-400: oklch(79.2% 0.209 151.711);
    --color-green-500: oklch(72.3% 0.219 149.579);
    --color-green-600: oklch(62.7% 0.194 149.214);
    --color-green-700: oklch(52.7% 0.154 150.069);
    --color-green-800: oklch(44.8% 0.119 151.328);
    --color-green-900: oklch(39.3% 0.095 152.535);
    --color-cyan-400: oklch(78.9% 0.154 211.53);
    --color-cyan-500: oklch(71.5% 0.143 215.221);
    --color-cyan-600: oklch(60.9% 0.126 221.723);
    --color-sky-400: oklch(74.6% 0.16 232.661);
    --color-sky-600: oklch(58.8% 0.158 241.966);
    --color-blue-50: oklch(97% 0.014 254.604);
    --color-blue-100: oklch(93.2% 0.032 255.585);
    --color-blue-200: oklch(88.2% 0.059 254.128);
    --color-blue-300: oklch(80.9% 0.105 251.813);
    --color-blue-400: oklch(70.7% 0.165 254.624);
    --color-blue-500: oklch(62.3% 0.214 259.815);
    --color-blue-600: oklch(54.6% 0.245 262.881);
    --color-blue-700: oklch(48.8% 0.243 264.376);
    --color-blue-800: oklch(42.4% 0.199 265.638);
    --color-blue-900: oklch(37.9% 0.146 265.522);
    --color-indigo-50: oklch(96.2% 0.018 272.314);
    --color-indigo-400: oklch(67.3% 0.182 276.935);
    --color-indigo-500: oklch(58.5% 0.233 277.117);
    --color-indigo-600: oklch(51.1% 0.262 276.966);
    --color-indigo-700: oklch(45.7% 0.24 277.023);
    --color-indigo-900: oklch(35.9% 0.144 278.697);
    --color-indigo-950: oklch(25.7% 0.09 281.288);
    --color-purple-50: oklch(97.7% 0.014 308.299);
    --color-purple-100: oklch(94.6% 0.033 307.174);
    --color-purple-200: oklch(90.2% 0.063 306.703);
    --color-purple-300: oklch(82.7% 0.119 306.383);
    --color-purple-400: oklch(71.4% 0.203 305.504);
    --color-purple-500: oklch(62.7% 0.265 303.9);
    --color-purple-600: oklch(55.8% 0.288 302.321);
    --color-purple-700: oklch(49.6% 0.265 301.924);
    --color-purple-900: oklch(38.1% 0.176 304.987);
    --color-purple-950: oklch(29.1% 0.149 302.717);
    --color-pink-50: oklch(97.1% 0.014 343.198);
    --color-pink-600: oklch(59.2% 0.249 0.584);
    --color-pink-700: oklch(52.5% 0.223 3.958);
    --color-pink-950: oklch(28.4% 0.109 3.907);
    --color-gray-50: #f9fafb;
    --color-gray-100: #f3f4f6;
    --color-gray-200: #e5e7eb;
    --color-gray-300: #d1d5db;
    --color-gray-400: #9ca3af;
    --color-gray-500: #6b7280;
    --color-gray-600: #4b5563;
    --color-gray-700: #374151;
    --color-gray-800: #1f2937;
    --color-gray-900: #111827;
    --color-zinc-400: oklch(70.5% 0.015 286.067);
    --color-zinc-500: oklch(55.2% 0.016 285.938);
    --color-zinc-600: oklch(44.2% 0.017 285.786);
    --color-zinc-900: oklch(21% 0.006 285.885);
    --color-zinc-950: oklch(14.1% 0.005 285.823);
    --color-neutral-200: oklch(92.2% 0 0);
    --color-neutral-500: oklch(55.6% 0 0);
    --color-neutral-800: oklch(26.9% 0 0);
    --color-neutral-900: oklch(20.5% 0 0);
    --color-neutral-950: oklch(14.5% 0 0);
    --color-black: #000;
    --color-white: #fff;
    --spacing: 0.25rem;
    --container-xs: 20rem;
    --container-sm: 24rem;
    --container-md: 28rem;
    --container-lg: 32rem;
    --container-xl: 36rem;
    --container-2xl: 42rem;
    --container-3xl: 48rem;
    --container-4xl: 56rem;
    --container-5xl: 64rem;
    --container-6xl: 72rem;
    --container-7xl: 80rem;
    --text-xs: 0.75rem;
    --text-xs--line-height: calc(1 / 0.75);
    --text-sm: 0.875rem;
    --text-sm--line-height: calc(1.25 / 0.875);
    --text-base: 1rem;
    --text-base--line-height: 1.5;
    --text-lg: 1.125rem;
    --text-lg--line-height: calc(1.75 / 1.125);
    --text-xl: 1.25rem;
    --text-xl--line-height: calc(1.75 / 1.25);
    --text-2xl: 1.5rem;
    --text-2xl--line-height: calc(2 / 1.5);
    --text-3xl: 1.875rem;
    --text-3xl--line-height: 1.2;
    --text-4xl: 2.25rem;
    --text-4xl--line-height: calc(2.5 / 2.25);
    --text-5xl: 3rem;
    --text-5xl--line-height: 1;
    --text-6xl: 3.75rem;
    --text-6xl--line-height: 1;
    --text-7xl: 4.5rem;
    --text-7xl--line-height: 1;
    --text-9xl: 8rem;
    --text-9xl--line-height: 1;
    --font-weight-light: 300;
    --font-weight-normal: 400;
    --font-weight-medium: 500;
    --font-weight-semibold: 600;
    --font-weight-bold: 700;
    --font-weight-extrabold: 800;
    --tracking-tighter: -0.02em;
    --tracking-tight: -0.01em;
    --tracking-wider: 0.02em;
    --leading-tight: 1.25;
    --leading-snug: 1.375;
    --leading-relaxed: 1.625;
    --radius-sm: 0.25rem;
    --radius-md: 0.375rem;
    --radius-lg: 0.5rem;
    --radius-xl: 0.75rem;
    --radius-2xl: 1rem;
    --radius-3xl: 1.5rem;
    --ease-in: cubic-bezier(0.4, 0, 1, 1);
    --ease-out: cubic-bezier(0, 0, 0.2, 1);
    --ease-in-out: cubic-bezier(0.4, 0, 0.2, 1);
    --animate-spin: spin 1s linear infinite;
    --animate-pulse: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
    --blur-xs: 4px;
    --blur-sm: 8px;
    --blur-md: 12px;
    --blur-lg: 16px;
    --blur-xl: 24px;
    --blur-3xl: 64px;
    --default-transition-duration: 0.15s;
    --default-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    --default-font-family: var(--font-sans);
    --default-mono-font-family: var(--font-mono);
  }
}
@layer base {
  *,
  :after,
  :before,
  ::backdrop {
    box-sizing: border-box;
    border: 0 solid;
    margin: 0;
    padding: 0;
  }
  ::file-selector-button {
    box-sizing: border-box;
    border: 0 solid;
    margin: 0;
    padding: 0;
  }
  html,
  :host {
    -webkit-text-size-adjust: 100%;
    -moz-tab-size: 4;
    tab-size: 4;
    line-height: 1.5;
    font-family: var(
      --default-font-family,
      ui-sans-serif,
      system-ui,
      sans-serif,
      'Apple Color Emoji',
      'Segoe UI Emoji',
      'Segoe UI Symbol',
      'Noto Color Emoji'
    );
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var(--default-font-variation-settings, normal);
    -webkit-tap-highlight-color: transparent;
  }
  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }
  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }
  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    font-size: inherit;
    font-weight: inherit;
  }
  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }
  b,
  strong {
    font-weight: bolder;
  }
  code,
  kbd,
  samp,
  pre {
    font-family: var(
      --default-mono-font-family,
      ui-monospace,
      SFMono-Regular,
      Menlo,
      Monaco,
      Consolas,
      'Liberation Mono',
      'Courier New',
      monospace
    );
    font-feature-settings: var(--default-mono-font-feature-settings, normal);
    font-variation-settings: var(
      --default-mono-font-variation-settings,
      normal
    );
    font-size: 1em;
  }
  small {
    font-size: 80%;
  }
  sub,
  sup {
    vertical-align: baseline;
    font-size: 75%;
    line-height: 0;
    position: relative;
  }
  sub {
    bottom: -0.25em;
  }
  sup {
    top: -0.5em;
  }
  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }
  :-moz-focusring {
    outline: auto;
  }
  progress {
    vertical-align: baseline;
  }
  summary {
    display: list-item;
  }
  ol,
  ul,
  menu {
    list-style: none;
  }
  img,
  svg,
  video,
  canvas,
  audio,
  iframe,
  embed,
  object {
    vertical-align: middle;
    display: block;
  }
  img,
  video {
    max-width: 100%;
    height: auto;
  }
  button,
  input,
  select,
  optgroup,
  textarea {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    opacity: 1;
    background-color: #0000;
    border-radius: 0;
  }
  ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    opacity: 1;
    background-color: #0000;
    border-radius: 0;
  }
  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }
  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }
  ::file-selector-button {
    margin-inline-end: 4px;
  }
  ::placeholder {
    opacity: 1;
  }
  @supports (not ((-webkit-appearance: -apple-pay-button))) or
    (contain-intrinsic-size: 1px) {
    ::placeholder {
      color: currentColor;
    }
    @supports (color: color-mix(in lab, red, red)) {
      ::placeholder {
        color: color-mix(in oklab, currentcolor 50%, transparent);
      }
    }
  }
  textarea {
    resize: vertical;
  }
  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }
  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }
  ::-webkit-datetime-edit {
    display: inline-flex;
  }
  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }
  ::-webkit-datetime-edit {
    padding-block: 0;
  }
  ::-webkit-datetime-edit-year-field {
    padding-block: 0;
  }
  ::-webkit-datetime-edit-month-field {
    padding-block: 0;
  }
  ::-webkit-datetime-edit-day-field {
    padding-block: 0;
  }
  ::-webkit-datetime-edit-hour-field {
    padding-block: 0;
  }
  ::-webkit-datetime-edit-minute-field {
    padding-block: 0;
  }
  ::-webkit-datetime-edit-second-field {
    padding-block: 0;
  }
  ::-webkit-datetime-edit-millisecond-field {
    padding-block: 0;
  }
  ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }
  ::-webkit-calendar-picker-indicator {
    line-height: 1;
  }
  :-moz-ui-invalid {
    box-shadow: none;
  }
  button,
  input:where([type='button'], [type='reset'], [type='submit']) {
    -webkit-appearance: button;
    -moz-appearance: button;
    appearance: button;
  }
  ::file-selector-button {
    -webkit-appearance: button;
    -moz-appearance: button;
    appearance: button;
  }
  ::-webkit-inner-spin-button {
    height: auto;
  }
  ::-webkit-outer-spin-button {
    height: auto;
  }
  [hidden]:where(:not([hidden='until-found'])) {
    display: none !important;
  }
  :root {
    --font-inter: 'Inter';
  }
  *,
  :after,
  :before,
  ::backdrop {
    border-color: var(--color-gray-200, currentcolor);
  }
  ::file-selector-button {
    border-color: var(--color-gray-200, currentcolor);
  }
  :root {
    --background: 255 255 255;
    --foreground: 17 24 39;
    --accent: 192 132 252;
  }
  .dark {
    --background: 17 24 39;
    --foreground: 249 250 251;
    --accent: 192 132 252;
  }
  body {
    background-color: var(--color-white);
    color: var(--color-gray-900);
  }
  body:is(.dark *) {
    background-color: var(--color-gray-900);
    color: var(--color-gray-50);
  }
  body {
    font-feature-settings:
      'rlig' 1,
      'calt' 1;
  }
  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    --tw-font-weight: var(--font-weight-semibold);
    font-weight: var(--font-weight-semibold);
    --tw-tracking: var(--tracking-tight);
    letter-spacing: var(--tracking-tight);
  }
  h1 {
    font-size: var(--text-4xl);
    line-height: var(--tw-leading, var(--text-4xl--line-height));
  }
  @media (min-width: 64rem) {
    h1 {
      font-size: var(--text-5xl);
      line-height: var(--tw-leading, var(--text-5xl--line-height));
    }
  }
  h2 {
    font-size: var(--text-3xl);
    line-height: var(--tw-leading, var(--text-3xl--line-height));
  }
  @media (min-width: 64rem) {
    h2 {
      font-size: var(--text-4xl);
      line-height: var(--tw-leading, var(--text-4xl--line-height));
    }
  }
  h3 {
    font-size: var(--text-2xl);
    line-height: var(--tw-leading, var(--text-2xl--line-height));
  }
  @media (min-width: 64rem) {
    h3 {
      font-size: var(--text-3xl);
      line-height: var(--tw-leading, var(--text-3xl--line-height));
    }
  }
  h4 {
    font-size: var(--text-xl);
    line-height: var(--tw-leading, var(--text-xl--line-height));
  }
  @media (min-width: 64rem) {
    h4 {
      font-size: var(--text-2xl);
      line-height: var(--tw-leading, var(--text-2xl--line-height));
    }
  }
  h5 {
    font-size: var(--text-lg);
    line-height: var(--tw-leading, var(--text-lg--line-height));
  }
  @media (min-width: 64rem) {
    h5 {
      font-size: var(--text-xl);
      line-height: var(--tw-leading, var(--text-xl--line-height));
    }
  }
  h6 {
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
  }
  @media (min-width: 64rem) {
    h6 {
      font-size: var(--text-lg);
      line-height: var(--tw-leading, var(--text-lg--line-height));
    }
  }
}
@layer components;
@layer utilities {
  .\@container {
    container-type: inline-size;
  }
  .btn {
    border-radius: var(--radius-md);
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
    transition-property:
      color, background-color, border-color, outline-color,
      text-decoration-color, fill, stroke, --tw-gradient-from,
      --tw-gradient-via, --tw-gradient-to;
    transition-timing-function: var(
      --tw-ease,
      var(--default-transition-timing-function)
    );
    transition-duration: var(--tw-duration, var(--default-transition-duration));
    justify-content: center;
    align-items: center;
    display: inline-flex;
  }
  .btn:focus-visible {
    --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0
      calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
    box-shadow:
      var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
      var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    --tw-ring-color: var(--color-gray-400);
    --tw-ring-offset-width: 2px;
    --tw-ring-offset-shadow: var(--tw-ring-inset,) 0 0 0
      var(--tw-ring-offset-width) var(--tw-ring-offset-color);
    --tw-outline-style: none;
    outline-style: none;
  }
  @media (forced-colors: active) {
    .btn:focus-visible {
      outline-offset: 2px;
      outline: 2px solid #0000;
    }
  }
  .btn:disabled {
    pointer-events: none;
    opacity: 0.5;
  }
  .pointer-events-none {
    pointer-events: none;
  }
  .collapse {
    visibility: collapse;
  }
  .invisible {
    visibility: hidden;
  }
  .visible {
    visibility: visible;
  }
  .sr-only {
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border-width: 0;
    width: 1px;
    height: 1px;
    margin: -1px;
    padding: 0;
    position: absolute;
    overflow: hidden;
  }
  .absolute {
    position: absolute;
  }
  .fixed {
    position: fixed;
  }
  .relative {
    position: relative;
  }
  .static {
    position: static;
  }
  .sticky {
    position: sticky;
  }
  .-inset-2 {
    inset: calc(var(--spacing) * -2);
  }
  .-inset-3 {
    inset: calc(var(--spacing) * -3);
  }
  .-inset-4 {
    inset: calc(var(--spacing) * -4);
  }
  .inset-0 {
    inset: calc(var(--spacing) * 0);
  }
  .inset-y-0 {
    inset-block: calc(var(--spacing) * 0);
  }
  .top-0 {
    top: calc(var(--spacing) * 0);
  }
  .top-1 {
    top: calc(var(--spacing) * 1);
  }
  .top-1\/2 {
    top: 50%;
  }
  .top-1\/4 {
    top: 25%;
  }
  .top-4 {
    top: calc(var(--spacing) * 4);
  }
  .top-8 {
    top: calc(var(--spacing) * 8);
  }
  .top-full {
    top: 100%;
  }
  .right-0 {
    right: calc(var(--spacing) * 0);
  }
  .right-1 {
    right: calc(var(--spacing) * 1);
  }
  .right-1\/4 {
    right: 25%;
  }
  .right-2 {
    right: calc(var(--spacing) * 2);
  }
  .right-3 {
    right: calc(var(--spacing) * 3);
  }
  .right-4 {
    right: calc(var(--spacing) * 4);
  }
  .bottom-0 {
    bottom: calc(var(--spacing) * 0);
  }
  .bottom-1\/4 {
    bottom: 25%;
  }
  .bottom-4 {
    bottom: calc(var(--spacing) * 4);
  }
  .left-0 {
    left: calc(var(--spacing) * 0);
  }
  .left-1\/2 {
    left: 50%;
  }
  .left-1\/4 {
    left: 25%;
  }
  .left-4 {
    left: calc(var(--spacing) * 4);
  }
  .isolate {
    isolation: isolate;
  }
  .z-10 {
    z-index: 10;
  }
  .z-20 {
    z-index: 20;
  }
  .z-40 {
    z-index: 40;
  }
  .z-50 {
    z-index: 50;
  }
  .row-start-2 {
    grid-row-start: 2;
  }
  .float-left {
    float: left;
  }
  .float-right {
    float: right;
  }
  .container {
    width: 100%;
  }
  @media (min-width: 40rem) {
    .container {
      max-width: 40rem;
    }
  }
  @media (min-width: 48rem) {
    .container {
      max-width: 48rem;
    }
  }
  @media (min-width: 64rem) {
    .container {
      max-width: 64rem;
    }
  }
  @media (min-width: 80rem) {
    .container {
      max-width: 80rem;
    }
  }
  @media (min-width: 96rem) {
    .container {
      max-width: 96rem;
    }
  }
  .m-1 {
    margin: calc(var(--spacing) * 1);
  }
  .m-2 {
    margin: calc(var(--spacing) * 2);
  }
  .m-3 {
    margin: calc(var(--spacing) * 3);
  }
  .m-4 {
    margin: calc(var(--spacing) * 4);
  }
  .m-5 {
    margin: calc(var(--spacing) * 5);
  }
  .mx-1 {
    margin-inline: calc(var(--spacing) * 1);
  }
  .mx-2 {
    margin-inline: calc(var(--spacing) * 2);
  }
  .mx-3 {
    margin-inline: calc(var(--spacing) * 3);
  }
  .mx-4 {
    margin-inline: calc(var(--spacing) * 4);
  }
  .mx-5 {
    margin-inline: calc(var(--spacing) * 5);
  }
  .mx-auto {
    margin-inline: auto;
  }
  .-my-1 {
    margin-block: calc(var(--spacing) * -1);
  }
  .my-1 {
    margin-block: calc(var(--spacing) * 1);
  }
  .my-2 {
    margin-block: calc(var(--spacing) * 2);
  }
  .my-3 {
    margin-block: calc(var(--spacing) * 3);
  }
  .my-4 {
    margin-block: calc(var(--spacing) * 4);
  }
  .my-5 {
    margin-block: calc(var(--spacing) * 5);
  }
  .prose {
    color: var(--tw-prose-body);
    max-width: 65ch;
  }
  .prose :where(p):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    margin-top: 1.25em;
    margin-bottom: 1.25em;
  }
  .prose
    :where([class~='lead']):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    color: var(--tw-prose-lead);
    margin-top: 1.2em;
    margin-bottom: 1.2em;
    font-size: 1.25em;
    line-height: 1.6;
  }
  .prose :where(a):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    color: var(--tw-prose-links);
    font-weight: 500;
    text-decoration: underline;
  }
  .prose
    :where(strong):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    color: var(--tw-prose-bold);
    font-weight: 600;
  }
  .prose
    :where(a strong):not(:where([class~='not-prose'], [class~='not-prose'] *)),
  .prose
    :where(blockquote strong):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ),
  .prose
    :where(thead th strong):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    color: inherit;
  }
  .prose :where(ol):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    margin-top: 1.25em;
    margin-bottom: 1.25em;
    padding-inline-start: 1.625em;
    list-style-type: decimal;
  }
  .prose
    :where(ol[type='A']):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    list-style-type: upper-alpha;
  }
  .prose
    :where(ol[type='a']):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    list-style-type: lower-alpha;
  }
  .prose
    :where(ol[type='A s']):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    list-style-type: upper-alpha;
  }
  .prose
    :where(ol[type='a s']):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    list-style-type: lower-alpha;
  }
  .prose
    :where(ol[type='I']):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    list-style-type: upper-roman;
  }
  .prose
    :where(ol[type='i']):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    list-style-type: lower-roman;
  }
  .prose
    :where(ol[type='I s']):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    list-style-type: upper-roman;
  }
  .prose
    :where(ol[type='i s']):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    list-style-type: lower-roman;
  }
  .prose
    :where(ol[type='1']):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    list-style-type: decimal;
  }
  .prose :where(ul):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    margin-top: 1.25em;
    margin-bottom: 1.25em;
    padding-inline-start: 1.625em;
    list-style-type: disc;
  }
  .prose
    :where(ol > li):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    )::marker {
    color: var(--tw-prose-counters);
    font-weight: 400;
  }
  .prose
    :where(ul > li):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    )::marker {
    color: var(--tw-prose-bullets);
  }
  .prose :where(dt):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    color: var(--tw-prose-headings);
    margin-top: 1.25em;
    font-weight: 600;
  }
  .prose :where(hr):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    border-color: var(--tw-prose-hr);
    border-top-width: 1px;
    margin-top: 3em;
    margin-bottom: 3em;
  }
  .prose
    :where(blockquote):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    color: var(--tw-prose-quotes);
    border-inline-start-width: 0.25rem;
    border-inline-start-color: var(--tw-prose-quote-borders);
    quotes: '“' '”' '‘' '’';
    margin-top: 1.6em;
    margin-bottom: 1.6em;
    padding-inline-start: 1em;
    font-style: italic;
    font-weight: 500;
  }
  .prose
    :where(blockquote p:first-of-type):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ):before {
    content: open-quote;
  }
  .prose
    :where(blockquote p:last-of-type):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ):after {
    content: close-quote;
  }
  .prose :where(h1):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    color: var(--tw-prose-headings);
    margin-top: 0;
    margin-bottom: 0.888889em;
    font-size: 2.25em;
    font-weight: 800;
    line-height: 1.11111;
  }
  .prose
    :where(h1 strong):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    color: inherit;
    font-weight: 900;
  }
  .prose :where(h2):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    color: var(--tw-prose-headings);
    margin-top: 2em;
    margin-bottom: 1em;
    font-size: 1.5em;
    font-weight: 700;
    line-height: 1.33333;
  }
  .prose
    :where(h2 strong):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    color: inherit;
    font-weight: 800;
  }
  .prose :where(h3):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    color: var(--tw-prose-headings);
    margin-top: 1.6em;
    margin-bottom: 0.6em;
    font-size: 1.25em;
    font-weight: 600;
    line-height: 1.6;
  }
  .prose
    :where(h3 strong):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    color: inherit;
    font-weight: 700;
  }
  .prose :where(h4):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    color: var(--tw-prose-headings);
    margin-top: 1.5em;
    margin-bottom: 0.5em;
    font-weight: 600;
    line-height: 1.5;
  }
  .prose
    :where(h4 strong):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    color: inherit;
    font-weight: 700;
  }
  .prose :where(img):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    margin-top: 2em;
    margin-bottom: 2em;
  }
  .prose
    :where(picture):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    margin-top: 2em;
    margin-bottom: 2em;
    display: block;
  }
  .prose
    :where(video):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    margin-top: 2em;
    margin-bottom: 2em;
  }
  .prose :where(kbd):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    color: var(--tw-prose-kbd);
    box-shadow:
      0 0 0 1px rgb(var(--tw-prose-kbd-shadows) / 10%),
      0 3px rgb(var(--tw-prose-kbd-shadows) / 10%);
    padding-top: 0.1875em;
    padding-inline-end: 0.375em;
    padding-bottom: 0.1875em;
    border-radius: 0.3125rem;
    padding-inline-start: 0.375em;
    font-family: inherit;
    font-size: 0.875em;
    font-weight: 500;
  }
  .prose
    :where(code):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    color: var(--tw-prose-code);
    font-size: 0.875em;
    font-weight: 600;
  }
  .prose
    :where(code):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ):before,
  .prose
    :where(code):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ):after {
    content: '`';
  }
  .prose
    :where(a code):not(:where([class~='not-prose'], [class~='not-prose'] *)),
  .prose
    :where(h1 code):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    color: inherit;
  }
  .prose
    :where(h2 code):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    color: inherit;
    font-size: 0.875em;
  }
  .prose
    :where(h3 code):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    color: inherit;
    font-size: 0.9em;
  }
  .prose
    :where(h4 code):not(:where([class~='not-prose'], [class~='not-prose'] *)),
  .prose
    :where(blockquote code):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ),
  .prose
    :where(thead th code):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    color: inherit;
  }
  .prose :where(pre):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    color: var(--tw-prose-pre-code);
    background-color: var(--tw-prose-pre-bg);
    padding-top: 0.857143em;
    padding-inline-end: 1.14286em;
    padding-bottom: 0.857143em;
    border-radius: 0.375rem;
    margin-top: 1.71429em;
    margin-bottom: 1.71429em;
    padding-inline-start: 1.14286em;
    font-size: 0.875em;
    font-weight: 400;
    line-height: 1.71429;
    overflow-x: auto;
  }
  .prose
    :where(pre code):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    font-weight: inherit;
    color: inherit;
    font-size: inherit;
    font-family: inherit;
    line-height: inherit;
    background-color: #0000;
    border-width: 0;
    border-radius: 0;
    padding: 0;
  }
  .prose
    :where(pre code):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ):before,
  .prose
    :where(pre code):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ):after {
    content: none;
  }
  .prose
    :where(table):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    table-layout: auto;
    width: 100%;
    margin-top: 2em;
    margin-bottom: 2em;
    font-size: 0.875em;
    line-height: 1.71429;
  }
  .prose
    :where(thead):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    border-bottom-width: 1px;
    border-bottom-color: var(--tw-prose-th-borders);
  }
  .prose
    :where(thead th):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    color: var(--tw-prose-headings);
    vertical-align: bottom;
    padding-inline-end: 0.571429em;
    padding-bottom: 0.571429em;
    padding-inline-start: 0.571429em;
    font-weight: 600;
  }
  .prose
    :where(tbody tr):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    border-bottom-width: 1px;
    border-bottom-color: var(--tw-prose-td-borders);
  }
  .prose
    :where(tbody tr:last-child):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    border-bottom-width: 0;
  }
  .prose
    :where(tbody td):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    vertical-align: baseline;
  }
  .prose
    :where(tfoot):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    border-top-width: 1px;
    border-top-color: var(--tw-prose-th-borders);
  }
  .prose
    :where(tfoot td):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    vertical-align: top;
  }
  .prose
    :where(th, td):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    text-align: start;
  }
  .prose
    :where(figure > *):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    margin-top: 0;
    margin-bottom: 0;
  }
  .prose
    :where(figcaption):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    color: var(--tw-prose-captions);
    margin-top: 0.857143em;
    font-size: 0.875em;
    line-height: 1.42857;
  }
  .prose {
    --tw-prose-body: oklch(37.3% 0.034 259.733);
    --tw-prose-headings: oklch(21% 0.034 264.665);
    --tw-prose-lead: oklch(44.6% 0.03 256.802);
    --tw-prose-links: oklch(21% 0.034 264.665);
    --tw-prose-bold: oklch(21% 0.034 264.665);
    --tw-prose-counters: oklch(55.1% 0.027 264.364);
    --tw-prose-bullets: oklch(87.2% 0.01 258.338);
    --tw-prose-hr: oklch(92.8% 0.006 264.531);
    --tw-prose-quotes: oklch(21% 0.034 264.665);
    --tw-prose-quote-borders: oklch(92.8% 0.006 264.531);
    --tw-prose-captions: oklch(55.1% 0.027 264.364);
    --tw-prose-kbd: oklch(21% 0.034 264.665);
    --tw-prose-kbd-shadows: NaN NaN NaN;
    --tw-prose-code: oklch(21% 0.034 264.665);
    --tw-prose-pre-code: oklch(92.8% 0.006 264.531);
    --tw-prose-pre-bg: oklch(27.8% 0.033 256.848);
    --tw-prose-th-borders: oklch(87.2% 0.01 258.338);
    --tw-prose-td-borders: oklch(92.8% 0.006 264.531);
    --tw-prose-invert-body: oklch(87.2% 0.01 258.338);
    --tw-prose-invert-headings: #fff;
    --tw-prose-invert-lead: oklch(70.7% 0.022 261.325);
    --tw-prose-invert-links: #fff;
    --tw-prose-invert-bold: #fff;
    --tw-prose-invert-counters: oklch(70.7% 0.022 261.325);
    --tw-prose-invert-bullets: oklch(44.6% 0.03 256.802);
    --tw-prose-invert-hr: oklch(37.3% 0.034 259.733);
    --tw-prose-invert-quotes: oklch(96.7% 0.003 264.542);
    --tw-prose-invert-quote-borders: oklch(37.3% 0.034 259.733);
    --tw-prose-invert-captions: oklch(70.7% 0.022 261.325);
    --tw-prose-invert-kbd: #fff;
    --tw-prose-invert-kbd-shadows: 255 255 255;
    --tw-prose-invert-code: #fff;
    --tw-prose-invert-pre-code: oklch(87.2% 0.01 258.338);
    --tw-prose-invert-pre-bg: #00000080;
    --tw-prose-invert-th-borders: oklch(44.6% 0.03 256.802);
    --tw-prose-invert-td-borders: oklch(37.3% 0.034 259.733);
    font-size: 1rem;
    line-height: 1.75;
  }
  .prose
    :where(picture > img):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    margin-top: 0;
    margin-bottom: 0;
  }
  .prose :where(li):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    margin-top: 0.5em;
    margin-bottom: 0.5em;
  }
  .prose
    :where(ol > li):not(:where([class~='not-prose'], [class~='not-prose'] *)),
  .prose
    :where(ul > li):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    padding-inline-start: 0.375em;
  }
  .prose
    :where(.prose > ul > li p):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    margin-top: 0.75em;
    margin-bottom: 0.75em;
  }
  .prose
    :where(.prose > ul > li > p:first-child):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    margin-top: 1.25em;
  }
  .prose
    :where(.prose > ul > li > p:last-child):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    margin-bottom: 1.25em;
  }
  .prose
    :where(.prose > ol > li > p:first-child):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    margin-top: 1.25em;
  }
  .prose
    :where(.prose > ol > li > p:last-child):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    margin-bottom: 1.25em;
  }
  .prose
    :where(ul ul, ul ol, ol ul, ol ol):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    margin-top: 0.75em;
    margin-bottom: 0.75em;
  }
  .prose :where(dl):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    margin-top: 1.25em;
    margin-bottom: 1.25em;
  }
  .prose :where(dd):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    margin-top: 0.5em;
    padding-inline-start: 1.625em;
  }
  .prose
    :where(hr + *):not(:where([class~='not-prose'], [class~='not-prose'] *)),
  .prose
    :where(h2 + *):not(:where([class~='not-prose'], [class~='not-prose'] *)),
  .prose
    :where(h3 + *):not(:where([class~='not-prose'], [class~='not-prose'] *)),
  .prose
    :where(h4 + *):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    margin-top: 0;
  }
  .prose
    :where(thead th:first-child):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    padding-inline-start: 0;
  }
  .prose
    :where(thead th:last-child):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    padding-inline-end: 0;
  }
  .prose
    :where(tbody td, tfoot td):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    padding-top: 0.571429em;
    padding-inline-end: 0.571429em;
    padding-bottom: 0.571429em;
    padding-inline-start: 0.571429em;
  }
  .prose
    :where(tbody td:first-child, tfoot td:first-child):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    padding-inline-start: 0;
  }
  .prose
    :where(tbody td:last-child, tfoot td:last-child):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    padding-inline-end: 0;
  }
  .prose
    :where(figure):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    margin-top: 2em;
    margin-bottom: 2em;
  }
  .prose
    :where(.prose > :first-child):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    margin-top: 0;
  }
  .prose
    :where(.prose > :last-child):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    margin-bottom: 0;
  }
  .mt-0\.5 {
    margin-top: calc(var(--spacing) * 0.5);
  }
  .mt-1 {
    margin-top: calc(var(--spacing) * 1);
  }
  .mt-2 {
    margin-top: calc(var(--spacing) * 2);
  }
  .mt-3 {
    margin-top: calc(var(--spacing) * 3);
  }
  .mt-4 {
    margin-top: calc(var(--spacing) * 4);
  }
  .mt-5 {
    margin-top: calc(var(--spacing) * 5);
  }
  .mt-6 {
    margin-top: calc(var(--spacing) * 6);
  }
  .mt-8 {
    margin-top: calc(var(--spacing) * 8);
  }
  .mt-10 {
    margin-top: calc(var(--spacing) * 10);
  }
  .mt-12 {
    margin-top: calc(var(--spacing) * 12);
  }
  .mt-16 {
    margin-top: calc(var(--spacing) * 16);
  }
  .mr-1 {
    margin-right: calc(var(--spacing) * 1);
  }
  .mr-1\.5 {
    margin-right: calc(var(--spacing) * 1.5);
  }
  .mr-2 {
    margin-right: calc(var(--spacing) * 2);
  }
  .mr-3 {
    margin-right: calc(var(--spacing) * 3);
  }
  .mr-4 {
    margin-right: calc(var(--spacing) * 4);
  }
  .mr-5 {
    margin-right: calc(var(--spacing) * 5);
  }
  .-mb-px {
    margin-bottom: -1px;
  }
  .mb-1 {
    margin-bottom: calc(var(--spacing) * 1);
  }
  .mb-2 {
    margin-bottom: calc(var(--spacing) * 2);
  }
  .mb-3 {
    margin-bottom: calc(var(--spacing) * 3);
  }
  .mb-4 {
    margin-bottom: calc(var(--spacing) * 4);
  }
  .mb-5 {
    margin-bottom: calc(var(--spacing) * 5);
  }
  .mb-6 {
    margin-bottom: calc(var(--spacing) * 6);
  }
  .mb-8 {
    margin-bottom: calc(var(--spacing) * 8);
  }
  .mb-12 {
    margin-bottom: calc(var(--spacing) * 12);
  }
  .mb-16 {
    margin-bottom: calc(var(--spacing) * 16);
  }
  .mb-20 {
    margin-bottom: calc(var(--spacing) * 20);
  }
  .ml-1 {
    margin-left: calc(var(--spacing) * 1);
  }
  .ml-2 {
    margin-left: calc(var(--spacing) * 2);
  }
  .ml-3 {
    margin-left: calc(var(--spacing) * 3);
  }
  .ml-4 {
    margin-left: calc(var(--spacing) * 4);
  }
  .ml-5 {
    margin-left: calc(var(--spacing) * 5);
  }
  .ml-auto {
    margin-left: auto;
  }
  .line-clamp-2 {
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    display: -webkit-box;
    overflow: hidden;
  }
  .block {
    display: block;
  }
  .contents {
    display: contents;
  }
  .flex {
    display: flex;
  }
  .grid {
    display: grid;
  }
  .hidden {
    display: none;
  }
  .inline {
    display: inline;
  }
  .inline-block {
    display: inline-block;
  }
  .inline-flex {
    display: inline-flex;
  }
  .table {
    display: table;
  }
  .table-cell {
    display: table-cell;
  }
  .table-row {
    display: table-row;
  }
  .aspect-square {
    aspect-ratio: 1;
  }
  .size-28 {
    width: calc(var(--spacing) * 28);
    height: calc(var(--spacing) * 28);
  }
  .size-40 {
    width: calc(var(--spacing) * 40);
    height: calc(var(--spacing) * 40);
  }
  .h-1\.5 {
    height: calc(var(--spacing) * 1.5);
  }
  .h-1\/2 {
    height: 50%;
  }
  .h-2 {
    height: calc(var(--spacing) * 2);
  }
  .h-2\.5 {
    height: calc(var(--spacing) * 2.5);
  }
  .h-3 {
    height: calc(var(--spacing) * 3);
  }
  .h-3\.5 {
    height: calc(var(--spacing) * 3.5);
  }
  .h-4 {
    height: calc(var(--spacing) * 4);
  }
  .h-5 {
    height: calc(var(--spacing) * 5);
  }
  .h-6 {
    height: calc(var(--spacing) * 6);
  }
  .h-8 {
    height: calc(var(--spacing) * 8);
  }
  .h-10 {
    height: calc(var(--spacing) * 10);
  }
  .h-12 {
    height: calc(var(--spacing) * 12);
  }
  .h-16 {
    height: calc(var(--spacing) * 16);
  }
  .h-20 {
    height: calc(var(--spacing) * 20);
  }
  .h-24 {
    height: calc(var(--spacing) * 24);
  }
  .h-28 {
    height: calc(var(--spacing) * 28);
  }
  .h-32 {
    height: calc(var(--spacing) * 32);
  }
  .h-48 {
    height: calc(var(--spacing) * 48);
  }
  .h-96 {
    height: calc(var(--spacing) * 96);
  }
  .h-\[18px\] {
    height: 18px;
  }
  .h-\[36px\] {
    height: 36px;
  }
  .h-\[120px\] {
    height: 120px;
  }
  .h-\[600px\] {
    height: 600px;
  }
  .h-full {
    height: 100%;
  }
  .h-px {
    height: 1px;
  }
  .max-h-60 {
    max-height: calc(var(--spacing) * 60);
  }
  .max-h-\[80vh\] {
    max-height: 80vh;
  }
  .min-h-\[1\.5rem\] {
    min-height: 1.5rem;
  }
  .min-h-\[1\.25rem\] {
    min-height: 1.25rem;
  }
  .min-h-\[1\.125rem\] {
    min-height: 1.125rem;
  }
  .min-h-\[44px\] {
    min-height: 44px;
  }
  .min-h-\[48px\] {
    min-height: 48px;
  }
  .min-h-\[56px\] {
    min-height: 56px;
  }
  .min-h-\[calc\(100vh-4rem\)\] {
    min-height: calc(100vh - 4rem);
  }
  .min-h-full {
    min-height: 100%;
  }
  .min-h-screen {
    min-height: 100vh;
  }
  .w-1\.5 {
    width: calc(var(--spacing) * 1.5);
  }
  .w-1\/2 {
    width: 50%;
  }
  .w-2 {
    width: calc(var(--spacing) * 2);
  }
  .w-2\.5 {
    width: calc(var(--spacing) * 2.5);
  }
  .w-3 {
    width: calc(var(--spacing) * 3);
  }
  .w-3\.5 {
    width: calc(var(--spacing) * 3.5);
  }
  .w-3\/4 {
    width: 75%;
  }
  .w-4 {
    width: calc(var(--spacing) * 4);
  }
  .w-5 {
    width: calc(var(--spacing) * 5);
  }
  .w-6 {
    width: calc(var(--spacing) * 6);
  }
  .w-8 {
    width: calc(var(--spacing) * 8);
  }
  .w-10 {
    width: calc(var(--spacing) * 10);
  }
  .w-11 {
    width: calc(var(--spacing) * 11);
  }
  .w-12 {
    width: calc(var(--spacing) * 12);
  }
  .w-16 {
    width: calc(var(--spacing) * 16);
  }
  .w-20 {
    width: calc(var(--spacing) * 20);
  }
  .w-24 {
    width: calc(var(--spacing) * 24);
  }
  .w-28 {
    width: calc(var(--spacing) * 28);
  }
  .w-32 {
    width: calc(var(--spacing) * 32);
  }
  .w-48 {
    width: calc(var(--spacing) * 48);
  }
  .w-64 {
    width: calc(var(--spacing) * 64);
  }
  .w-96 {
    width: calc(var(--spacing) * 96);
  }
  .w-\[18px\] {
    width: 18px;
  }
  .w-\[120px\] {
    width: 120px;
  }
  .w-\[136px\] {
    width: 136px;
  }
  .w-\[calc\(100vw-2rem\)\] {
    width: calc(100vw - 2rem);
  }
  .w-auto {
    width: auto;
  }
  .w-full {
    width: 100%;
  }
  .w-px {
    width: 1px;
  }
  .w-screen {
    width: 100vw;
  }
  .max-w-2xl {
    max-width: var(--container-2xl);
  }
  .max-w-3xl {
    max-width: var(--container-3xl);
  }
  .max-w-4xl {
    max-width: var(--container-4xl);
  }
  .max-w-5xl {
    max-width: var(--container-5xl);
  }
  .max-w-6xl {
    max-width: var(--container-6xl);
  }
  .max-w-7xl {
    max-width: var(--container-7xl);
  }
  .max-w-lg {
    max-width: var(--container-lg);
  }
  .max-w-md {
    max-width: var(--container-md);
  }
  .max-w-none {
    max-width: none;
  }
  .max-w-sm {
    max-width: var(--container-sm);
  }
  .max-w-xl {
    max-width: var(--container-xl);
  }
  .min-w-0 {
    min-width: calc(var(--spacing) * 0);
  }
  .min-w-80 {
    min-width: calc(var(--spacing) * 80);
  }
  .min-w-\[136px\] {
    min-width: 136px;
  }
  .min-w-\[600px\] {
    min-width: 600px;
  }
  .min-w-max {
    min-width: max-content;
  }
  .flex-1 {
    flex: 1;
  }
  .flex-shrink {
    flex-shrink: 1;
  }
  .flex-shrink-0 {
    flex-shrink: 0;
  }
  .shrink {
    flex-shrink: 1;
  }
  .shrink-0 {
    flex-shrink: 0;
  }
  .flex-grow,
  .grow {
    flex-grow: 1;
  }
  .origin-top-right {
    transform-origin: 100% 0;
  }
  .-translate-x-1\/2 {
    --tw-translate-x: -50%;
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .-translate-x-full {
    --tw-translate-x: -100%;
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .translate-x-1 {
    --tw-translate-x: calc(var(--spacing) * 1);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .translate-x-6 {
    --tw-translate-x: calc(var(--spacing) * 6);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .-translate-y-1\/2 {
    --tw-translate-y: -50%;
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .translate-y-\[1px\] {
    --tw-translate-y: 1px;
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .scale-95 {
    --tw-scale-x: 95%;
    --tw-scale-y: 95%;
    --tw-scale-z: 95%;
    scale: var(--tw-scale-x) var(--tw-scale-y);
  }
  .scale-100 {
    --tw-scale-x: 100%;
    --tw-scale-y: 100%;
    --tw-scale-z: 100%;
    scale: var(--tw-scale-x) var(--tw-scale-y);
  }
  .rotate-1 {
    rotate: 1deg;
  }
  .rotate-180 {
    rotate: 180deg;
  }
  .transform {
    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,)
      var(--tw-skew-x,) var(--tw-skew-y,);
  }
  .animate-pulse {
    animation: var(--animate-pulse);
  }
  .animate-spin {
    animation: var(--animate-spin);
  }
  .cursor-grab {
    cursor: grab;
  }
  .cursor-not-allowed {
    cursor: not-allowed;
  }
  .cursor-pointer {
    cursor: pointer;
  }
  .cursor-wait {
    cursor: wait;
  }
  .touch-manipulation {
    touch-action: manipulation;
  }
  .resize {
    resize: both;
  }
  .resize-none {
    resize: none;
  }
  .resize-y {
    resize: vertical;
  }
  .list-disc {
    list-style-type: disc;
  }
  .appearance-none {
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
  }
  .grid-cols-1 {
    grid-template-columns: repeat(1, minmax(0, 1fr));
  }
  .grid-cols-2 {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }
  .grid-cols-3 {
    grid-template-columns: repeat(3, minmax(0, 1fr));
  }
  .grid-rows-\[1fr_auto\] {
    grid-template-rows: 1fr auto;
  }
  .flex-col {
    flex-direction: column;
  }
  .flex-col-reverse {
    flex-direction: column-reverse;
  }
  .flex-row {
    flex-direction: row;
  }
  .flex-wrap {
    flex-wrap: wrap;
  }
  .items-baseline {
    align-items: baseline;
  }
  .items-center {
    align-items: center;
  }
  .items-start {
    align-items: flex-start;
  }
  .justify-between {
    justify-content: space-between;
  }
  .justify-center {
    justify-content: center;
  }
  .justify-end {
    justify-content: flex-end;
  }
  .justify-start {
    justify-content: flex-start;
  }
  .justify-items-center {
    justify-items: center;
  }
  .gap-0 {
    gap: calc(var(--spacing) * 0);
  }
  .gap-1 {
    gap: calc(var(--spacing) * 1);
  }
  .gap-1\.5 {
    gap: calc(var(--spacing) * 1.5);
  }
  .gap-2 {
    gap: calc(var(--spacing) * 2);
  }
  .gap-3 {
    gap: calc(var(--spacing) * 3);
  }
  .gap-4 {
    gap: calc(var(--spacing) * 4);
  }
  .gap-6 {
    gap: calc(var(--spacing) * 6);
  }
  .gap-8 {
    gap: calc(var(--spacing) * 8);
  }
  .gap-10 {
    gap: calc(var(--spacing) * 10);
  }
  .gap-12 {
    gap: calc(var(--spacing) * 12);
  }
  :where(.space-y-1 > :not(:last-child)) {
    --tw-space-y-reverse: 0;
    margin-block-start: calc(
      calc(var(--spacing) * 1) * var(--tw-space-y-reverse)
    );
    margin-block-end: calc(
      calc(var(--spacing) * 1) * calc(1 - var(--tw-space-y-reverse))
    );
  }
  :where(.space-y-1\.5 > :not(:last-child)) {
    --tw-space-y-reverse: 0;
    margin-block-start: calc(
      calc(var(--spacing) * 1.5) * var(--tw-space-y-reverse)
    );
    margin-block-end: calc(
      calc(var(--spacing) * 1.5) * calc(1 - var(--tw-space-y-reverse))
    );
  }
  :where(.space-y-2 > :not(:last-child)) {
    --tw-space-y-reverse: 0;
    margin-block-start: calc(
      calc(var(--spacing) * 2) * var(--tw-space-y-reverse)
    );
    margin-block-end: calc(
      calc(var(--spacing) * 2) * calc(1 - var(--tw-space-y-reverse))
    );
  }
  :where(.space-y-3 > :not(:last-child)) {
    --tw-space-y-reverse: 0;
    margin-block-start: calc(
      calc(var(--spacing) * 3) * var(--tw-space-y-reverse)
    );
    margin-block-end: calc(
      calc(var(--spacing) * 3) * calc(1 - var(--tw-space-y-reverse))
    );
  }
  :where(.space-y-4 > :not(:last-child)) {
    --tw-space-y-reverse: 0;
    margin-block-start: calc(
      calc(var(--spacing) * 4) * var(--tw-space-y-reverse)
    );
    margin-block-end: calc(
      calc(var(--spacing) * 4) * calc(1 - var(--tw-space-y-reverse))
    );
  }
  :where(.space-y-6 > :not(:last-child)) {
    --tw-space-y-reverse: 0;
    margin-block-start: calc(
      calc(var(--spacing) * 6) * var(--tw-space-y-reverse)
    );
    margin-block-end: calc(
      calc(var(--spacing) * 6) * calc(1 - var(--tw-space-y-reverse))
    );
  }
  :where(.space-y-8 > :not(:last-child)) {
    --tw-space-y-reverse: 0;
    margin-block-start: calc(
      calc(var(--spacing) * 8) * var(--tw-space-y-reverse)
    );
    margin-block-end: calc(
      calc(var(--spacing) * 8) * calc(1 - var(--tw-space-y-reverse))
    );
  }
  .gap-x-8 {
    column-gap: calc(var(--spacing) * 8);
  }
  :where(.space-x-2 > :not(:last-child)) {
    --tw-space-x-reverse: 0;
    margin-inline-start: calc(
      calc(var(--spacing) * 2) * var(--tw-space-x-reverse)
    );
    margin-inline-end: calc(
      calc(var(--spacing) * 2) * calc(1 - var(--tw-space-x-reverse))
    );
  }
  :where(.space-x-3 > :not(:last-child)) {
    --tw-space-x-reverse: 0;
    margin-inline-start: calc(
      calc(var(--spacing) * 3) * var(--tw-space-x-reverse)
    );
    margin-inline-end: calc(
      calc(var(--spacing) * 3) * calc(1 - var(--tw-space-x-reverse))
    );
  }
  :where(.space-x-4 > :not(:last-child)) {
    --tw-space-x-reverse: 0;
    margin-inline-start: calc(
      calc(var(--spacing) * 4) * var(--tw-space-x-reverse)
    );
    margin-inline-end: calc(
      calc(var(--spacing) * 4) * calc(1 - var(--tw-space-x-reverse))
    );
  }
  :where(.space-x-6 > :not(:last-child)) {
    --tw-space-x-reverse: 0;
    margin-inline-start: calc(
      calc(var(--spacing) * 6) * var(--tw-space-x-reverse)
    );
    margin-inline-end: calc(
      calc(var(--spacing) * 6) * calc(1 - var(--tw-space-x-reverse))
    );
  }
  :where(.space-x-8 > :not(:last-child)) {
    --tw-space-x-reverse: 0;
    margin-inline-start: calc(
      calc(var(--spacing) * 8) * var(--tw-space-x-reverse)
    );
    margin-inline-end: calc(
      calc(var(--spacing) * 8) * calc(1 - var(--tw-space-x-reverse))
    );
  }
  .gap-y-1 {
    row-gap: calc(var(--spacing) * 1);
  }
  :where(.divide-y > :not(:last-child)) {
    --tw-divide-y-reverse: 0;
    border-bottom-style: var(--tw-border-style);
    border-top-style: var(--tw-border-style);
    border-top-width: calc(1px * var(--tw-divide-y-reverse));
    border-bottom-width: calc(1px * calc(1 - var(--tw-divide-y-reverse)));
  }
  .truncate {
    text-overflow: ellipsis;
    white-space: nowrap;
    overflow: hidden;
  }
  .overflow-auto {
    overflow: auto;
  }
  .overflow-hidden {
    overflow: hidden;
  }
  .overflow-x-auto {
    overflow-x: auto;
  }
  .overflow-y-auto {
    overflow-y: auto;
  }
  .overflow-y-hidden {
    overflow-y: hidden;
  }
  .scroll-smooth {
    scroll-behavior: smooth;
  }
  .rounded {
    border-radius: 0.25rem;
  }
  .rounded-2xl {
    border-radius: var(--radius-2xl);
  }
  .rounded-3xl {
    border-radius: var(--radius-3xl);
  }
  .rounded-\[2\.5rem\] {
    border-radius: 2.5rem;
  }
  .rounded-\[2rem\] {
    border-radius: 2rem;
  }
  .rounded-full {
    border-radius: 3.40282e38px;
  }
  .rounded-lg {
    border-radius: var(--radius-lg);
  }
  .rounded-md {
    border-radius: var(--radius-md);
  }
  .rounded-none {
    border-radius: 0;
  }
  .rounded-sm {
    border-radius: var(--radius-sm);
  }
  .rounded-xl {
    border-radius: var(--radius-xl);
  }
  .rounded-t-3xl {
    border-top-left-radius: var(--radius-3xl);
    border-top-right-radius: var(--radius-3xl);
  }
  .rounded-r-xl {
    border-top-right-radius: var(--radius-xl);
    border-bottom-right-radius: var(--radius-xl);
  }
  .border {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }
  .border-0 {
    border-style: var(--tw-border-style);
    border-width: 0;
  }
  .border-2 {
    border-style: var(--tw-border-style);
    border-width: 2px;
  }
  .border-t {
    border-top-style: var(--tw-border-style);
    border-top-width: 1px;
  }
  .border-b {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 1px;
  }
  .border-b-2 {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 2px;
  }
  .border-l {
    border-left-style: var(--tw-border-style);
    border-left-width: 1px;
  }
  .border-dashed {
    --tw-border-style: dashed;
    border-style: dashed;
  }
  .border-\[var\(--border\)\] {
    border-color: var(--border);
  }
  .border-black\/5 {
    border-color: #0000000d;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .border-black\/5 {
      border-color: color-mix(in oklab, var(--color-black) 5%, transparent);
    }
  }
  .border-black\/40 {
    border-color: #0006;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .border-black\/40 {
      border-color: color-mix(in oklab, var(--color-black) 40%, transparent);
    }
  }
  .border-blue-200 {
    border-color: var(--color-blue-200);
  }
  .border-blue-200\/20 {
    border-color: #bedbff33;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .border-blue-200\/20 {
      border-color: color-mix(in oklab, var(--color-blue-200) 20%, transparent);
    }
  }
  .border-blue-500\/20 {
    border-color: #3080ff33;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .border-blue-500\/20 {
      border-color: color-mix(in oklab, var(--color-blue-500) 20%, transparent);
    }
  }
  .border-current {
    border-color: currentColor;
  }
  .border-gray-100 {
    border-color: var(--color-gray-100);
  }
  .border-gray-200 {
    border-color: var(--color-gray-200);
  }
  .border-gray-200\/10 {
    border-color: #e5e7eb1a;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .border-gray-200\/10 {
      border-color: color-mix(in oklab, var(--color-gray-200) 10%, transparent);
    }
  }
  .border-gray-200\/30 {
    border-color: #e5e7eb4d;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .border-gray-200\/30 {
      border-color: color-mix(in oklab, var(--color-gray-200) 30%, transparent);
    }
  }
  .border-gray-200\/50 {
    border-color: #e5e7eb80;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .border-gray-200\/50 {
      border-color: color-mix(in oklab, var(--color-gray-200) 50%, transparent);
    }
  }
  .border-gray-300 {
    border-color: var(--color-gray-300);
  }
  .border-gray-900 {
    border-color: var(--color-gray-900);
  }
  .border-green-200 {
    border-color: var(--color-green-200);
  }
  .border-green-500\/20 {
    border-color: #00c75833;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .border-green-500\/20 {
      border-color: color-mix(
        in oklab,
        var(--color-green-500) 20%,
        transparent
      );
    }
  }
  .border-indigo-500 {
    border-color: var(--color-indigo-500);
  }
  .border-purple-500 {
    border-color: var(--color-purple-500);
  }
  .border-purple-500\/20 {
    border-color: #ac4bff33;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .border-purple-500\/20 {
      border-color: color-mix(
        in oklab,
        var(--color-purple-500) 20%,
        transparent
      );
    }
  }
  .border-red-200 {
    border-color: var(--color-red-200);
  }
  .border-red-500 {
    border-color: var(--color-red-500);
  }
  .border-red-500\/20 {
    border-color: #fb2c3633;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .border-red-500\/20 {
      border-color: color-mix(in oklab, var(--color-red-500) 20%, transparent);
    }
  }
  .border-transparent {
    border-color: #0000;
  }
  .border-white\/10 {
    border-color: #ffffff1a;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .border-white\/10 {
      border-color: color-mix(in oklab, var(--color-white) 10%, transparent);
    }
  }
  .border-white\/20 {
    border-color: #fff3;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .border-white\/20 {
      border-color: color-mix(in oklab, var(--color-white) 20%, transparent);
    }
  }
  .border-yellow-200 {
    border-color: var(--color-yellow-200);
  }
  .border-zinc-950\/10 {
    border-color: #09090b1a;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .border-zinc-950\/10 {
      border-color: color-mix(in oklab, var(--color-zinc-950) 10%, transparent);
    }
  }
  .border-t-transparent {
    border-top-color: #0000;
  }
  .bg-\[\#0D0E12\] {
    background-color: #0d0e12;
  }
  .bg-\[var\(--panel\)\] {
    background-color: var(--panel);
  }
  .bg-amber-400 {
    background-color: var(--color-amber-400);
  }
  .bg-black {
    background-color: var(--color-black);
  }
  .bg-black\/50 {
    background-color: #00000080;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .bg-black\/50 {
      background-color: color-mix(
        in oklab,
        var(--color-black) 50%,
        transparent
      );
    }
  }
  .bg-blue-50 {
    background-color: var(--color-blue-50);
  }
  .bg-blue-500 {
    background-color: var(--color-blue-500);
  }
  .bg-blue-500\/10 {
    background-color: #3080ff1a;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .bg-blue-500\/10 {
      background-color: color-mix(
        in oklab,
        var(--color-blue-500) 10%,
        transparent
      );
    }
  }
  .bg-blue-600 {
    background-color: var(--color-blue-600);
  }
  .bg-gray-50 {
    background-color: var(--color-gray-50);
  }
  .bg-gray-50\/50 {
    background-color: #f9fafb80;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .bg-gray-50\/50 {
      background-color: color-mix(
        in oklab,
        var(--color-gray-50) 50%,
        transparent
      );
    }
  }
  .bg-gray-50\/80 {
    background-color: #f9fafbcc;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .bg-gray-50\/80 {
      background-color: color-mix(
        in oklab,
        var(--color-gray-50) 80%,
        transparent
      );
    }
  }
  .bg-gray-100 {
    background-color: var(--color-gray-100);
  }
  .bg-gray-100\/80 {
    background-color: #f3f4f6cc;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .bg-gray-100\/80 {
      background-color: color-mix(
        in oklab,
        var(--color-gray-100) 80%,
        transparent
      );
    }
  }
  .bg-gray-200 {
    background-color: var(--color-gray-200);
  }
  .bg-gray-300 {
    background-color: var(--color-gray-300);
  }
  .bg-gray-900 {
    background-color: var(--color-gray-900);
  }
  .bg-green-50 {
    background-color: var(--color-green-50);
  }
  .bg-green-100 {
    background-color: var(--color-green-100);
  }
  .bg-green-500 {
    background-color: var(--color-green-500);
  }
  .bg-green-500\/10 {
    background-color: #00c7581a;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .bg-green-500\/10 {
      background-color: color-mix(
        in oklab,
        var(--color-green-500) 10%,
        transparent
      );
    }
  }
  .bg-green-500\/20 {
    background-color: #00c75833;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .bg-green-500\/20 {
      background-color: color-mix(
        in oklab,
        var(--color-green-500) 20%,
        transparent
      );
    }
  }
  .bg-green-600 {
    background-color: var(--color-green-600);
  }
  .bg-indigo-50 {
    background-color: var(--color-indigo-50);
  }
  .bg-indigo-600 {
    background-color: var(--color-indigo-600);
  }
  .bg-neutral-200 {
    background-color: var(--color-neutral-200);
  }
  .bg-neutral-900 {
    background-color: var(--color-neutral-900);
  }
  .bg-neutral-950 {
    background-color: var(--color-neutral-950);
  }
  .bg-purple-500\/10 {
    background-color: #ac4bff1a;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .bg-purple-500\/10 {
      background-color: color-mix(
        in oklab,
        var(--color-purple-500) 10%,
        transparent
      );
    }
  }
  .bg-red-50 {
    background-color: var(--color-red-50);
  }
  .bg-red-100 {
    background-color: var(--color-red-100);
  }
  .bg-red-500 {
    background-color: var(--color-red-500);
  }
  .bg-red-500\/10 {
    background-color: #fb2c361a;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .bg-red-500\/10 {
      background-color: color-mix(
        in oklab,
        var(--color-red-500) 10%,
        transparent
      );
    }
  }
  .bg-red-600 {
    background-color: var(--color-red-600);
  }
  .bg-transparent {
    background-color: #0000;
  }
  .bg-white {
    background-color: var(--color-white);
  }
  .bg-white\/5 {
    background-color: #ffffff0d;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .bg-white\/5 {
      background-color: color-mix(in oklab, var(--color-white) 5%, transparent);
    }
  }
  .bg-white\/10 {
    background-color: #ffffff1a;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .bg-white\/10 {
      background-color: color-mix(
        in oklab,
        var(--color-white) 10%,
        transparent
      );
    }
  }
  .bg-white\/50 {
    background-color: #ffffff80;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .bg-white\/50 {
      background-color: color-mix(
        in oklab,
        var(--color-white) 50%,
        transparent
      );
    }
  }
  .bg-white\/60 {
    background-color: #fff9;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .bg-white\/60 {
      background-color: color-mix(
        in oklab,
        var(--color-white) 60%,
        transparent
      );
    }
  }
  .bg-white\/70 {
    background-color: #ffffffb3;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .bg-white\/70 {
      background-color: color-mix(
        in oklab,
        var(--color-white) 70%,
        transparent
      );
    }
  }
  .bg-white\/80 {
    background-color: #fffc;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .bg-white\/80 {
      background-color: color-mix(
        in oklab,
        var(--color-white) 80%,
        transparent
      );
    }
  }
  .bg-white\/85 {
    background-color: #ffffffd9;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .bg-white\/85 {
      background-color: color-mix(
        in oklab,
        var(--color-white) 85%,
        transparent
      );
    }
  }
  .bg-white\/90 {
    background-color: #ffffffe6;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .bg-white\/90 {
      background-color: color-mix(
        in oklab,
        var(--color-white) 90%,
        transparent
      );
    }
  }
  .bg-white\/95 {
    background-color: #fffffff2;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .bg-white\/95 {
      background-color: color-mix(
        in oklab,
        var(--color-white) 95%,
        transparent
      );
    }
  }
  .bg-yellow-50 {
    background-color: var(--color-yellow-50);
  }
  .bg-yellow-100 {
    background-color: var(--color-yellow-100);
  }
  .bg-zinc-900 {
    background-color: var(--color-zinc-900);
  }
  .bg-zinc-950\/25 {
    background-color: #09090b40;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .bg-zinc-950\/25 {
      background-color: color-mix(
        in oklab,
        var(--color-zinc-950) 25%,
        transparent
      );
    }
  }
  .bg-linear-to-br {
    --tw-gradient-position: to bottom right;
  }
  @supports (background-image: linear-gradient(in lab, red, red)) {
    .bg-linear-to-br {
      --tw-gradient-position: to bottom right in oklab;
    }
  }
  .bg-linear-to-br {
    background-image: linear-gradient(var(--tw-gradient-stops));
  }
  .bg-linear-to-r {
    --tw-gradient-position: to right;
  }
  @supports (background-image: linear-gradient(in lab, red, red)) {
    .bg-linear-to-r {
      --tw-gradient-position: to right in oklab;
    }
  }
  .bg-linear-to-r {
    background-image: linear-gradient(var(--tw-gradient-stops));
  }
  .bg-gradient-to-br {
    --tw-gradient-position: to bottom right in oklab;
    background-image: linear-gradient(var(--tw-gradient-stops));
  }
  .bg-gradient-to-r {
    --tw-gradient-position: to right in oklab;
    background-image: linear-gradient(var(--tw-gradient-stops));
  }
  .bg-\[linear-gradient\(rgba\(0\,0\,0\,0\.02\)_1px\,transparent_1px\)\,linear-gradient\(90deg\,rgba\(0\,0\,0\,0\.02\)_1px\,transparent_1px\)\] {
    background-image:
      linear-gradient(#00000005 1px, #0000 1px),
      linear-gradient(90deg, #00000005 1px, #0000 1px);
  }
  .bg-\[radial-gradient\(80\%_60\%_at_50\%_0\%\,rgba\(255\,255\,255\,0\.35\)\,transparent_60\%\)\] {
    background-image: radial-gradient(80% 60% at 50% 0, #ffffff59, #0000 60%);
  }
  .from-blue-50 {
    --tw-gradient-from: var(--color-blue-50);
    --tw-gradient-stops: var(
      --tw-gradient-via-stops,
      var(--tw-gradient-position),
      var(--tw-gradient-from) var(--tw-gradient-from-position),
      var(--tw-gradient-to) var(--tw-gradient-to-position)
    );
  }
  .from-blue-100 {
    --tw-gradient-from: var(--color-blue-100);
    --tw-gradient-stops: var(
      --tw-gradient-via-stops,
      var(--tw-gradient-position),
      var(--tw-gradient-from) var(--tw-gradient-from-position),
      var(--tw-gradient-to) var(--tw-gradient-to-position)
    );
  }
  .from-blue-400\/10 {
    --tw-gradient-from: #54a2ff1a;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .from-blue-400\/10 {
      --tw-gradient-from: color-mix(
        in oklab,
        var(--color-blue-400) 10%,
        transparent
      );
    }
  }
  .from-blue-400\/10 {
    --tw-gradient-stops: var(
      --tw-gradient-via-stops,
      var(--tw-gradient-position),
      var(--tw-gradient-from) var(--tw-gradient-from-position),
      var(--tw-gradient-to) var(--tw-gradient-to-position)
    );
  }
  .from-blue-500 {
    --tw-gradient-from: var(--color-blue-500);
    --tw-gradient-stops: var(
      --tw-gradient-via-stops,
      var(--tw-gradient-position),
      var(--tw-gradient-from) var(--tw-gradient-from-position),
      var(--tw-gradient-to) var(--tw-gradient-to-position)
    );
  }
  .from-blue-500\/5 {
    --tw-gradient-from: #3080ff0d;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .from-blue-500\/5 {
      --tw-gradient-from: color-mix(
        in oklab,
        var(--color-blue-500) 5%,
        transparent
      );
    }
  }
  .from-blue-500\/5 {
    --tw-gradient-stops: var(
      --tw-gradient-via-stops,
      var(--tw-gradient-position),
      var(--tw-gradient-from) var(--tw-gradient-from-position),
      var(--tw-gradient-to) var(--tw-gradient-to-position)
    );
  }
  .from-blue-500\/10 {
    --tw-gradient-from: #3080ff1a;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .from-blue-500\/10 {
      --tw-gradient-from: color-mix(
        in oklab,
        var(--color-blue-500) 10%,
        transparent
      );
    }
  }
  .from-blue-500\/10 {
    --tw-gradient-stops: var(
      --tw-gradient-via-stops,
      var(--tw-gradient-position),
      var(--tw-gradient-from) var(--tw-gradient-from-position),
      var(--tw-gradient-to) var(--tw-gradient-to-position)
    );
  }
  .from-blue-500\/20 {
    --tw-gradient-from: #3080ff33;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .from-blue-500\/20 {
      --tw-gradient-from: color-mix(
        in oklab,
        var(--color-blue-500) 20%,
        transparent
      );
    }
  }
  .from-blue-500\/20 {
    --tw-gradient-stops: var(
      --tw-gradient-via-stops,
      var(--tw-gradient-position),
      var(--tw-gradient-from) var(--tw-gradient-from-position),
      var(--tw-gradient-to) var(--tw-gradient-to-position)
    );
  }
  .from-blue-500\/30 {
    --tw-gradient-from: #3080ff4d;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .from-blue-500\/30 {
      --tw-gradient-from: color-mix(
        in oklab,
        var(--color-blue-500) 30%,
        transparent
      );
    }
  }
  .from-blue-500\/30 {
    --tw-gradient-stops: var(
      --tw-gradient-via-stops,
      var(--tw-gradient-position),
      var(--tw-gradient-from) var(--tw-gradient-from-position),
      var(--tw-gradient-to) var(--tw-gradient-to-position)
    );
  }
  .from-blue-500\/50 {
    --tw-gradient-from: #3080ff80;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .from-blue-500\/50 {
      --tw-gradient-from: color-mix(
        in oklab,
        var(--color-blue-500) 50%,
        transparent
      );
    }
  }
  .from-blue-500\/50 {
    --tw-gradient-stops: var(
      --tw-gradient-via-stops,
      var(--tw-gradient-position),
      var(--tw-gradient-from) var(--tw-gradient-from-position),
      var(--tw-gradient-to) var(--tw-gradient-to-position)
    );
  }
  .from-blue-600 {
    --tw-gradient-from: var(--color-blue-600);
    --tw-gradient-stops: var(
      --tw-gradient-via-stops,
      var(--tw-gradient-position),
      var(--tw-gradient-from) var(--tw-gradient-from-position),
      var(--tw-gradient-to) var(--tw-gradient-to-position)
    );
  }
  .from-blue-600\/10 {
    --tw-gradient-from: #155dfc1a;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .from-blue-600\/10 {
      --tw-gradient-from: color-mix(
        in oklab,
        var(--color-blue-600) 10%,
        transparent
      );
    }
  }
  .from-blue-600\/10 {
    --tw-gradient-stops: var(
      --tw-gradient-via-stops,
      var(--tw-gradient-position),
      var(--tw-gradient-from) var(--tw-gradient-from-position),
      var(--tw-gradient-to) var(--tw-gradient-to-position)
    );
  }
  .from-gray-50 {
    --tw-gradient-from: var(--color-gray-50);
    --tw-gradient-stops: var(
      --tw-gradient-via-stops,
      var(--tw-gradient-position),
      var(--tw-gradient-from) var(--tw-gradient-from-position),
      var(--tw-gradient-to) var(--tw-gradient-to-position)
    );
  }
  .from-gray-200 {
    --tw-gradient-from: var(--color-gray-200);
    --tw-gradient-stops: var(
      --tw-gradient-via-stops,
      var(--tw-gradient-position),
      var(--tw-gradient-from) var(--tw-gradient-from-position),
      var(--tw-gradient-to) var(--tw-gradient-to-position)
    );
  }
  .from-green-600 {
    --tw-gradient-from: var(--color-green-600);
    --tw-gradient-stops: var(
      --tw-gradient-via-stops,
      var(--tw-gradient-position),
      var(--tw-gradient-from) var(--tw-gradient-from-position),
      var(--tw-gradient-to) var(--tw-gradient-to-position)
    );
  }
  .from-indigo-50 {
    --tw-gradient-from: var(--color-indigo-50);
    --tw-gradient-stops: var(
      --tw-gradient-via-stops,
      var(--tw-gradient-position),
      var(--tw-gradient-from) var(--tw-gradient-from-position),
      var(--tw-gradient-to) var(--tw-gradient-to-position)
    );
  }
  .from-purple-50 {
    --tw-gradient-from: var(--color-purple-50);
    --tw-gradient-stops: var(
      --tw-gradient-via-stops,
      var(--tw-gradient-position),
      var(--tw-gradient-from) var(--tw-gradient-from-position),
      var(--tw-gradient-to) var(--tw-gradient-to-position)
    );
  }
  .from-purple-400\/10 {
    --tw-gradient-from: #c07eff1a;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .from-purple-400\/10 {
      --tw-gradient-from: color-mix(
        in oklab,
        var(--color-purple-400) 10%,
        transparent
      );
    }
  }
  .from-purple-400\/10 {
    --tw-gradient-stops: var(
      --tw-gradient-via-stops,
      var(--tw-gradient-position),
      var(--tw-gradient-from) var(--tw-gradient-from-position),
      var(--tw-gradient-to) var(--tw-gradient-to-position)
    );
  }
  .from-purple-500\/10 {
    --tw-gradient-from: #ac4bff1a;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .from-purple-500\/10 {
      --tw-gradient-from: color-mix(
        in oklab,
        var(--color-purple-500) 10%,
        transparent
      );
    }
  }
  .from-purple-500\/10 {
    --tw-gradient-stops: var(
      --tw-gradient-via-stops,
      var(--tw-gradient-position),
      var(--tw-gradient-from) var(--tw-gradient-from-position),
      var(--tw-gradient-to) var(--tw-gradient-to-position)
    );
  }
  .from-purple-600 {
    --tw-gradient-from: var(--color-purple-600);
    --tw-gradient-stops: var(
      --tw-gradient-via-stops,
      var(--tw-gradient-position),
      var(--tw-gradient-from) var(--tw-gradient-from-position),
      var(--tw-gradient-to) var(--tw-gradient-to-position)
    );
  }
  .from-transparent {
    --tw-gradient-from: transparent;
    --tw-gradient-stops: var(
      --tw-gradient-via-stops,
      var(--tw-gradient-position),
      var(--tw-gradient-from) var(--tw-gradient-from-position),
      var(--tw-gradient-to) var(--tw-gradient-to-position)
    );
  }
  .from-white\/5 {
    --tw-gradient-from: #ffffff0d;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .from-white\/5 {
      --tw-gradient-from: color-mix(
        in oklab,
        var(--color-white) 5%,
        transparent
      );
    }
  }
  .from-white\/5 {
    --tw-gradient-stops: var(
      --tw-gradient-via-stops,
      var(--tw-gradient-position),
      var(--tw-gradient-from) var(--tw-gradient-from-position),
      var(--tw-gradient-to) var(--tw-gradient-to-position)
    );
  }
  .via-blue-50 {
    --tw-gradient-via: var(--color-blue-50);
    --tw-gradient-via-stops:
      var(--tw-gradient-position),
      var(--tw-gradient-from) var(--tw-gradient-from-position),
      var(--tw-gradient-via) var(--tw-gradient-via-position),
      var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }
  .via-blue-600 {
    --tw-gradient-via: var(--color-blue-600);
    --tw-gradient-via-stops:
      var(--tw-gradient-position),
      var(--tw-gradient-from) var(--tw-gradient-from-position),
      var(--tw-gradient-via) var(--tw-gradient-via-position),
      var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }
  .via-gray-300 {
    --tw-gradient-via: var(--color-gray-300);
    --tw-gradient-via-stops:
      var(--tw-gradient-position),
      var(--tw-gradient-from) var(--tw-gradient-from-position),
      var(--tw-gradient-via) var(--tw-gradient-via-position),
      var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }
  .via-pink-50 {
    --tw-gradient-via: var(--color-pink-50);
    --tw-gradient-via-stops:
      var(--tw-gradient-position),
      var(--tw-gradient-from) var(--tw-gradient-from-position),
      var(--tw-gradient-via) var(--tw-gradient-via-position),
      var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }
  .via-purple-50 {
    --tw-gradient-via: var(--color-purple-50);
    --tw-gradient-via-stops:
      var(--tw-gradient-position),
      var(--tw-gradient-from) var(--tw-gradient-from-position),
      var(--tw-gradient-via) var(--tw-gradient-via-position),
      var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }
  .via-purple-500\/5 {
    --tw-gradient-via: #ac4bff0d;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .via-purple-500\/5 {
      --tw-gradient-via: color-mix(
        in oklab,
        var(--color-purple-500) 5%,
        transparent
      );
    }
  }
  .via-purple-500\/5 {
    --tw-gradient-via-stops:
      var(--tw-gradient-position),
      var(--tw-gradient-from) var(--tw-gradient-from-position),
      var(--tw-gradient-via) var(--tw-gradient-via-position),
      var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }
  .via-purple-500\/10 {
    --tw-gradient-via: #ac4bff1a;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .via-purple-500\/10 {
      --tw-gradient-via: color-mix(
        in oklab,
        var(--color-purple-500) 10%,
        transparent
      );
    }
  }
  .via-purple-500\/10 {
    --tw-gradient-via-stops:
      var(--tw-gradient-position),
      var(--tw-gradient-from) var(--tw-gradient-from-position),
      var(--tw-gradient-via) var(--tw-gradient-via-position),
      var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }
  .via-purple-500\/30 {
    --tw-gradient-via: #ac4bff4d;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .via-purple-500\/30 {
      --tw-gradient-via: color-mix(
        in oklab,
        var(--color-purple-500) 30%,
        transparent
      );
    }
  }
  .via-purple-500\/30 {
    --tw-gradient-via-stops:
      var(--tw-gradient-position),
      var(--tw-gradient-from) var(--tw-gradient-from-position),
      var(--tw-gradient-via) var(--tw-gradient-via-position),
      var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }
  .via-purple-500\/50 {
    --tw-gradient-via: #ac4bff80;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .via-purple-500\/50 {
      --tw-gradient-via: color-mix(
        in oklab,
        var(--color-purple-500) 50%,
        transparent
      );
    }
  }
  .via-purple-500\/50 {
    --tw-gradient-via-stops:
      var(--tw-gradient-position),
      var(--tw-gradient-from) var(--tw-gradient-from-position),
      var(--tw-gradient-via) var(--tw-gradient-via-position),
      var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }
  .via-purple-600 {
    --tw-gradient-via: var(--color-purple-600);
    --tw-gradient-via-stops:
      var(--tw-gradient-position),
      var(--tw-gradient-from) var(--tw-gradient-from-position),
      var(--tw-gradient-via) var(--tw-gradient-via-position),
      var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }
  .via-purple-600\/10 {
    --tw-gradient-via: #9810fa1a;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .via-purple-600\/10 {
      --tw-gradient-via: color-mix(
        in oklab,
        var(--color-purple-600) 10%,
        transparent
      );
    }
  }
  .via-purple-600\/10 {
    --tw-gradient-via-stops:
      var(--tw-gradient-position),
      var(--tw-gradient-from) var(--tw-gradient-from-position),
      var(--tw-gradient-via) var(--tw-gradient-via-position),
      var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }
  .via-white\/20 {
    --tw-gradient-via: #fff3;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .via-white\/20 {
      --tw-gradient-via: color-mix(
        in oklab,
        var(--color-white) 20%,
        transparent
      );
    }
  }
  .via-white\/20 {
    --tw-gradient-via-stops:
      var(--tw-gradient-position),
      var(--tw-gradient-from) var(--tw-gradient-from-position),
      var(--tw-gradient-via) var(--tw-gradient-via-position),
      var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }
  .to-blue-500\/10 {
    --tw-gradient-to: #3080ff1a;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .to-blue-500\/10 {
      --tw-gradient-to: color-mix(
        in oklab,
        var(--color-blue-500) 10%,
        transparent
      );
    }
  }
  .to-blue-500\/10 {
    --tw-gradient-stops: var(
      --tw-gradient-via-stops,
      var(--tw-gradient-position),
      var(--tw-gradient-from) var(--tw-gradient-from-position),
      var(--tw-gradient-to) var(--tw-gradient-to-position)
    );
  }
  .to-cyan-400\/10 {
    --tw-gradient-to: #00d2ef1a;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .to-cyan-400\/10 {
      --tw-gradient-to: color-mix(
        in oklab,
        var(--color-cyan-400) 10%,
        transparent
      );
    }
  }
  .to-cyan-400\/10 {
    --tw-gradient-stops: var(
      --tw-gradient-via-stops,
      var(--tw-gradient-position),
      var(--tw-gradient-from) var(--tw-gradient-from-position),
      var(--tw-gradient-to) var(--tw-gradient-to-position)
    );
  }
  .to-cyan-500\/5 {
    --tw-gradient-to: #00b7d70d;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .to-cyan-500\/5 {
      --tw-gradient-to: color-mix(
        in oklab,
        var(--color-cyan-500) 5%,
        transparent
      );
    }
  }
  .to-cyan-500\/5 {
    --tw-gradient-stops: var(
      --tw-gradient-via-stops,
      var(--tw-gradient-position),
      var(--tw-gradient-from) var(--tw-gradient-from-position),
      var(--tw-gradient-to) var(--tw-gradient-to-position)
    );
  }
  .to-cyan-500\/10 {
    --tw-gradient-to: #00b7d71a;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .to-cyan-500\/10 {
      --tw-gradient-to: color-mix(
        in oklab,
        var(--color-cyan-500) 10%,
        transparent
      );
    }
  }
  .to-cyan-500\/10 {
    --tw-gradient-stops: var(
      --tw-gradient-via-stops,
      var(--tw-gradient-position),
      var(--tw-gradient-from) var(--tw-gradient-from-position),
      var(--tw-gradient-to) var(--tw-gradient-to-position)
    );
  }
  .to-cyan-500\/30 {
    --tw-gradient-to: #00b7d74d;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .to-cyan-500\/30 {
      --tw-gradient-to: color-mix(
        in oklab,
        var(--color-cyan-500) 30%,
        transparent
      );
    }
  }
  .to-cyan-500\/30 {
    --tw-gradient-stops: var(
      --tw-gradient-via-stops,
      var(--tw-gradient-position),
      var(--tw-gradient-from) var(--tw-gradient-from-position),
      var(--tw-gradient-to) var(--tw-gradient-to-position)
    );
  }
  .to-cyan-500\/50 {
    --tw-gradient-to: #00b7d780;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .to-cyan-500\/50 {
      --tw-gradient-to: color-mix(
        in oklab,
        var(--color-cyan-500) 50%,
        transparent
      );
    }
  }
  .to-cyan-500\/50 {
    --tw-gradient-stops: var(
      --tw-gradient-via-stops,
      var(--tw-gradient-position),
      var(--tw-gradient-from) var(--tw-gradient-from-position),
      var(--tw-gradient-to) var(--tw-gradient-to-position)
    );
  }
  .to-cyan-600 {
    --tw-gradient-to: var(--color-cyan-600);
    --tw-gradient-stops: var(
      --tw-gradient-via-stops,
      var(--tw-gradient-position),
      var(--tw-gradient-from) var(--tw-gradient-from-position),
      var(--tw-gradient-to) var(--tw-gradient-to-position)
    );
  }
  .to-cyan-600\/10 {
    --tw-gradient-to: #0092b51a;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .to-cyan-600\/10 {
      --tw-gradient-to: color-mix(
        in oklab,
        var(--color-cyan-600) 10%,
        transparent
      );
    }
  }
  .to-cyan-600\/10 {
    --tw-gradient-stops: var(
      --tw-gradient-via-stops,
      var(--tw-gradient-position),
      var(--tw-gradient-from) var(--tw-gradient-from-position),
      var(--tw-gradient-to) var(--tw-gradient-to-position)
    );
  }
  .to-gray-200 {
    --tw-gradient-to: var(--color-gray-200);
    --tw-gradient-stops: var(
      --tw-gradient-via-stops,
      var(--tw-gradient-position),
      var(--tw-gradient-from) var(--tw-gradient-from-position),
      var(--tw-gradient-to) var(--tw-gradient-to-position)
    );
  }
  .to-gray-300 {
    --tw-gradient-to: var(--color-gray-300);
    --tw-gradient-stops: var(
      --tw-gradient-via-stops,
      var(--tw-gradient-position),
      var(--tw-gradient-from) var(--tw-gradient-from-position),
      var(--tw-gradient-to) var(--tw-gradient-to-position)
    );
  }
  .to-indigo-50 {
    --tw-gradient-to: var(--color-indigo-50);
    --tw-gradient-stops: var(
      --tw-gradient-via-stops,
      var(--tw-gradient-position),
      var(--tw-gradient-from) var(--tw-gradient-from-position),
      var(--tw-gradient-to) var(--tw-gradient-to-position)
    );
  }
  .to-orange-50 {
    --tw-gradient-to: var(--color-orange-50);
    --tw-gradient-stops: var(
      --tw-gradient-via-stops,
      var(--tw-gradient-position),
      var(--tw-gradient-from) var(--tw-gradient-from-position),
      var(--tw-gradient-to) var(--tw-gradient-to-position)
    );
  }
  .to-pink-50 {
    --tw-gradient-to: var(--color-pink-50);
    --tw-gradient-stops: var(
      --tw-gradient-via-stops,
      var(--tw-gradient-position),
      var(--tw-gradient-from) var(--tw-gradient-from-position),
      var(--tw-gradient-to) var(--tw-gradient-to-position)
    );
  }
  .to-pink-600 {
    --tw-gradient-to: var(--color-pink-600);
    --tw-gradient-stops: var(
      --tw-gradient-via-stops,
      var(--tw-gradient-position),
      var(--tw-gradient-from) var(--tw-gradient-from-position),
      var(--tw-gradient-to) var(--tw-gradient-to-position)
    );
  }
  .to-purple-50 {
    --tw-gradient-to: var(--color-purple-50);
    --tw-gradient-stops: var(
      --tw-gradient-via-stops,
      var(--tw-gradient-position),
      var(--tw-gradient-from) var(--tw-gradient-from-position),
      var(--tw-gradient-to) var(--tw-gradient-to-position)
    );
  }
  .to-purple-100 {
    --tw-gradient-to: var(--color-purple-100);
    --tw-gradient-stops: var(
      --tw-gradient-via-stops,
      var(--tw-gradient-position),
      var(--tw-gradient-from) var(--tw-gradient-from-position),
      var(--tw-gradient-to) var(--tw-gradient-to-position)
    );
  }
  .to-purple-400\/10 {
    --tw-gradient-to: #c07eff1a;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .to-purple-400\/10 {
      --tw-gradient-to: color-mix(
        in oklab,
        var(--color-purple-400) 10%,
        transparent
      );
    }
  }
  .to-purple-400\/10 {
    --tw-gradient-stops: var(
      --tw-gradient-via-stops,
      var(--tw-gradient-position),
      var(--tw-gradient-from) var(--tw-gradient-from-position),
      var(--tw-gradient-to) var(--tw-gradient-to-position)
    );
  }
  .to-purple-500\/5 {
    --tw-gradient-to: #ac4bff0d;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .to-purple-500\/5 {
      --tw-gradient-to: color-mix(
        in oklab,
        var(--color-purple-500) 5%,
        transparent
      );
    }
  }
  .to-purple-500\/5 {
    --tw-gradient-stops: var(
      --tw-gradient-via-stops,
      var(--tw-gradient-position),
      var(--tw-gradient-from) var(--tw-gradient-from-position),
      var(--tw-gradient-to) var(--tw-gradient-to-position)
    );
  }
  .to-purple-500\/20 {
    --tw-gradient-to: #ac4bff33;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .to-purple-500\/20 {
      --tw-gradient-to: color-mix(
        in oklab,
        var(--color-purple-500) 20%,
        transparent
      );
    }
  }
  .to-purple-500\/20 {
    --tw-gradient-stops: var(
      --tw-gradient-via-stops,
      var(--tw-gradient-position),
      var(--tw-gradient-from) var(--tw-gradient-from-position),
      var(--tw-gradient-to) var(--tw-gradient-to-position)
    );
  }
  .to-purple-600 {
    --tw-gradient-to: var(--color-purple-600);
    --tw-gradient-stops: var(
      --tw-gradient-via-stops,
      var(--tw-gradient-position),
      var(--tw-gradient-from) var(--tw-gradient-from-position),
      var(--tw-gradient-to) var(--tw-gradient-to-position)
    );
  }
  .to-transparent {
    --tw-gradient-to: transparent;
    --tw-gradient-stops: var(
      --tw-gradient-via-stops,
      var(--tw-gradient-position),
      var(--tw-gradient-from) var(--tw-gradient-from-position),
      var(--tw-gradient-to) var(--tw-gradient-to-position)
    );
  }
  .to-white {
    --tw-gradient-to: var(--color-white);
    --tw-gradient-stops: var(
      --tw-gradient-via-stops,
      var(--tw-gradient-position),
      var(--tw-gradient-from) var(--tw-gradient-from-position),
      var(--tw-gradient-to) var(--tw-gradient-to-position)
    );
  }
  .to-white\/10 {
    --tw-gradient-to: #ffffff1a;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .to-white\/10 {
      --tw-gradient-to: color-mix(
        in oklab,
        var(--color-white) 10%,
        transparent
      );
    }
  }
  .to-white\/10 {
    --tw-gradient-stops: var(
      --tw-gradient-via-stops,
      var(--tw-gradient-position),
      var(--tw-gradient-from) var(--tw-gradient-from-position),
      var(--tw-gradient-to) var(--tw-gradient-to-position)
    );
  }
  .bg-\[size\:30px_30px\] {
    background-size: 30px 30px;
  }
  .bg-\[size\:50px_50px\] {
    background-size: 50px 50px;
  }
  .bg-clip-text {
    -webkit-background-clip: text;
    background-clip: text;
  }
  .object-contain {
    object-fit: contain;
  }
  .object-cover {
    object-fit: cover;
  }
  .p-\(--gutter\) {
    padding: var(--gutter);
  }
  .p-1 {
    padding: calc(var(--spacing) * 1);
  }
  .p-1\.5 {
    padding: calc(var(--spacing) * 1.5);
  }
  .p-2 {
    padding: calc(var(--spacing) * 2);
  }
  .p-3 {
    padding: calc(var(--spacing) * 3);
  }
  .p-4 {
    padding: calc(var(--spacing) * 4);
  }
  .p-5 {
    padding: calc(var(--spacing) * 5);
  }
  .p-6 {
    padding: calc(var(--spacing) * 6);
  }
  .p-8 {
    padding: calc(var(--spacing) * 8);
  }
  .px-0 {
    padding-inline: calc(var(--spacing) * 0);
  }
  .px-1 {
    padding-inline: calc(var(--spacing) * 1);
  }
  .px-2 {
    padding-inline: calc(var(--spacing) * 2);
  }
  .px-3 {
    padding-inline: calc(var(--spacing) * 3);
  }
  .px-4 {
    padding-inline: calc(var(--spacing) * 4);
  }
  .px-5 {
    padding-inline: calc(var(--spacing) * 5);
  }
  .px-6 {
    padding-inline: calc(var(--spacing) * 6);
  }
  .px-8 {
    padding-inline: calc(var(--spacing) * 8);
  }
  .px-\[calc\(--spacing\(3\.5\)-1px\)\] {
    padding-inline: calc(calc(var(--spacing) * 3.5) - 1px);
  }
  .py-0\.5 {
    padding-block: calc(var(--spacing) * 0.5);
  }
  .py-1 {
    padding-block: calc(var(--spacing) * 1);
  }
  .py-1\.5 {
    padding-block: calc(var(--spacing) * 1.5);
  }
  .py-2 {
    padding-block: calc(var(--spacing) * 2);
  }
  .py-3 {
    padding-block: calc(var(--spacing) * 3);
  }
  .py-3\.5 {
    padding-block: calc(var(--spacing) * 3.5);
  }
  .py-4 {
    padding-block: calc(var(--spacing) * 4);
  }
  .py-5 {
    padding-block: calc(var(--spacing) * 5);
  }
  .py-6 {
    padding-block: calc(var(--spacing) * 6);
  }
  .py-8 {
    padding-block: calc(var(--spacing) * 8);
  }
  .py-12 {
    padding-block: calc(var(--spacing) * 12);
  }
  .py-16 {
    padding-block: calc(var(--spacing) * 16);
  }
  .py-20 {
    padding-block: calc(var(--spacing) * 20);
  }
  .py-24 {
    padding-block: calc(var(--spacing) * 24);
  }
  .py-\[calc\(--spacing\(2\.5\)-1px\)\] {
    padding-block: calc(calc(var(--spacing) * 2.5) - 1px);
  }
  .pt-1 {
    padding-top: calc(var(--spacing) * 1);
  }
  .pt-2 {
    padding-top: calc(var(--spacing) * 2);
  }
  .pt-3 {
    padding-top: calc(var(--spacing) * 3);
  }
  .pt-4 {
    padding-top: calc(var(--spacing) * 4);
  }
  .pt-5 {
    padding-top: calc(var(--spacing) * 5);
  }
  .pt-6 {
    padding-top: calc(var(--spacing) * 6);
  }
  .pt-8 {
    padding-top: calc(var(--spacing) * 8);
  }
  .pr-1 {
    padding-right: calc(var(--spacing) * 1);
  }
  .pr-2 {
    padding-right: calc(var(--spacing) * 2);
  }
  .pr-3 {
    padding-right: calc(var(--spacing) * 3);
  }
  .pr-4 {
    padding-right: calc(var(--spacing) * 4);
  }
  .pr-5 {
    padding-right: calc(var(--spacing) * 5);
  }
  .pr-8 {
    padding-right: calc(var(--spacing) * 8);
  }
  .pr-10 {
    padding-right: calc(var(--spacing) * 10);
  }
  .pr-24 {
    padding-right: calc(var(--spacing) * 24);
  }
  .pr-28 {
    padding-right: calc(var(--spacing) * 28);
  }
  .pr-36 {
    padding-right: calc(var(--spacing) * 36);
  }
  .pb-1 {
    padding-bottom: calc(var(--spacing) * 1);
  }
  .pb-2 {
    padding-bottom: calc(var(--spacing) * 2);
  }
  .pb-3 {
    padding-bottom: calc(var(--spacing) * 3);
  }
  .pb-4 {
    padding-bottom: calc(var(--spacing) * 4);
  }
  .pb-5 {
    padding-bottom: calc(var(--spacing) * 5);
  }
  .pl-1 {
    padding-left: calc(var(--spacing) * 1);
  }
  .pl-2 {
    padding-left: calc(var(--spacing) * 2);
  }
  .pl-3 {
    padding-left: calc(var(--spacing) * 3);
  }
  .pl-4 {
    padding-left: calc(var(--spacing) * 4);
  }
  .pl-5 {
    padding-left: calc(var(--spacing) * 5);
  }
  .pl-12 {
    padding-left: calc(var(--spacing) * 12);
  }
  .text-center {
    text-align: center;
  }
  .text-left {
    text-align: left;
  }
  .align-middle {
    vertical-align: middle;
  }
  .font-mono {
    font-family: var(--font-mono);
  }
  .font-sans {
    font-family: var(--font-sans);
  }
  .text-2xl {
    font-size: var(--text-2xl);
    line-height: var(--tw-leading, var(--text-2xl--line-height));
  }
  .text-3xl {
    font-size: var(--text-3xl);
    line-height: var(--tw-leading, var(--text-3xl--line-height));
  }
  .text-4xl {
    font-size: var(--text-4xl);
    line-height: var(--tw-leading, var(--text-4xl--line-height));
  }
  .text-5xl {
    font-size: var(--text-5xl);
    line-height: var(--tw-leading, var(--text-5xl--line-height));
  }
  .text-6xl {
    font-size: var(--text-6xl);
    line-height: var(--tw-leading, var(--text-6xl--line-height));
  }
  .text-9xl {
    font-size: var(--text-9xl);
    line-height: var(--tw-leading, var(--text-9xl--line-height));
  }
  .text-base {
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
  }
  .text-base\/6 {
    font-size: var(--text-base);
    line-height: calc(var(--spacing) * 6);
  }
  .text-lg {
    font-size: var(--text-lg);
    line-height: var(--tw-leading, var(--text-lg--line-height));
  }
  .text-lg\/6 {
    font-size: var(--text-lg);
    line-height: calc(var(--spacing) * 6);
  }
  .text-sm {
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }
  .text-sm\/6 {
    font-size: var(--text-sm);
    line-height: calc(var(--spacing) * 6);
  }
  .text-xl {
    font-size: var(--text-xl);
    line-height: var(--tw-leading, var(--text-xl--line-height));
  }
  .text-xs {
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
  }
  .text-\[10px\] {
    font-size: 10px;
  }
  .text-\[11px\] {
    font-size: 11px;
  }
  .text-\[12px\] {
    font-size: 12px;
  }
  .text-\[16px\] {
    font-size: 16px;
  }
  .leading-6 {
    --tw-leading: calc(var(--spacing) * 6);
    line-height: calc(var(--spacing) * 6);
  }
  .leading-8 {
    --tw-leading: calc(var(--spacing) * 8);
    line-height: calc(var(--spacing) * 8);
  }
  .leading-\[1\.1\] {
    --tw-leading: 1.1;
    line-height: 1.1;
  }
  .leading-none {
    --tw-leading: 1;
    line-height: 1;
  }
  .leading-relaxed {
    --tw-leading: var(--leading-relaxed);
    line-height: var(--leading-relaxed);
  }
  .leading-snug {
    --tw-leading: var(--leading-snug);
    line-height: var(--leading-snug);
  }
  .leading-tight {
    --tw-leading: var(--leading-tight);
    line-height: var(--leading-tight);
  }
  .font-bold {
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
  }
  .font-extrabold {
    --tw-font-weight: var(--font-weight-extrabold);
    font-weight: var(--font-weight-extrabold);
  }
  .font-light {
    --tw-font-weight: var(--font-weight-light);
    font-weight: var(--font-weight-light);
  }
  .font-medium {
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
  }
  .font-normal {
    --tw-font-weight: var(--font-weight-normal);
    font-weight: var(--font-weight-normal);
  }
  .font-semibold {
    --tw-font-weight: var(--font-weight-semibold);
    font-weight: var(--font-weight-semibold);
  }
  .tracking-\[-0\.03em\] {
    --tw-tracking: -0.03em;
    letter-spacing: -0.03em;
  }
  .tracking-\[0\.08em\] {
    --tw-tracking: 0.08em;
    letter-spacing: 0.08em;
  }
  .tracking-tight {
    --tw-tracking: var(--tracking-tight);
    letter-spacing: var(--tracking-tight);
  }
  .tracking-tighter {
    --tw-tracking: var(--tracking-tighter);
    letter-spacing: var(--tracking-tighter);
  }
  .tracking-wider {
    --tw-tracking: var(--tracking-wider);
    letter-spacing: var(--tracking-wider);
  }
  .text-balance {
    text-wrap: balance;
  }
  .text-pretty {
    text-wrap: pretty;
  }
  .whitespace-nowrap {
    white-space: nowrap;
  }
  .text-\[var\(--fg\)\] {
    color: var(--fg);
  }
  .text-\[var\(--muted\)\] {
    color: var(--muted);
  }
  .text-black {
    color: var(--color-black);
  }
  .text-blue-400 {
    color: var(--color-blue-400);
  }
  .text-blue-500 {
    color: var(--color-blue-500);
  }
  .text-blue-600 {
    color: var(--color-blue-600);
  }
  .text-blue-700 {
    color: var(--color-blue-700);
  }
  .text-blue-800 {
    color: var(--color-blue-800);
  }
  .text-blue-900 {
    color: var(--color-blue-900);
  }
  .text-current {
    color: currentColor;
  }
  .text-gray-50 {
    color: var(--color-gray-50);
  }
  .text-gray-200 {
    color: var(--color-gray-200);
  }
  .text-gray-300 {
    color: var(--color-gray-300);
  }
  .text-gray-400 {
    color: var(--color-gray-400);
  }
  .text-gray-500 {
    color: var(--color-gray-500);
  }
  .text-gray-600 {
    color: var(--color-gray-600);
  }
  .text-gray-700 {
    color: var(--color-gray-700);
  }
  .text-gray-800 {
    color: var(--color-gray-800);
  }
  .text-gray-900 {
    color: var(--color-gray-900);
  }
  .text-green-400 {
    color: var(--color-green-400);
  }
  .text-green-600 {
    color: var(--color-green-600);
  }
  .text-green-700 {
    color: var(--color-green-700);
  }
  .text-green-800 {
    color: var(--color-green-800);
  }
  .text-green-900 {
    color: var(--color-green-900);
  }
  .text-indigo-400 {
    color: var(--color-indigo-400);
  }
  .text-indigo-600 {
    color: var(--color-indigo-600);
  }
  .text-neutral-500 {
    color: var(--color-neutral-500);
  }
  .text-neutral-800 {
    color: var(--color-neutral-800);
  }
  .text-purple-400 {
    color: var(--color-purple-400);
  }
  .text-red-400 {
    color: var(--color-red-400);
  }
  .text-red-500 {
    color: var(--color-red-500);
  }
  .text-red-600 {
    color: var(--color-red-600);
  }
  .text-red-800 {
    color: var(--color-red-800);
  }
  .text-red-900 {
    color: var(--color-red-900);
  }
  .text-sky-600 {
    color: var(--color-sky-600);
  }
  .text-transparent {
    color: #0000;
  }
  .text-white {
    color: var(--color-white);
  }
  .text-white\/50 {
    color: #ffffff80;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .text-white\/50 {
      color: color-mix(in oklab, var(--color-white) 50%, transparent);
    }
  }
  .text-white\/60 {
    color: #fff9;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .text-white\/60 {
      color: color-mix(in oklab, var(--color-white) 60%, transparent);
    }
  }
  .text-white\/70 {
    color: #ffffffb3;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .text-white\/70 {
      color: color-mix(in oklab, var(--color-white) 70%, transparent);
    }
  }
  .text-white\/80 {
    color: #fffc;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .text-white\/80 {
      color: color-mix(in oklab, var(--color-white) 80%, transparent);
    }
  }
  .text-yellow-400 {
    color: var(--color-yellow-400);
  }
  .text-yellow-800 {
    color: var(--color-yellow-800);
  }
  .text-yellow-900 {
    color: var(--color-yellow-900);
  }
  .text-zinc-500 {
    color: var(--color-zinc-500);
  }
  .text-zinc-600 {
    color: var(--color-zinc-600);
  }
  .text-zinc-950 {
    color: var(--color-zinc-950);
  }
  .capitalize {
    text-transform: capitalize;
  }
  .lowercase {
    text-transform: lowercase;
  }
  .uppercase {
    text-transform: uppercase;
  }
  .italic {
    font-style: italic;
  }
  .tabular-nums {
    --tw-numeric-spacing: tabular-nums;
    font-variant-numeric: var(--tw-ordinal,) var(--tw-slashed-zero,)
      var(--tw-numeric-figure,) var(--tw-numeric-spacing,)
      var(--tw-numeric-fraction,);
  }
  .line-through {
    text-decoration-line: line-through;
  }
  .overline {
    text-decoration-line: overline;
  }
  .underline {
    text-decoration-line: underline;
  }
  .antialiased {
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
  }
  .placeholder-gray-500::placeholder {
    color: var(--color-gray-500);
  }
  .placeholder-white\/70::placeholder {
    color: #ffffffb3;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .placeholder-white\/70::placeholder {
      color: color-mix(in oklab, var(--color-white) 70%, transparent);
    }
  }
  .opacity-0 {
    opacity: 0;
  }
  .opacity-25 {
    opacity: 0.25;
  }
  .opacity-40 {
    opacity: 0.4;
  }
  .opacity-50 {
    opacity: 0.5;
  }
  .opacity-60 {
    opacity: 0.6;
  }
  .opacity-70 {
    opacity: 0.7;
  }
  .opacity-75 {
    opacity: 0.75;
  }
  .opacity-80 {
    opacity: 0.8;
  }
  .opacity-90 {
    opacity: 0.9;
  }
  .opacity-100 {
    opacity: 1;
  }
  .shadow {
    --tw-shadow:
      0 1px 3px 0 var(--tw-shadow-color, #0000001a),
      0 1px 2px -1px var(--tw-shadow-color, #0000001a);
    box-shadow:
      var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
      var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-2xl {
    --tw-shadow: 0 25px 50px -12px var(--tw-shadow-color, #00000040);
    box-shadow:
      var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
      var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-\[0_15px_40px_-20px_rgba\(0\,0\,0\,0\.6\)\] {
    --tw-shadow: 0 15px 40px -20px var(--tw-shadow-color, #0009);
    box-shadow:
      var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
      var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-lg {
    --tw-shadow:
      0 10px 15px -3px var(--tw-shadow-color, #0000001a),
      0 4px 6px -4px var(--tw-shadow-color, #0000001a);
    box-shadow:
      var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
      var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-md {
    --tw-shadow:
      0 4px 6px -1px var(--tw-shadow-color, #0000001a),
      0 2px 4px -2px var(--tw-shadow-color, #0000001a);
    box-shadow:
      var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
      var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-none {
    --tw-shadow: 0 0 #0000;
    box-shadow:
      var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
      var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-sm {
    --tw-shadow:
      0 1px 3px 0 var(--tw-shadow-color, #0000001a),
      0 1px 2px -1px var(--tw-shadow-color, #0000001a);
    box-shadow:
      var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
      var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-xl {
    --tw-shadow:
      0 20px 25px -5px var(--tw-shadow-color, #0000001a),
      0 8px 10px -6px var(--tw-shadow-color, #0000001a);
    box-shadow:
      var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
      var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-xs {
    --tw-shadow: 0 1px 2px 0 var(--tw-shadow-color, #0000000d);
    box-shadow:
      var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
      var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .ring {
    --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0
      calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
    box-shadow:
      var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
      var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .ring-0 {
    --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0
      calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
    box-shadow:
      var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
      var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .ring-1 {
    --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0
      calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
    box-shadow:
      var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
      var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .ring-2 {
    --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0
      calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
    box-shadow:
      var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
      var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-black\/5 {
    --tw-shadow-color: #0000000d;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .shadow-black\/5 {
      --tw-shadow-color: color-mix(
        in oklab,
        color-mix(in oklab, var(--color-black) 5%, transparent)
          var(--tw-shadow-alpha),
        transparent
      );
    }
  }
  .ring-\[var\(--border\)\] {
    --tw-ring-color: var(--border);
  }
  .ring-black\/5 {
    --tw-ring-color: #0000000d;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .ring-black\/5 {
      --tw-ring-color: color-mix(in oklab, var(--color-black) 5%, transparent);
    }
  }
  .ring-black\/10 {
    --tw-ring-color: #0000001a;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .ring-black\/10 {
      --tw-ring-color: color-mix(in oklab, var(--color-black) 10%, transparent);
    }
  }
  .ring-blue-700\/10 {
    --tw-ring-color: #1447e61a;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .ring-blue-700\/10 {
      --tw-ring-color: color-mix(
        in oklab,
        var(--color-blue-700) 10%,
        transparent
      );
    }
  }
  .ring-gray-300 {
    --tw-ring-color: var(--color-gray-300);
  }
  .ring-purple-200\/60 {
    --tw-ring-color: #e9d5ff99;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .ring-purple-200\/60 {
      --tw-ring-color: color-mix(
        in oklab,
        var(--color-purple-200) 60%,
        transparent
      );
    }
  }
  .ring-red-500\/50 {
    --tw-ring-color: #fb2c3680;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .ring-red-500\/50 {
      --tw-ring-color: color-mix(
        in oklab,
        var(--color-red-500) 50%,
        transparent
      );
    }
  }
  .ring-white\/10 {
    --tw-ring-color: #ffffff1a;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .ring-white\/10 {
      --tw-ring-color: color-mix(in oklab, var(--color-white) 10%, transparent);
    }
  }
  .ring-white\/15 {
    --tw-ring-color: #ffffff26;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .ring-white\/15 {
      --tw-ring-color: color-mix(in oklab, var(--color-white) 15%, transparent);
    }
  }
  .ring-white\/20 {
    --tw-ring-color: #fff3;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .ring-white\/20 {
      --tw-ring-color: color-mix(in oklab, var(--color-white) 20%, transparent);
    }
  }
  .ring-zinc-950\/10 {
    --tw-ring-color: #09090b1a;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .ring-zinc-950\/10 {
      --tw-ring-color: color-mix(
        in oklab,
        var(--color-zinc-950) 10%,
        transparent
      );
    }
  }
  .outline {
    outline-style: var(--tw-outline-style);
    outline-width: 1px;
  }
  .blur {
    --tw-blur: blur(8px);
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,)
      var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,)
      var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .blur-3xl {
    --tw-blur: blur(var(--blur-3xl));
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,)
      var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,)
      var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .blur-lg {
    --tw-blur: blur(var(--blur-lg));
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,)
      var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,)
      var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .blur-sm {
    --tw-blur: blur(var(--blur-sm));
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,)
      var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,)
      var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .blur-xl {
    --tw-blur: blur(var(--blur-xl));
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,)
      var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,)
      var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .grayscale {
    --tw-grayscale: grayscale(100%);
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,)
      var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,)
      var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .filter {
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,)
      var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,)
      var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .backdrop-blur {
    --tw-backdrop-blur: blur(8px);
    -webkit-backdrop-filter: var(--tw-backdrop-blur,)
      var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,)
      var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,)
      var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,)
      var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,)
      var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,)
      var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,)
      var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,)
      var(--tw-backdrop-sepia,);
  }
  .backdrop-blur-lg {
    --tw-backdrop-blur: blur(var(--blur-lg));
    -webkit-backdrop-filter: var(--tw-backdrop-blur,)
      var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,)
      var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,)
      var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,)
      var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,)
      var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,)
      var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,)
      var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,)
      var(--tw-backdrop-sepia,);
  }
  .backdrop-blur-md {
    --tw-backdrop-blur: blur(var(--blur-md));
    -webkit-backdrop-filter: var(--tw-backdrop-blur,)
      var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,)
      var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,)
      var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,)
      var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,)
      var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,)
      var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,)
      var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,)
      var(--tw-backdrop-sepia,);
  }
  .backdrop-blur-sm {
    --tw-backdrop-blur: blur(var(--blur-sm));
    -webkit-backdrop-filter: var(--tw-backdrop-blur,)
      var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,)
      var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,)
      var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,)
      var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,)
      var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,)
      var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,)
      var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,)
      var(--tw-backdrop-sepia,);
  }
  .backdrop-blur-xl {
    --tw-backdrop-blur: blur(var(--blur-xl));
    -webkit-backdrop-filter: var(--tw-backdrop-blur,)
      var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,)
      var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,)
      var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,)
      var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,)
      var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,)
      var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,)
      var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,)
      var(--tw-backdrop-sepia,);
  }
  .backdrop-blur-xs {
    --tw-backdrop-blur: blur(var(--blur-xs));
    -webkit-backdrop-filter: var(--tw-backdrop-blur,)
      var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,)
      var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,)
      var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,)
      var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,)
      var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,)
      var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,)
      var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,)
      var(--tw-backdrop-sepia,);
  }
  .transition {
    transition-property:
      color,
      background-color,
      border-color,
      outline-color,
      text-decoration-color,
      fill,
      stroke,
      --tw-gradient-from,
      --tw-gradient-via,
      --tw-gradient-to,
      opacity,
      box-shadow,
      transform,
      translate,
      scale,
      rotate,
      filter,
      -webkit-backdrop-filter,
      backdrop-filter,
      display,
      visibility,
      content-visibility,
      overlay,
      pointer-events;
    transition-timing-function: var(
      --tw-ease,
      var(--default-transition-timing-function)
    );
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-all {
    transition-property: all;
    transition-timing-function: var(
      --tw-ease,
      var(--default-transition-timing-function)
    );
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-colors {
    transition-property:
      color, background-color, border-color, outline-color,
      text-decoration-color, fill, stroke, --tw-gradient-from,
      --tw-gradient-via, --tw-gradient-to;
    transition-timing-function: var(
      --tw-ease,
      var(--default-transition-timing-function)
    );
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-opacity {
    transition-property: opacity;
    transition-timing-function: var(
      --tw-ease,
      var(--default-transition-timing-function)
    );
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-shadow {
    transition-property: box-shadow;
    transition-timing-function: var(
      --tw-ease,
      var(--default-transition-timing-function)
    );
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-transform {
    transition-property: transform, translate, scale, rotate;
    transition-timing-function: var(
      --tw-ease,
      var(--default-transition-timing-function)
    );
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .duration-100 {
    --tw-duration: 0.1s;
    transition-duration: 0.1s;
  }
  .duration-150 {
    --tw-duration: 0.15s;
    transition-duration: 0.15s;
  }
  .duration-200 {
    --tw-duration: 0.2s;
    transition-duration: 0.2s;
  }
  .duration-250 {
    --tw-duration: 0.25s;
    transition-duration: 0.25s;
  }
  .duration-300 {
    --tw-duration: 0.3s;
    transition-duration: 0.3s;
  }
  .duration-500 {
    --tw-duration: 0.5s;
    transition-duration: 0.5s;
  }
  .ease-in {
    --tw-ease: var(--ease-in);
    transition-timing-function: var(--ease-in);
  }
  .ease-in-out {
    --tw-ease: var(--ease-in-out);
    transition-timing-function: var(--ease-in-out);
  }
  .ease-out {
    --tw-ease: var(--ease-out);
    transition-timing-function: var(--ease-out);
  }
  .will-change-transform {
    will-change: transform;
  }
  .prose-invert {
    --tw-prose-body: var(--tw-prose-invert-body);
    --tw-prose-headings: var(--tw-prose-invert-headings);
    --tw-prose-lead: var(--tw-prose-invert-lead);
    --tw-prose-links: var(--tw-prose-invert-links);
    --tw-prose-bold: var(--tw-prose-invert-bold);
    --tw-prose-counters: var(--tw-prose-invert-counters);
    --tw-prose-bullets: var(--tw-prose-invert-bullets);
    --tw-prose-hr: var(--tw-prose-invert-hr);
    --tw-prose-quotes: var(--tw-prose-invert-quotes);
    --tw-prose-quote-borders: var(--tw-prose-invert-quote-borders);
    --tw-prose-captions: var(--tw-prose-invert-captions);
    --tw-prose-kbd: var(--tw-prose-invert-kbd);
    --tw-prose-kbd-shadows: var(--tw-prose-invert-kbd-shadows);
    --tw-prose-code: var(--tw-prose-invert-code);
    --tw-prose-pre-code: var(--tw-prose-invert-pre-code);
    --tw-prose-pre-bg: var(--tw-prose-invert-pre-bg);
    --tw-prose-th-borders: var(--tw-prose-invert-th-borders);
    --tw-prose-td-borders: var(--tw-prose-invert-td-borders);
  }
  .outline-none {
    --tw-outline-style: none;
    outline-style: none;
  }
  .outline-solid {
    --tw-outline-style: solid;
    outline-style: solid;
  }
  .select-none {
    -webkit-user-select: none;
    user-select: none;
  }
  .\[--gutter\:--spacing\(8\)\] {
    --gutter: calc(var(--spacing) * 8);
  }
  .\[-ms-overflow-style\:none\] {
    -ms-overflow-style: none;
  }
  .\[scrollbar-width\:none\] {
    scrollbar-width: none;
  }
  .ring-inset {
    --tw-ring-inset: inset;
  }
  :is(.\*\:w-full > *) {
    width: 100%;
  }
  @media (hover: hover) {
    .group-hover\:translate-x-1:is(:where(.group):hover *) {
      --tw-translate-x: calc(var(--spacing) * 1);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
    .group-hover\:text-\[var\(--fg\)\]:is(:where(.group):hover *) {
      color: var(--fg);
    }
    .group-hover\:text-\[var\(--muted\)\]:is(:where(.group):hover *) {
      color: var(--muted);
    }
    .group-hover\:text-blue-400:is(:where(.group):hover *) {
      color: var(--color-blue-400);
    }
    .group-hover\:opacity-60:is(:where(.group):hover *) {
      opacity: 0.6;
    }
    .group-hover\:opacity-100:is(:where(.group):hover *) {
      opacity: 1;
    }
    .group-hover\:ring-gray-400:is(:where(.group):hover *) {
      --tw-ring-color: var(--color-gray-400);
    }
    .group-hover\:ring-white\/25:is(:where(.group):hover *) {
      --tw-ring-color: #ffffff40;
    }
    @supports (color: color-mix(in lab, red, red)) {
      .group-hover\:ring-white\/25:is(:where(.group):hover *) {
        --tw-ring-color: color-mix(
          in oklab,
          var(--color-white) 25%,
          transparent
        );
      }
    }
    .group-hover\:ring-white\/40:is(:where(.group):hover *) {
      --tw-ring-color: #fff6;
    }
    @supports (color: color-mix(in lab, red, red)) {
      .group-hover\:ring-white\/40:is(:where(.group):hover *) {
        --tw-ring-color: color-mix(
          in oklab,
          var(--color-white) 40%,
          transparent
        );
      }
    }
  }
  .placeholder\:text-zinc-400::placeholder {
    color: var(--color-zinc-400);
  }
  .placeholder\:text-zinc-500::placeholder {
    color: var(--color-zinc-500);
  }
  .before\:pointer-events-none:before {
    content: var(--tw-content);
    pointer-events: none;
  }
  .before\:absolute:before {
    content: var(--tw-content);
    position: absolute;
  }
  .before\:inset-0:before {
    content: var(--tw-content);
    inset: calc(var(--spacing) * 0);
  }
  .before\:inset-px:before {
    content: var(--tw-content);
    top: 1px;
    right: 1px;
    bottom: 1px;
    left: 1px;
  }
  .before\:rounded-\[calc\(var\(--radius-lg\)-1px\)\]:before {
    content: var(--tw-content);
    border-radius: calc(var(--radius-lg) - 1px);
  }
  .before\:rounded-xl:before {
    content: var(--tw-content);
    border-radius: var(--radius-xl);
  }
  .before\:bg-white:before {
    content: var(--tw-content);
    background-color: var(--color-white);
  }
  .before\:bg-\[radial-gradient\(80\%_60\%_at_50\%_0\%\,rgba\(255\,255\,255\,0\.35\)\,transparent_60\%\)\]:before {
    content: var(--tw-content);
    background-image: radial-gradient(80% 60% at 50% 0, #ffffff59, #0000 60%);
  }
  .before\:opacity-0:before {
    content: var(--tw-content);
    opacity: 0;
  }
  .before\:shadow-xs:before {
    content: var(--tw-content);
    --tw-shadow: 0 1px 2px 0 var(--tw-shadow-color, #0000000d);
    box-shadow:
      var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
      var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .before\:transition-opacity:before {
    content: var(--tw-content);
    transition-property: opacity;
    transition-timing-function: var(
      --tw-ease,
      var(--default-transition-timing-function)
    );
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .before\:duration-300:before {
    content: var(--tw-content);
    --tw-duration: 0.3s;
    transition-duration: 0.3s;
  }
  @media (hover: hover) {
    .group-hover\:before\:opacity-100:is(:where(.group):hover *):before {
      content: var(--tw-content);
      opacity: 1;
    }
  }
  .after\:pointer-events-none:after {
    content: var(--tw-content);
    pointer-events: none;
  }
  .after\:absolute:after {
    content: var(--tw-content);
    position: absolute;
  }
  .after\:inset-0:after {
    content: var(--tw-content);
    inset: calc(var(--spacing) * 0);
  }
  .after\:rounded-lg:after {
    content: var(--tw-content);
    border-radius: var(--radius-lg);
  }
  .after\:ring-transparent:after {
    content: var(--tw-content);
    --tw-ring-color: transparent;
  }
  .after\:ring-inset:after {
    content: var(--tw-content);
    --tw-ring-inset: inset;
  }
  .first\:ml-2:first-child {
    margin-left: calc(var(--spacing) * 2);
  }
  .last\:mr-2:last-child {
    margin-right: calc(var(--spacing) * 2);
  }
  .focus-within\:shadow-lg:focus-within {
    --tw-shadow:
      0 10px 15px -3px var(--tw-shadow-color, #0000001a),
      0 4px 6px -4px var(--tw-shadow-color, #0000001a);
    box-shadow:
      var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
      var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .focus-within\:ring-2:focus-within {
    --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0
      calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
    box-shadow:
      var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
      var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .focus-within\:ring-red-500\/50:focus-within {
    --tw-ring-color: #fb2c3680;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .focus-within\:ring-red-500\/50:focus-within {
      --tw-ring-color: color-mix(
        in oklab,
        var(--color-red-500) 50%,
        transparent
      );
    }
  }
  .focus-within\:ring-white\/20:focus-within {
    --tw-ring-color: #fff3;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .focus-within\:ring-white\/20:focus-within {
      --tw-ring-color: color-mix(in oklab, var(--color-white) 20%, transparent);
    }
  }
  @media (hover: hover) {
    .hover\:-translate-y-0\.5:hover {
      --tw-translate-y: calc(var(--spacing) * -0.5);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
    .hover\:-translate-y-1:hover {
      --tw-translate-y: calc(var(--spacing) * -1);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
    .hover\:-translate-y-px:hover {
      --tw-translate-y: -1px;
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
    .hover\:scale-105:hover {
      --tw-scale-x: 105%;
      --tw-scale-y: 105%;
      --tw-scale-z: 105%;
      scale: var(--tw-scale-x) var(--tw-scale-y);
    }
    .hover\:scale-110:hover {
      --tw-scale-x: 110%;
      --tw-scale-y: 110%;
      --tw-scale-z: 110%;
      scale: var(--tw-scale-x) var(--tw-scale-y);
    }
    .hover\:scale-\[1\.01\]:hover {
      scale: 1.01;
    }
    .hover\:scale-\[1\.02\]:hover {
      scale: 1.02;
    }
    .hover\:border-black\/70:hover {
      border-color: #000000b3;
    }
    @supports (color: color-mix(in lab, red, red)) {
      .hover\:border-black\/70:hover {
        border-color: color-mix(in oklab, var(--color-black) 70%, transparent);
      }
    }
    .hover\:border-gray-300:hover {
      border-color: var(--color-gray-300);
    }
    .hover\:border-gray-400:hover {
      border-color: var(--color-gray-400);
    }
    .hover\:border-white\/20:hover {
      border-color: #fff3;
    }
    @supports (color: color-mix(in lab, red, red)) {
      .hover\:border-white\/20:hover {
        border-color: color-mix(in oklab, var(--color-white) 20%, transparent);
      }
    }
    .hover\:bg-\[var\(--bg\)\]:hover {
      background-color: var(--bg);
    }
    .hover\:bg-blue-500:hover {
      background-color: var(--color-blue-500);
    }
    .hover\:bg-blue-700:hover {
      background-color: var(--color-blue-700);
    }
    .hover\:bg-gray-50:hover {
      background-color: var(--color-gray-50);
    }
    .hover\:bg-gray-100:hover {
      background-color: var(--color-gray-100);
    }
    .hover\:bg-gray-200:hover {
      background-color: var(--color-gray-200);
    }
    .hover\:bg-gray-200\/80:hover {
      background-color: #e5e7ebcc;
    }
    @supports (color: color-mix(in lab, red, red)) {
      .hover\:bg-gray-200\/80:hover {
        background-color: color-mix(
          in oklab,
          var(--color-gray-200) 80%,
          transparent
        );
      }
    }
    .hover\:bg-gray-300:hover {
      background-color: var(--color-gray-300);
    }
    .hover\:bg-gray-800:hover {
      background-color: var(--color-gray-800);
    }
    .hover\:bg-green-700:hover {
      background-color: var(--color-green-700);
    }
    .hover\:bg-indigo-700:hover {
      background-color: var(--color-indigo-700);
    }
    .hover\:bg-red-700:hover {
      background-color: var(--color-red-700);
    }
    .hover\:bg-white\/20:hover {
      background-color: #fff3;
    }
    @supports (color: color-mix(in lab, red, red)) {
      .hover\:bg-white\/20:hover {
        background-color: color-mix(
          in oklab,
          var(--color-white) 20%,
          transparent
        );
      }
    }
    .hover\:bg-white\/80:hover {
      background-color: #fffc;
    }
    @supports (color: color-mix(in lab, red, red)) {
      .hover\:bg-white\/80:hover {
        background-color: color-mix(
          in oklab,
          var(--color-white) 80%,
          transparent
        );
      }
    }
    .hover\:bg-white\/90:hover {
      background-color: #ffffffe6;
    }
    @supports (color: color-mix(in lab, red, red)) {
      .hover\:bg-white\/90:hover {
        background-color: color-mix(
          in oklab,
          var(--color-white) 90%,
          transparent
        );
      }
    }
    .hover\:from-purple-700:hover {
      --tw-gradient-from: var(--color-purple-700);
      --tw-gradient-stops: var(
        --tw-gradient-via-stops,
        var(--tw-gradient-position),
        var(--tw-gradient-from) var(--tw-gradient-from-position),
        var(--tw-gradient-to) var(--tw-gradient-to-position)
      );
    }
    .hover\:to-pink-700:hover {
      --tw-gradient-to: var(--color-pink-700);
      --tw-gradient-stops: var(
        --tw-gradient-via-stops,
        var(--tw-gradient-position),
        var(--tw-gradient-from) var(--tw-gradient-from-position),
        var(--tw-gradient-to) var(--tw-gradient-to-position)
      );
    }
    .hover\:text-\[var\(--fg\)\]:hover {
      color: var(--fg);
    }
    .hover\:text-blue-300:hover {
      color: var(--color-blue-300);
    }
    .hover\:text-blue-500:hover {
      color: var(--color-blue-500);
    }
    .hover\:text-gray-600:hover {
      color: var(--color-gray-600);
    }
    .hover\:text-gray-700:hover {
      color: var(--color-gray-700);
    }
    .hover\:text-gray-900:hover {
      color: var(--color-gray-900);
    }
    .hover\:text-green-700:hover {
      color: var(--color-green-700);
    }
    .hover\:text-indigo-500:hover {
      color: var(--color-indigo-500);
    }
    .hover\:text-indigo-600:hover {
      color: var(--color-indigo-600);
    }
    .hover\:text-red-600:hover {
      color: var(--color-red-600);
    }
    .hover\:text-red-700:hover {
      color: var(--color-red-700);
    }
    .hover\:text-white:hover {
      color: var(--color-white);
    }
    .hover\:underline:hover {
      text-decoration-line: underline;
    }
    .hover\:shadow-2xl:hover {
      --tw-shadow: 0 25px 50px -12px var(--tw-shadow-color, #00000040);
      box-shadow:
        var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
        var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
    .hover\:shadow-lg:hover {
      --tw-shadow:
        0 10px 15px -3px var(--tw-shadow-color, #0000001a),
        0 4px 6px -4px var(--tw-shadow-color, #0000001a);
      box-shadow:
        var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
        var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
    .hover\:shadow-md:hover {
      --tw-shadow:
        0 4px 6px -1px var(--tw-shadow-color, #0000001a),
        0 2px 4px -2px var(--tw-shadow-color, #0000001a);
      box-shadow:
        var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
        var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
    .hover\:shadow-sm:hover {
      --tw-shadow:
        0 1px 3px 0 var(--tw-shadow-color, #0000001a),
        0 1px 2px -1px var(--tw-shadow-color, #0000001a);
      box-shadow:
        var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
        var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
    .hover\:shadow-xl:hover {
      --tw-shadow:
        0 20px 25px -5px var(--tw-shadow-color, #0000001a),
        0 8px 10px -6px var(--tw-shadow-color, #0000001a);
      box-shadow:
        var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
        var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
    .hover\:shadow-indigo-500\/25:hover {
      --tw-shadow-color: #625fff40;
    }
    @supports (color: color-mix(in lab, red, red)) {
      .hover\:shadow-indigo-500\/25:hover {
        --tw-shadow-color: color-mix(
          in oklab,
          color-mix(in oklab, var(--color-indigo-500) 25%, transparent)
            var(--tw-shadow-alpha),
          transparent
        );
      }
    }
    .hover\:ring-black\/20:hover {
      --tw-ring-color: #0003;
    }
    @supports (color: color-mix(in lab, red, red)) {
      .hover\:ring-black\/20:hover {
        --tw-ring-color: color-mix(
          in oklab,
          var(--color-black) 20%,
          transparent
        );
      }
    }
    .hover\:ring-white\/40:hover {
      --tw-ring-color: #fff6;
    }
    @supports (color: color-mix(in lab, red, red)) {
      .hover\:ring-white\/40:hover {
        --tw-ring-color: color-mix(
          in oklab,
          var(--color-white) 40%,
          transparent
        );
      }
    }
  }
  .focus\:border-gray-500:focus {
    border-color: var(--color-gray-500);
  }
  .focus\:border-red-500:focus {
    border-color: var(--color-red-500);
  }
  .focus\:border-transparent:focus {
    border-color: #0000;
  }
  .focus\:ring-0:focus {
    --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0
      calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
    box-shadow:
      var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
      var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .focus\:ring-1:focus {
    --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0
      calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
    box-shadow:
      var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
      var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .focus\:ring-2:focus {
    --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0
      calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
    box-shadow:
      var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
      var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .focus\:ring-blue-400:focus {
    --tw-ring-color: var(--color-blue-400);
  }
  .focus\:ring-blue-500:focus {
    --tw-ring-color: var(--color-blue-500);
  }
  .focus\:ring-gray-500:focus {
    --tw-ring-color: var(--color-gray-500);
  }
  .focus\:ring-indigo-500:focus {
    --tw-ring-color: var(--color-indigo-500);
  }
  .focus\:ring-red-500:focus {
    --tw-ring-color: var(--color-red-500);
  }
  .focus\:ring-offset-2:focus {
    --tw-ring-offset-width: 2px;
    --tw-ring-offset-shadow: var(--tw-ring-inset,) 0 0 0
      var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  }
  .focus\:outline-hidden:focus {
    --tw-outline-style: none;
    outline-style: none;
  }
  @media (forced-colors: active) {
    .focus\:outline-hidden:focus {
      outline-offset: 2px;
      outline: 2px solid #0000;
    }
  }
  .focus\:outline-0:focus {
    outline-style: var(--tw-outline-style);
    outline-width: 0;
  }
  .focus\:outline-none:focus {
    --tw-outline-style: none;
    outline-style: none;
  }
  .focus-visible\:bg-\[var\(--bg\)\]:focus-visible {
    background-color: var(--bg);
  }
  .focus-visible\:ring:focus-visible {
    --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0
      calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
    box-shadow:
      var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
      var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .focus-visible\:ring-2:focus-visible {
    --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0
      calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
    box-shadow:
      var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
      var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .focus-visible\:ring-black\/40:focus-visible {
    --tw-ring-color: #0006;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .focus-visible\:ring-black\/40:focus-visible {
      --tw-ring-color: color-mix(in oklab, var(--color-black) 40%, transparent);
    }
  }
  .focus-visible\:ring-blue-500:focus-visible {
    --tw-ring-color: var(--color-blue-500);
  }
  .focus-visible\:ring-gray-400:focus-visible {
    --tw-ring-color: var(--color-gray-400);
  }
  .focus-visible\:ring-gray-500:focus-visible {
    --tw-ring-color: var(--color-gray-500);
  }
  .focus-visible\:ring-gray-500\/50:focus-visible {
    --tw-ring-color: #6b728080;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .focus-visible\:ring-gray-500\/50:focus-visible {
      --tw-ring-color: color-mix(
        in oklab,
        var(--color-gray-500) 50%,
        transparent
      );
    }
  }
  .focus-visible\:ring-green-500:focus-visible {
    --tw-ring-color: var(--color-green-500);
  }
  .focus-visible\:ring-indigo-500:focus-visible {
    --tw-ring-color: var(--color-indigo-500);
  }
  .focus-visible\:ring-red-500:focus-visible {
    --tw-ring-color: var(--color-red-500);
  }
  .focus-visible\:ring-white\/50:focus-visible {
    --tw-ring-color: #ffffff80;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .focus-visible\:ring-white\/50:focus-visible {
      --tw-ring-color: color-mix(in oklab, var(--color-white) 50%, transparent);
    }
  }
  .focus-visible\:ring-offset-1:focus-visible {
    --tw-ring-offset-width: 1px;
    --tw-ring-offset-shadow: var(--tw-ring-inset,) 0 0 0
      var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  }
  .focus-visible\:ring-offset-2:focus-visible {
    --tw-ring-offset-width: 2px;
    --tw-ring-offset-shadow: var(--tw-ring-inset,) 0 0 0
      var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  }
  .focus-visible\:outline-hidden:focus-visible {
    --tw-outline-style: none;
    outline-style: none;
  }
  @media (forced-colors: active) {
    .focus-visible\:outline-hidden:focus-visible {
      outline-offset: 2px;
      outline: 2px solid #0000;
    }
  }
  .focus-visible\:outline:focus-visible {
    outline-style: var(--tw-outline-style);
    outline-width: 1px;
  }
  .focus-visible\:outline-2:focus-visible {
    outline-style: var(--tw-outline-style);
    outline-width: 2px;
  }
  .focus-visible\:outline-offset-2:focus-visible {
    outline-offset: 2px;
  }
  .focus-visible\:outline-white:focus-visible {
    outline-color: var(--color-white);
  }
  .focus-visible\:outline-white\/50:focus-visible {
    outline-color: #ffffff80;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .focus-visible\:outline-white\/50:focus-visible {
      outline-color: color-mix(in oklab, var(--color-white) 50%, transparent);
    }
  }
  .focus-visible\:outline-none:focus-visible {
    --tw-outline-style: none;
    outline-style: none;
  }
  .active\:translate-y-0:active {
    --tw-translate-y: calc(var(--spacing) * 0);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .active\:scale-95:active {
    --tw-scale-x: 95%;
    --tw-scale-y: 95%;
    --tw-scale-z: 95%;
    scale: var(--tw-scale-x) var(--tw-scale-y);
  }
  .active\:scale-\[0\.98\]:active {
    scale: 0.98;
  }
  .active\:scale-\[0\.99\]:active {
    scale: 0.99;
  }
  .active\:cursor-grabbing:active {
    cursor: grabbing;
  }
  .active\:shadow-sm:active {
    --tw-shadow:
      0 1px 3px 0 var(--tw-shadow-color, #0000001a),
      0 1px 2px -1px var(--tw-shadow-color, #0000001a);
    box-shadow:
      var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
      var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .disabled\:pointer-events-none:disabled {
    pointer-events: none;
  }
  .disabled\:transform-none:disabled {
    transform: none;
  }
  .disabled\:cursor-not-allowed:disabled {
    cursor: not-allowed;
  }
  .disabled\:border-zinc-950\/20:disabled {
    border-color: #09090b33;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .disabled\:border-zinc-950\/20:disabled {
      border-color: color-mix(in oklab, var(--color-zinc-950) 20%, transparent);
    }
  }
  .disabled\:bg-white\/50:disabled {
    background-color: #ffffff80;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .disabled\:bg-white\/50:disabled {
      background-color: color-mix(
        in oklab,
        var(--color-white) 50%,
        transparent
      );
    }
  }
  .disabled\:text-gray-500:disabled {
    color: var(--color-gray-500);
  }
  .disabled\:opacity-50:disabled,
  .has-data-disabled\:opacity-50:has([data-disabled]) {
    opacity: 0.5;
  }
  .has-data-disabled\:before\:bg-zinc-950\/5:has([data-disabled]):before {
    content: var(--tw-content);
    background-color: #09090b0d;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .has-data-disabled\:before\:bg-zinc-950\/5:has([data-disabled]):before {
      background-color: color-mix(
        in oklab,
        var(--color-zinc-950) 5%,
        transparent
      );
    }
  }
  .has-data-disabled\:before\:shadow-none:has([data-disabled]):before {
    content: var(--tw-content);
    --tw-shadow: 0 0 #0000;
    box-shadow:
      var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
      var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .has-data-invalid\:before\:shadow-red-500\/10:has([data-invalid]):before {
    content: var(--tw-content);
    --tw-shadow-color: #fb2c361a;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .has-data-invalid\:before\:shadow-red-500\/10:has([data-invalid]):before {
      --tw-shadow-color: color-mix(
        in oklab,
        color-mix(in oklab, var(--color-red-500) 10%, transparent)
          var(--tw-shadow-alpha),
        transparent
      );
    }
  }
  .data-closed\:translate-y-12[data-closed] {
    --tw-translate-y: calc(var(--spacing) * 12);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .data-closed\:opacity-0[data-closed] {
    opacity: 0;
  }
  .data-disabled\:border-zinc-950\/20[data-disabled] {
    border-color: #09090b33;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .data-disabled\:border-zinc-950\/20[data-disabled] {
      border-color: color-mix(in oklab, var(--color-zinc-950) 20%, transparent);
    }
  }
  .data-enter\:ease-out[data-enter] {
    --tw-ease: var(--ease-out);
    transition-timing-function: var(--ease-out);
  }
  .data-hover\:border-red-500[data-hover] {
    border-color: var(--color-red-500);
  }
  .data-hover\:border-zinc-950\/20[data-hover] {
    border-color: #09090b33;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .data-hover\:border-zinc-950\/20[data-hover] {
      border-color: color-mix(in oklab, var(--color-zinc-950) 20%, transparent);
    }
  }
  .data-invalid\:border-red-500[data-invalid],
  .data-invalid\:data-hover\:border-red-500[data-invalid][data-hover] {
    border-color: var(--color-red-500);
  }
  .data-leave\:ease-in[data-leave] {
    --tw-ease: var(--ease-in);
    transition-timing-function: var(--ease-in);
  }
  .data-\[show\=true\]\:opacity-100[data-show='true'] {
    opacity: 1;
  }
  :is(.data-\[slot\=icon\]\:\*\:pointer-events-none[data-slot='icon'] > *) {
    pointer-events: none;
  }
  :is(.data-\[slot\=icon\]\:\*\:absolute[data-slot='icon'] > *) {
    position: absolute;
  }
  :is(.data-\[slot\=icon\]\:\*\:top-3[data-slot='icon'] > *) {
    top: calc(var(--spacing) * 3);
  }
  :is(.data-\[slot\=icon\]\:\*\:z-10[data-slot='icon'] > *) {
    z-index: 10;
  }
  :is(.data-\[slot\=icon\]\:\*\:size-5[data-slot='icon'] > *) {
    width: calc(var(--spacing) * 5);
    height: calc(var(--spacing) * 5);
  }
  :is(.data-\[slot\=icon\]\:\*\:text-zinc-500[data-slot='icon'] > *) {
    color: var(--color-zinc-500);
  }
  @supports (
    (-webkit-backdrop-filter: var(--tw)) or (backdrop-filter: var(--tw))
  ) {
    .supports-backdrop-filter\:bg-white\/60 {
      background-color: #fff9;
    }
    @supports (color: color-mix(in lab, red, red)) {
      .supports-backdrop-filter\:bg-white\/60 {
        background-color: color-mix(
          in oklab,
          var(--color-white) 60%,
          transparent
        );
      }
    }
  }
  @media (min-width: 40rem) {
    .sm\:right-2\.5 {
      right: calc(var(--spacing) * 2.5);
    }
    .sm\:mb-auto {
      margin-bottom: auto;
    }
    .sm\:block {
      display: block;
    }
    .sm\:inline {
      display: inline;
    }
    .sm\:h-11 {
      height: calc(var(--spacing) * 11);
    }
    .sm\:h-32 {
      height: calc(var(--spacing) * 32);
    }
    .sm\:min-h-\[60px\] {
      min-height: 60px;
    }
    .sm\:w-32 {
      width: calc(var(--spacing) * 32);
    }
    .sm\:max-w-2xl {
      max-width: var(--container-2xl);
    }
    .sm\:max-w-3xl {
      max-width: var(--container-3xl);
    }
    .sm\:max-w-4xl {
      max-width: var(--container-4xl);
    }
    .sm\:max-w-5xl {
      max-width: var(--container-5xl);
    }
    .sm\:max-w-lg {
      max-width: var(--container-lg);
    }
    .sm\:max-w-md {
      max-width: var(--container-md);
    }
    .sm\:max-w-sm {
      max-width: var(--container-sm);
    }
    .sm\:max-w-xl {
      max-width: var(--container-xl);
    }
    .sm\:max-w-xs {
      max-width: var(--container-xs);
    }
    .sm\:grid-cols-2 {
      grid-template-columns: repeat(2, minmax(0, 1fr));
    }
    .sm\:grid-rows-\[1fr_auto_3fr\] {
      grid-template-rows: 1fr auto 3fr;
    }
    .sm\:flex-row {
      flex-direction: row;
    }
    .sm\:items-center {
      align-items: center;
    }
    .sm\:justify-between {
      justify-content: space-between;
    }
    :where(.sm\:space-y-2 > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(
        calc(var(--spacing) * 2) * var(--tw-space-y-reverse)
      );
      margin-block-end: calc(
        calc(var(--spacing) * 2) * calc(1 - var(--tw-space-y-reverse))
      );
    }
    :where(.sm\:space-y-4 > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(
        calc(var(--spacing) * 4) * var(--tw-space-y-reverse)
      );
      margin-block-end: calc(
        calc(var(--spacing) * 4) * calc(1 - var(--tw-space-y-reverse))
      );
    }
    .sm\:rounded-2xl {
      border-radius: var(--radius-2xl);
    }
    .sm\:rounded-l-none {
      border-top-left-radius: 0;
      border-bottom-left-radius: 0;
    }
    .sm\:rounded-l-xl {
      border-top-left-radius: var(--radius-xl);
      border-bottom-left-radius: var(--radius-xl);
    }
    .sm\:rounded-r-none {
      border-top-right-radius: 0;
      border-bottom-right-radius: 0;
    }
    .sm\:rounded-r-xl {
      border-top-right-radius: var(--radius-xl);
      border-bottom-right-radius: var(--radius-xl);
    }
    .sm\:p-4 {
      padding: calc(var(--spacing) * 4);
    }
    .sm\:px-6 {
      padding-inline: calc(var(--spacing) * 6);
    }
    .sm\:px-10 {
      padding-inline: calc(var(--spacing) * 10);
    }
    .sm\:px-\[calc\(--spacing\(3\)-1px\)\] {
      padding-inline: calc(calc(var(--spacing) * 3) - 1px);
    }
    .sm\:py-8 {
      padding-block: calc(var(--spacing) * 8);
    }
    .sm\:py-16 {
      padding-block: calc(var(--spacing) * 16);
    }
    .sm\:py-20 {
      padding-block: calc(var(--spacing) * 20);
    }
    .sm\:py-24 {
      padding-block: calc(var(--spacing) * 24);
    }
    .sm\:py-32 {
      padding-block: calc(var(--spacing) * 32);
    }
    .sm\:py-\[calc\(--spacing\(1\.5\)-1px\)\] {
      padding-block: calc(calc(var(--spacing) * 1.5) - 1px);
    }
    .sm\:pt-0 {
      padding-top: calc(var(--spacing) * 0);
    }
    .sm\:pr-8 {
      padding-right: calc(var(--spacing) * 8);
    }
    .sm\:pr-32 {
      padding-right: calc(var(--spacing) * 32);
    }
    .sm\:pr-40 {
      padding-right: calc(var(--spacing) * 40);
    }
    .sm\:text-2xl {
      font-size: var(--text-2xl);
      line-height: var(--tw-leading, var(--text-2xl--line-height));
    }
    .sm\:text-3xl {
      font-size: var(--text-3xl);
      line-height: var(--tw-leading, var(--text-3xl--line-height));
    }
    .sm\:text-5xl {
      font-size: var(--text-5xl);
      line-height: var(--tw-leading, var(--text-5xl--line-height));
    }
    .sm\:text-6xl {
      font-size: var(--text-6xl);
      line-height: var(--tw-leading, var(--text-6xl--line-height));
    }
    .sm\:text-base\/6 {
      font-size: var(--text-base);
      line-height: calc(var(--spacing) * 6);
    }
    .sm\:text-lg {
      font-size: var(--text-lg);
      line-height: var(--tw-leading, var(--text-lg--line-height));
    }
    .sm\:text-sm {
      font-size: var(--text-sm);
      line-height: var(--tw-leading, var(--text-sm--line-height));
    }
    .sm\:text-sm\/6 {
      font-size: var(--text-sm);
      line-height: calc(var(--spacing) * 6);
    }
    .sm\:text-xl {
      font-size: var(--text-xl);
      line-height: var(--tw-leading, var(--text-xl--line-height));
    }
    :is(.sm\:\*\:w-auto > *) {
      width: auto;
    }
    .sm\:focus-within\:after\:ring-2:focus-within:after {
      content: var(--tw-content);
      --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0
        calc(2px + var(--tw-ring-offset-width))
        var(--tw-ring-color, currentcolor);
      box-shadow:
        var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
        var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
    .sm\:focus-within\:after\:ring-blue-500:focus-within:after {
      content: var(--tw-content);
      --tw-ring-color: var(--color-blue-500);
    }
    .sm\:data-closed\:translate-y-0[data-closed] {
      --tw-translate-y: calc(var(--spacing) * 0);
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
    .sm\:data-closed\:data-enter\:scale-95[data-closed][data-enter] {
      --tw-scale-x: 95%;
      --tw-scale-y: 95%;
      --tw-scale-z: 95%;
      scale: var(--tw-scale-x) var(--tw-scale-y);
    }
    :is(.sm\:data-\[slot\=icon\]\:\*\:top-2\.5[data-slot='icon'] > *) {
      top: calc(var(--spacing) * 2.5);
    }
    :is(.sm\:data-\[slot\=icon\]\:\*\:size-4[data-slot='icon'] > *) {
      width: calc(var(--spacing) * 4);
      height: calc(var(--spacing) * 4);
    }
  }
  @media (min-width: 48rem) {
    .md\:ml-0 {
      margin-left: calc(var(--spacing) * 0);
    }
    .md\:ml-auto {
      margin-left: auto;
    }
    .md\:block {
      display: block;
    }
    .md\:flex {
      display: flex;
    }
    .md\:hidden {
      display: none;
    }
    .md\:h-16 {
      height: calc(var(--spacing) * 16);
    }
    .md\:h-32 {
      height: calc(var(--spacing) * 32);
    }
    .md\:w-32 {
      width: calc(var(--spacing) * 32);
    }
    .md\:grid-cols-2 {
      grid-template-columns: repeat(2, minmax(0, 1fr));
    }
    .md\:grid-cols-3 {
      grid-template-columns: repeat(3, minmax(0, 1fr));
    }
    .md\:grid-cols-4 {
      grid-template-columns: repeat(4, minmax(0, 1fr));
    }
    .md\:flex-row {
      flex-direction: row;
    }
    .md\:items-center {
      align-items: center;
    }
    .md\:items-start {
      align-items: flex-start;
    }
    .md\:justify-between {
      justify-content: space-between;
    }
    .md\:py-0 {
      padding-block: calc(var(--spacing) * 0);
    }
    .md\:py-16 {
      padding-block: calc(var(--spacing) * 16);
    }
    .md\:py-24 {
      padding-block: calc(var(--spacing) * 24);
    }
    .md\:text-2xl {
      font-size: var(--text-2xl);
      line-height: var(--tw-leading, var(--text-2xl--line-height));
    }
    .md\:text-5xl {
      font-size: var(--text-5xl);
      line-height: var(--tw-leading, var(--text-5xl--line-height));
    }
    .md\:text-6xl {
      font-size: var(--text-6xl);
      line-height: var(--tw-leading, var(--text-6xl--line-height));
    }
  }
  @media (min-width: 64rem) {
    .lg\:block {
      display: block;
    }
    .lg\:hidden {
      display: none;
    }
    .lg\:w-1\/2 {
      width: 50%;
    }
    .lg\:grid-cols-3 {
      grid-template-columns: repeat(3, minmax(0, 1fr));
    }
    .lg\:grid-cols-4 {
      grid-template-columns: repeat(4, minmax(0, 1fr));
    }
    .lg\:flex-row {
      flex-direction: row;
    }
    .lg\:border-l {
      border-left-style: var(--tw-border-style);
      border-left-width: 1px;
    }
    .lg\:border-gray-200 {
      border-color: var(--color-gray-200);
    }
    .lg\:px-8 {
      padding-inline: calc(var(--spacing) * 8);
    }
    .lg\:py-16 {
      padding-block: calc(var(--spacing) * 16);
    }
    .lg\:pr-8 {
      padding-right: calc(var(--spacing) * 8);
    }
    .lg\:pl-8 {
      padding-left: calc(var(--spacing) * 8);
    }
    .lg\:text-6xl {
      font-size: var(--text-6xl);
      line-height: var(--tw-leading, var(--text-6xl--line-height));
    }
    .lg\:text-7xl {
      font-size: var(--text-7xl);
      line-height: var(--tw-leading, var(--text-7xl--line-height));
    }
  }
  @media (min-width: 80rem) {
    .xl\:grid-cols-4 {
      grid-template-columns: repeat(4, minmax(0, 1fr));
    }
  }
  .dark\:border-blue-400\/20:is(.dark *) {
    border-color: #54a2ff33;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .dark\:border-blue-400\/20:is(.dark *) {
      border-color: color-mix(in oklab, var(--color-blue-400) 20%, transparent);
    }
  }
  .dark\:border-blue-800:is(.dark *) {
    border-color: var(--color-blue-800);
  }
  .dark\:border-gray-50:is(.dark *) {
    border-color: var(--color-gray-50);
  }
  .dark\:border-gray-600:is(.dark *) {
    border-color: var(--color-gray-600);
  }
  .dark\:border-gray-700:is(.dark *) {
    border-color: var(--color-gray-700);
  }
  .dark\:border-gray-700\/50:is(.dark *) {
    border-color: #37415180;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .dark\:border-gray-700\/50:is(.dark *) {
      border-color: color-mix(in oklab, var(--color-gray-700) 50%, transparent);
    }
  }
  .dark\:border-green-800:is(.dark *) {
    border-color: var(--color-green-800);
  }
  .dark\:border-indigo-400:is(.dark *) {
    border-color: var(--color-indigo-400);
  }
  .dark\:border-red-500:is(.dark *) {
    border-color: var(--color-red-500);
  }
  .dark\:border-red-800:is(.dark *) {
    border-color: var(--color-red-800);
  }
  .dark\:border-white:is(.dark *) {
    border-color: var(--color-white);
  }
  .dark\:border-white\/5:is(.dark *) {
    border-color: #ffffff0d;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .dark\:border-white\/5:is(.dark *) {
      border-color: color-mix(in oklab, var(--color-white) 5%, transparent);
    }
  }
  .dark\:border-white\/10:is(.dark *) {
    border-color: #ffffff1a;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .dark\:border-white\/10:is(.dark *) {
      border-color: color-mix(in oklab, var(--color-white) 10%, transparent);
    }
  }
  .dark\:border-white\/20:is(.dark *) {
    border-color: #fff3;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .dark\:border-white\/20:is(.dark *) {
      border-color: color-mix(in oklab, var(--color-white) 20%, transparent);
    }
  }
  .dark\:border-white\/30:is(.dark *) {
    border-color: #ffffff4d;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .dark\:border-white\/30:is(.dark *) {
      border-color: color-mix(in oklab, var(--color-white) 30%, transparent);
    }
  }
  .dark\:border-yellow-800:is(.dark *) {
    border-color: var(--color-yellow-800);
  }
  .dark\:bg-\[\#0D0E12\]:is(.dark *) {
    background-color: #0d0e12;
  }
  .dark\:bg-\[\#0D0E12\]\/95:is(.dark *) {
    background-color: #0d0e12f2;
  }
  .dark\:bg-amber-500:is(.dark *) {
    background-color: var(--color-amber-500);
  }
  .dark\:bg-black:is(.dark *) {
    background-color: var(--color-black);
  }
  .dark\:bg-blue-900\/20:is(.dark *) {
    background-color: #1c398e33;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .dark\:bg-blue-900\/20:is(.dark *) {
      background-color: color-mix(
        in oklab,
        var(--color-blue-900) 20%,
        transparent
      );
    }
  }
  .dark\:bg-gray-50:is(.dark *) {
    background-color: var(--color-gray-50);
  }
  .dark\:bg-gray-600:is(.dark *) {
    background-color: var(--color-gray-600);
  }
  .dark\:bg-gray-700:is(.dark *) {
    background-color: var(--color-gray-700);
  }
  .dark\:bg-gray-800:is(.dark *) {
    background-color: var(--color-gray-800);
  }
  .dark\:bg-gray-800\/50:is(.dark *) {
    background-color: #1f293780;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .dark\:bg-gray-800\/50:is(.dark *) {
      background-color: color-mix(
        in oklab,
        var(--color-gray-800) 50%,
        transparent
      );
    }
  }
  .dark\:bg-gray-800\/95:is(.dark *) {
    background-color: #1f2937f2;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .dark\:bg-gray-800\/95:is(.dark *) {
      background-color: color-mix(
        in oklab,
        var(--color-gray-800) 95%,
        transparent
      );
    }
  }
  .dark\:bg-gray-900:is(.dark *) {
    background-color: var(--color-gray-900);
  }
  .dark\:bg-gray-900\/60:is(.dark *) {
    background-color: #11182799;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .dark\:bg-gray-900\/60:is(.dark *) {
      background-color: color-mix(
        in oklab,
        var(--color-gray-900) 60%,
        transparent
      );
    }
  }
  .dark\:bg-gray-900\/80:is(.dark *) {
    background-color: #111827cc;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .dark\:bg-gray-900\/80:is(.dark *) {
      background-color: color-mix(
        in oklab,
        var(--color-gray-900) 80%,
        transparent
      );
    }
  }
  .dark\:bg-gray-900\/95:is(.dark *) {
    background-color: #111827f2;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .dark\:bg-gray-900\/95:is(.dark *) {
      background-color: color-mix(
        in oklab,
        var(--color-gray-900) 95%,
        transparent
      );
    }
  }
  .dark\:bg-green-500:is(.dark *) {
    background-color: var(--color-green-500);
  }
  .dark\:bg-green-900:is(.dark *) {
    background-color: var(--color-green-900);
  }
  .dark\:bg-green-900\/20:is(.dark *) {
    background-color: #0d542b33;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .dark\:bg-green-900\/20:is(.dark *) {
      background-color: color-mix(
        in oklab,
        var(--color-green-900) 20%,
        transparent
      );
    }
  }
  .dark\:bg-indigo-500:is(.dark *) {
    background-color: var(--color-indigo-500);
  }
  .dark\:bg-indigo-900\/20:is(.dark *) {
    background-color: #312c8533;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .dark\:bg-indigo-900\/20:is(.dark *) {
      background-color: color-mix(
        in oklab,
        var(--color-indigo-900) 20%,
        transparent
      );
    }
  }
  .dark\:bg-neutral-800:is(.dark *) {
    background-color: var(--color-neutral-800);
  }
  .dark\:bg-purple-600:is(.dark *) {
    background-color: var(--color-purple-600);
  }
  .dark\:bg-red-500:is(.dark *) {
    background-color: var(--color-red-500);
  }
  .dark\:bg-red-900:is(.dark *) {
    background-color: var(--color-red-900);
  }
  .dark\:bg-red-900\/20:is(.dark *) {
    background-color: #82181a33;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .dark\:bg-red-900\/20:is(.dark *) {
      background-color: color-mix(
        in oklab,
        var(--color-red-900) 20%,
        transparent
      );
    }
  }
  .dark\:bg-white:is(.dark *) {
    background-color: var(--color-white);
  }
  .dark\:bg-white\/5:is(.dark *) {
    background-color: #ffffff0d;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .dark\:bg-white\/5:is(.dark *) {
      background-color: color-mix(in oklab, var(--color-white) 5%, transparent);
    }
  }
  .dark\:bg-white\/10:is(.dark *) {
    background-color: #ffffff1a;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .dark\:bg-white\/10:is(.dark *) {
      background-color: color-mix(
        in oklab,
        var(--color-white) 10%,
        transparent
      );
    }
  }
  .dark\:bg-yellow-900:is(.dark *) {
    background-color: var(--color-yellow-900);
  }
  .dark\:bg-yellow-900\/20:is(.dark *) {
    background-color: #733e0a33;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .dark\:bg-yellow-900\/20:is(.dark *) {
      background-color: color-mix(
        in oklab,
        var(--color-yellow-900) 20%,
        transparent
      );
    }
  }
  .dark\:bg-zinc-900:is(.dark *) {
    background-color: var(--color-zinc-900);
  }
  .dark\:bg-zinc-950\/50:is(.dark *) {
    background-color: #09090b80;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .dark\:bg-zinc-950\/50:is(.dark *) {
      background-color: color-mix(
        in oklab,
        var(--color-zinc-950) 50%,
        transparent
      );
    }
  }
  .dark\:bg-\[linear-gradient\(rgba\(255\,255\,255\,0\.02\)_1px\,transparent_1px\)\,linear-gradient\(90deg\,rgba\(255\,255\,255\,0\.02\)_1px\,transparent_1px\)\]:is(
      .dark *
    ) {
    background-image:
      linear-gradient(#ffffff05 1px, #0000 1px),
      linear-gradient(90deg, #ffffff05 1px, #0000 1px);
  }
  .dark\:from-blue-400:is(.dark *) {
    --tw-gradient-from: var(--color-blue-400);
    --tw-gradient-stops: var(
      --tw-gradient-via-stops,
      var(--tw-gradient-position),
      var(--tw-gradient-from) var(--tw-gradient-from-position),
      var(--tw-gradient-to) var(--tw-gradient-to-position)
    );
  }
  .dark\:from-blue-400\/10:is(.dark *) {
    --tw-gradient-from: #54a2ff1a;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .dark\:from-blue-400\/10:is(.dark *) {
      --tw-gradient-from: color-mix(
        in oklab,
        var(--color-blue-400) 10%,
        transparent
      );
    }
  }
  .dark\:from-blue-400\/10:is(.dark *) {
    --tw-gradient-stops: var(
      --tw-gradient-via-stops,
      var(--tw-gradient-position),
      var(--tw-gradient-from) var(--tw-gradient-from-position),
      var(--tw-gradient-to) var(--tw-gradient-to-position)
    );
  }
  .dark\:from-blue-400\/20:is(.dark *) {
    --tw-gradient-from: #54a2ff33;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .dark\:from-blue-400\/20:is(.dark *) {
      --tw-gradient-from: color-mix(
        in oklab,
        var(--color-blue-400) 20%,
        transparent
      );
    }
  }
  .dark\:from-blue-400\/20:is(.dark *) {
    --tw-gradient-stops: var(
      --tw-gradient-via-stops,
      var(--tw-gradient-position),
      var(--tw-gradient-from) var(--tw-gradient-from-position),
      var(--tw-gradient-to) var(--tw-gradient-to-position)
    );
  }
  .dark\:from-blue-500\/10:is(.dark *) {
    --tw-gradient-from: #3080ff1a;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .dark\:from-blue-500\/10:is(.dark *) {
      --tw-gradient-from: color-mix(
        in oklab,
        var(--color-blue-500) 10%,
        transparent
      );
    }
  }
  .dark\:from-blue-500\/10:is(.dark *) {
    --tw-gradient-stops: var(
      --tw-gradient-via-stops,
      var(--tw-gradient-position),
      var(--tw-gradient-from) var(--tw-gradient-from-position),
      var(--tw-gradient-to) var(--tw-gradient-to-position)
    );
  }
  .dark\:from-blue-900\/30:is(.dark *) {
    --tw-gradient-from: #1c398e4d;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .dark\:from-blue-900\/30:is(.dark *) {
      --tw-gradient-from: color-mix(
        in oklab,
        var(--color-blue-900) 30%,
        transparent
      );
    }
  }
  .dark\:from-blue-900\/30:is(.dark *) {
    --tw-gradient-stops: var(
      --tw-gradient-via-stops,
      var(--tw-gradient-position),
      var(--tw-gradient-from) var(--tw-gradient-from-position),
      var(--tw-gradient-to) var(--tw-gradient-to-position)
    );
  }
  .dark\:from-gray-700:is(.dark *) {
    --tw-gradient-from: var(--color-gray-700);
    --tw-gradient-stops: var(
      --tw-gradient-via-stops,
      var(--tw-gradient-position),
      var(--tw-gradient-from) var(--tw-gradient-from-position),
      var(--tw-gradient-to) var(--tw-gradient-to-position)
    );
  }
  .dark\:from-gray-900:is(.dark *) {
    --tw-gradient-from: var(--color-gray-900);
    --tw-gradient-stops: var(
      --tw-gradient-via-stops,
      var(--tw-gradient-position),
      var(--tw-gradient-from) var(--tw-gradient-from-position),
      var(--tw-gradient-to) var(--tw-gradient-to-position)
    );
  }
  .dark\:from-green-400:is(.dark *) {
    --tw-gradient-from: var(--color-green-400);
    --tw-gradient-stops: var(
      --tw-gradient-via-stops,
      var(--tw-gradient-position),
      var(--tw-gradient-from) var(--tw-gradient-from-position),
      var(--tw-gradient-to) var(--tw-gradient-to-position)
    );
  }
  .dark\:from-indigo-950:is(.dark *) {
    --tw-gradient-from: var(--color-indigo-950);
    --tw-gradient-stops: var(
      --tw-gradient-via-stops,
      var(--tw-gradient-position),
      var(--tw-gradient-from) var(--tw-gradient-from-position),
      var(--tw-gradient-to) var(--tw-gradient-to-position)
    );
  }
  .dark\:from-purple-400\/20:is(.dark *) {
    --tw-gradient-from: #c07eff33;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .dark\:from-purple-400\/20:is(.dark *) {
      --tw-gradient-from: color-mix(
        in oklab,
        var(--color-purple-400) 20%,
        transparent
      );
    }
  }
  .dark\:from-purple-400\/20:is(.dark *) {
    --tw-gradient-stops: var(
      --tw-gradient-via-stops,
      var(--tw-gradient-position),
      var(--tw-gradient-from) var(--tw-gradient-from-position),
      var(--tw-gradient-to) var(--tw-gradient-to-position)
    );
  }
  .dark\:from-purple-900:is(.dark *) {
    --tw-gradient-from: var(--color-purple-900);
    --tw-gradient-stops: var(
      --tw-gradient-via-stops,
      var(--tw-gradient-position),
      var(--tw-gradient-from) var(--tw-gradient-from-position),
      var(--tw-gradient-to) var(--tw-gradient-to-position)
    );
  }
  .dark\:via-blue-400:is(.dark *) {
    --tw-gradient-via: var(--color-blue-400);
    --tw-gradient-via-stops:
      var(--tw-gradient-position),
      var(--tw-gradient-from) var(--tw-gradient-from-position),
      var(--tw-gradient-via) var(--tw-gradient-via-position),
      var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }
  .dark\:via-blue-900:is(.dark *) {
    --tw-gradient-via: var(--color-blue-900);
    --tw-gradient-via-stops:
      var(--tw-gradient-position),
      var(--tw-gradient-from) var(--tw-gradient-from-position),
      var(--tw-gradient-via) var(--tw-gradient-via-position),
      var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }
  .dark\:via-gray-600:is(.dark *) {
    --tw-gradient-via: var(--color-gray-600);
    --tw-gradient-via-stops:
      var(--tw-gradient-position),
      var(--tw-gradient-from) var(--tw-gradient-from-position),
      var(--tw-gradient-via) var(--tw-gradient-via-position),
      var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }
  .dark\:via-purple-400:is(.dark *) {
    --tw-gradient-via: var(--color-purple-400);
    --tw-gradient-via-stops:
      var(--tw-gradient-position),
      var(--tw-gradient-from) var(--tw-gradient-from-position),
      var(--tw-gradient-via) var(--tw-gradient-via-position),
      var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }
  .dark\:via-purple-400\/10:is(.dark *) {
    --tw-gradient-via: #c07eff1a;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .dark\:via-purple-400\/10:is(.dark *) {
      --tw-gradient-via: color-mix(
        in oklab,
        var(--color-purple-400) 10%,
        transparent
      );
    }
  }
  .dark\:via-purple-400\/10:is(.dark *) {
    --tw-gradient-via-stops:
      var(--tw-gradient-position),
      var(--tw-gradient-from) var(--tw-gradient-from-position),
      var(--tw-gradient-via) var(--tw-gradient-via-position),
      var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }
  .dark\:via-purple-500\/10:is(.dark *) {
    --tw-gradient-via: #ac4bff1a;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .dark\:via-purple-500\/10:is(.dark *) {
      --tw-gradient-via: color-mix(
        in oklab,
        var(--color-purple-500) 10%,
        transparent
      );
    }
  }
  .dark\:via-purple-500\/10:is(.dark *) {
    --tw-gradient-via-stops:
      var(--tw-gradient-position),
      var(--tw-gradient-from) var(--tw-gradient-from-position),
      var(--tw-gradient-via) var(--tw-gradient-via-position),
      var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }
  .dark\:via-purple-900\/20:is(.dark *) {
    --tw-gradient-via: #59168b33;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .dark\:via-purple-900\/20:is(.dark *) {
      --tw-gradient-via: color-mix(
        in oklab,
        var(--color-purple-900) 20%,
        transparent
      );
    }
  }
  .dark\:via-purple-900\/20:is(.dark *) {
    --tw-gradient-via-stops:
      var(--tw-gradient-position),
      var(--tw-gradient-from) var(--tw-gradient-from-position),
      var(--tw-gradient-via) var(--tw-gradient-via-position),
      var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }
  .dark\:via-purple-950:is(.dark *) {
    --tw-gradient-via: var(--color-purple-950);
    --tw-gradient-via-stops:
      var(--tw-gradient-position),
      var(--tw-gradient-from) var(--tw-gradient-from-position),
      var(--tw-gradient-via) var(--tw-gradient-via-position),
      var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }
  .dark\:to-cyan-400:is(.dark *) {
    --tw-gradient-to: var(--color-cyan-400);
    --tw-gradient-stops: var(
      --tw-gradient-via-stops,
      var(--tw-gradient-position),
      var(--tw-gradient-from) var(--tw-gradient-from-position),
      var(--tw-gradient-to) var(--tw-gradient-to-position)
    );
  }
  .dark\:to-cyan-400\/10:is(.dark *) {
    --tw-gradient-to: #00d2ef1a;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .dark\:to-cyan-400\/10:is(.dark *) {
      --tw-gradient-to: color-mix(
        in oklab,
        var(--color-cyan-400) 10%,
        transparent
      );
    }
  }
  .dark\:to-cyan-400\/10:is(.dark *) {
    --tw-gradient-stops: var(
      --tw-gradient-via-stops,
      var(--tw-gradient-position),
      var(--tw-gradient-from) var(--tw-gradient-from-position),
      var(--tw-gradient-to) var(--tw-gradient-to-position)
    );
  }
  .dark\:to-cyan-400\/20:is(.dark *) {
    --tw-gradient-to: #00d2ef33;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .dark\:to-cyan-400\/20:is(.dark *) {
      --tw-gradient-to: color-mix(
        in oklab,
        var(--color-cyan-400) 20%,
        transparent
      );
    }
  }
  .dark\:to-cyan-400\/20:is(.dark *) {
    --tw-gradient-stops: var(
      --tw-gradient-via-stops,
      var(--tw-gradient-position),
      var(--tw-gradient-from) var(--tw-gradient-from-position),
      var(--tw-gradient-to) var(--tw-gradient-to-position)
    );
  }
  .dark\:to-cyan-500\/10:is(.dark *) {
    --tw-gradient-to: #00b7d71a;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .dark\:to-cyan-500\/10:is(.dark *) {
      --tw-gradient-to: color-mix(
        in oklab,
        var(--color-cyan-500) 10%,
        transparent
      );
    }
  }
  .dark\:to-cyan-500\/10:is(.dark *) {
    --tw-gradient-stops: var(
      --tw-gradient-via-stops,
      var(--tw-gradient-position),
      var(--tw-gradient-from) var(--tw-gradient-from-position),
      var(--tw-gradient-to) var(--tw-gradient-to-position)
    );
  }
  .dark\:to-gray-700:is(.dark *) {
    --tw-gradient-to: var(--color-gray-700);
    --tw-gradient-stops: var(
      --tw-gradient-via-stops,
      var(--tw-gradient-position),
      var(--tw-gradient-from) var(--tw-gradient-from-position),
      var(--tw-gradient-to) var(--tw-gradient-to-position)
    );
  }
  .dark\:to-gray-800:is(.dark *) {
    --tw-gradient-to: var(--color-gray-800);
    --tw-gradient-stops: var(
      --tw-gradient-via-stops,
      var(--tw-gradient-position),
      var(--tw-gradient-from) var(--tw-gradient-from-position),
      var(--tw-gradient-to) var(--tw-gradient-to-position)
    );
  }
  .dark\:to-gray-900:is(.dark *) {
    --tw-gradient-to: var(--color-gray-900);
    --tw-gradient-stops: var(
      --tw-gradient-via-stops,
      var(--tw-gradient-position),
      var(--tw-gradient-from) var(--tw-gradient-from-position),
      var(--tw-gradient-to) var(--tw-gradient-to-position)
    );
  }
  .dark\:to-indigo-900:is(.dark *) {
    --tw-gradient-to: var(--color-indigo-900);
    --tw-gradient-stops: var(
      --tw-gradient-via-stops,
      var(--tw-gradient-position),
      var(--tw-gradient-from) var(--tw-gradient-from-position),
      var(--tw-gradient-to) var(--tw-gradient-to-position)
    );
  }
  .dark\:to-pink-950:is(.dark *) {
    --tw-gradient-to: var(--color-pink-950);
    --tw-gradient-stops: var(
      --tw-gradient-via-stops,
      var(--tw-gradient-position),
      var(--tw-gradient-from) var(--tw-gradient-from-position),
      var(--tw-gradient-to) var(--tw-gradient-to-position)
    );
  }
  .dark\:to-purple-400:is(.dark *) {
    --tw-gradient-to: var(--color-purple-400);
    --tw-gradient-stops: var(
      --tw-gradient-via-stops,
      var(--tw-gradient-position),
      var(--tw-gradient-from) var(--tw-gradient-from-position),
      var(--tw-gradient-to) var(--tw-gradient-to-position)
    );
  }
  .dark\:to-purple-400\/20:is(.dark *) {
    --tw-gradient-to: #c07eff33;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .dark\:to-purple-400\/20:is(.dark *) {
      --tw-gradient-to: color-mix(
        in oklab,
        var(--color-purple-400) 20%,
        transparent
      );
    }
  }
  .dark\:to-purple-400\/20:is(.dark *) {
    --tw-gradient-stops: var(
      --tw-gradient-via-stops,
      var(--tw-gradient-position),
      var(--tw-gradient-from) var(--tw-gradient-from-position),
      var(--tw-gradient-to) var(--tw-gradient-to-position)
    );
  }
  .dark\:to-purple-900\/30:is(.dark *) {
    --tw-gradient-to: #59168b4d;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .dark\:to-purple-900\/30:is(.dark *) {
      --tw-gradient-to: color-mix(
        in oklab,
        var(--color-purple-900) 30%,
        transparent
      );
    }
  }
  .dark\:to-purple-900\/30:is(.dark *) {
    --tw-gradient-stops: var(
      --tw-gradient-via-stops,
      var(--tw-gradient-position),
      var(--tw-gradient-from) var(--tw-gradient-from-position),
      var(--tw-gradient-to) var(--tw-gradient-to-position)
    );
  }
  .dark\:text-black:is(.dark *) {
    color: var(--color-black);
  }
  .dark\:text-blue-100:is(.dark *) {
    color: var(--color-blue-100);
  }
  .dark\:text-blue-200:is(.dark *) {
    color: var(--color-blue-200);
  }
  .dark\:text-blue-300:is(.dark *) {
    color: var(--color-blue-300);
  }
  .dark\:text-blue-400:is(.dark *) {
    color: var(--color-blue-400);
  }
  .dark\:text-gray-50:is(.dark *) {
    color: var(--color-gray-50);
  }
  .dark\:text-gray-100:is(.dark *) {
    color: var(--color-gray-100);
  }
  .dark\:text-gray-200:is(.dark *) {
    color: var(--color-gray-200);
  }
  .dark\:text-gray-300:is(.dark *) {
    color: var(--color-gray-300);
  }
  .dark\:text-gray-400:is(.dark *) {
    color: var(--color-gray-400);
  }
  .dark\:text-gray-500:is(.dark *) {
    color: var(--color-gray-500);
  }
  .dark\:text-gray-600:is(.dark *) {
    color: var(--color-gray-600);
  }
  .dark\:text-gray-700:is(.dark *) {
    color: var(--color-gray-700);
  }
  .dark\:text-gray-800:is(.dark *) {
    color: var(--color-gray-800);
  }
  .dark\:text-gray-900:is(.dark *) {
    color: var(--color-gray-900);
  }
  .dark\:text-green-100:is(.dark *) {
    color: var(--color-green-100);
  }
  .dark\:text-green-200:is(.dark *) {
    color: var(--color-green-200);
  }
  .dark\:text-green-400:is(.dark *) {
    color: var(--color-green-400);
  }
  .dark\:text-green-500:is(.dark *) {
    color: var(--color-green-500);
  }
  .dark\:text-purple-400:is(.dark *) {
    color: var(--color-purple-400);
  }
  .dark\:text-red-100:is(.dark *) {
    color: var(--color-red-100);
  }
  .dark\:text-red-200:is(.dark *) {
    color: var(--color-red-200);
  }
  .dark\:text-red-400:is(.dark *) {
    color: var(--color-red-400);
  }
  .dark\:text-sky-400:is(.dark *) {
    color: var(--color-sky-400);
  }
  .dark\:text-white:is(.dark *) {
    color: var(--color-white);
  }
  .dark\:text-white\/40:is(.dark *) {
    color: #fff6;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .dark\:text-white\/40:is(.dark *) {
      color: color-mix(in oklab, var(--color-white) 40%, transparent);
    }
  }
  .dark\:text-white\/50:is(.dark *) {
    color: #ffffff80;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .dark\:text-white\/50:is(.dark *) {
      color: color-mix(in oklab, var(--color-white) 50%, transparent);
    }
  }
  .dark\:text-white\/60:is(.dark *) {
    color: #fff9;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .dark\:text-white\/60:is(.dark *) {
      color: color-mix(in oklab, var(--color-white) 60%, transparent);
    }
  }
  .dark\:text-white\/70:is(.dark *) {
    color: #ffffffb3;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .dark\:text-white\/70:is(.dark *) {
      color: color-mix(in oklab, var(--color-white) 70%, transparent);
    }
  }
  .dark\:text-white\/80:is(.dark *) {
    color: #fffc;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .dark\:text-white\/80:is(.dark *) {
      color: color-mix(in oklab, var(--color-white) 80%, transparent);
    }
  }
  .dark\:text-white\/90:is(.dark *) {
    color: #ffffffe6;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .dark\:text-white\/90:is(.dark *) {
      color: color-mix(in oklab, var(--color-white) 90%, transparent);
    }
  }
  .dark\:text-yellow-100:is(.dark *) {
    color: var(--color-yellow-100);
  }
  .dark\:text-yellow-200:is(.dark *) {
    color: var(--color-yellow-200);
  }
  .dark\:text-zinc-400:is(.dark *) {
    color: var(--color-zinc-400);
  }
  .dark\:placeholder-white\/50:is(.dark *)::placeholder {
    color: #ffffff80;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .dark\:placeholder-white\/50:is(.dark *)::placeholder {
      color: color-mix(in oklab, var(--color-white) 50%, transparent);
    }
  }
  .dark\:scheme-dark:is(.dark *) {
    color-scheme: dark;
  }
  .dark\:opacity-60:is(.dark *) {
    opacity: 0.6;
  }
  .dark\:ring-blue-300\/20:is(.dark *) {
    --tw-ring-color: #90c5ff33;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .dark\:ring-blue-300\/20:is(.dark *) {
      --tw-ring-color: color-mix(
        in oklab,
        var(--color-blue-300) 20%,
        transparent
      );
    }
  }
  .dark\:ring-purple-600\/30:is(.dark *) {
    --tw-ring-color: #9810fa4d;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .dark\:ring-purple-600\/30:is(.dark *) {
      --tw-ring-color: color-mix(
        in oklab,
        var(--color-purple-600) 30%,
        transparent
      );
    }
  }
  .dark\:ring-white\/10:is(.dark *) {
    --tw-ring-color: #ffffff1a;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .dark\:ring-white\/10:is(.dark *) {
      --tw-ring-color: color-mix(in oklab, var(--color-white) 10%, transparent);
    }
  }
  .dark\:ring-white\/15:is(.dark *) {
    --tw-ring-color: #ffffff26;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .dark\:ring-white\/15:is(.dark *) {
      --tw-ring-color: color-mix(in oklab, var(--color-white) 15%, transparent);
    }
  }
  .dark\:ring-white\/20:is(.dark *) {
    --tw-ring-color: #fff3;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .dark\:ring-white\/20:is(.dark *) {
      --tw-ring-color: color-mix(in oklab, var(--color-white) 20%, transparent);
    }
  }
  .dark\:ring-offset-gray-800:is(.dark *) {
    --tw-ring-offset-color: var(--color-gray-800);
  }
  @media (hover: hover) {
    .dark\:group-hover\:ring-white\/40:is(.dark *):is(:where(.group):hover *) {
      --tw-ring-color: #fff6;
    }
    @supports (color: color-mix(in lab, red, red)) {
      .dark\:group-hover\:ring-white\/40:is(.dark *):is(
          :where(.group):hover *
        ) {
        --tw-ring-color: color-mix(
          in oklab,
          var(--color-white) 40%,
          transparent
        );
      }
    }
  }
  .dark\:placeholder\:text-zinc-500:is(.dark *)::placeholder {
    color: var(--color-zinc-500);
  }
  .dark\:before\:hidden:is(.dark *):before {
    content: var(--tw-content);
    display: none;
  }
  @media (hover: hover) {
    .dark\:hover\:border-gray-600:is(.dark *):hover {
      border-color: var(--color-gray-600);
    }
    .dark\:hover\:border-white\/20:is(.dark *):hover {
      border-color: #fff3;
    }
    @supports (color: color-mix(in lab, red, red)) {
      .dark\:hover\:border-white\/20:is(.dark *):hover {
        border-color: color-mix(in oklab, var(--color-white) 20%, transparent);
      }
    }
    .dark\:hover\:border-white\/30:is(.dark *):hover {
      border-color: #ffffff4d;
    }
    @supports (color: color-mix(in lab, red, red)) {
      .dark\:hover\:border-white\/30:is(.dark *):hover {
        border-color: color-mix(in oklab, var(--color-white) 30%, transparent);
      }
    }
    .dark\:hover\:border-white\/60:is(.dark *):hover {
      border-color: #fff9;
    }
    @supports (color: color-mix(in lab, red, red)) {
      .dark\:hover\:border-white\/60:is(.dark *):hover {
        border-color: color-mix(in oklab, var(--color-white) 60%, transparent);
      }
    }
    .dark\:hover\:bg-gray-50:is(.dark *):hover {
      background-color: var(--color-gray-50);
    }
    .dark\:hover\:bg-gray-100:is(.dark *):hover {
      background-color: var(--color-gray-100);
    }
    .dark\:hover\:bg-gray-200:is(.dark *):hover {
      background-color: var(--color-gray-200);
    }
    .dark\:hover\:bg-gray-600:is(.dark *):hover {
      background-color: var(--color-gray-600);
    }
    .dark\:hover\:bg-gray-700:is(.dark *):hover {
      background-color: var(--color-gray-700);
    }
    .dark\:hover\:bg-gray-800:is(.dark *):hover {
      background-color: var(--color-gray-800);
    }
    .dark\:hover\:bg-green-600:is(.dark *):hover {
      background-color: var(--color-green-600);
    }
    .dark\:hover\:bg-indigo-600:is(.dark *):hover {
      background-color: var(--color-indigo-600);
    }
    .dark\:hover\:bg-purple-700:is(.dark *):hover {
      background-color: var(--color-purple-700);
    }
    .dark\:hover\:bg-red-600:is(.dark *):hover {
      background-color: var(--color-red-600);
    }
    .dark\:hover\:bg-white\/10:is(.dark *):hover {
      background-color: #ffffff1a;
    }
    @supports (color: color-mix(in lab, red, red)) {
      .dark\:hover\:bg-white\/10:is(.dark *):hover {
        background-color: color-mix(
          in oklab,
          var(--color-white) 10%,
          transparent
        );
      }
    }
    .dark\:hover\:bg-white\/20:is(.dark *):hover {
      background-color: #fff3;
    }
    @supports (color: color-mix(in lab, red, red)) {
      .dark\:hover\:bg-white\/20:is(.dark *):hover {
        background-color: color-mix(
          in oklab,
          var(--color-white) 20%,
          transparent
        );
      }
    }
    .dark\:hover\:bg-white\/90:is(.dark *):hover {
      background-color: #ffffffe6;
    }
    @supports (color: color-mix(in lab, red, red)) {
      .dark\:hover\:bg-white\/90:is(.dark *):hover {
        background-color: color-mix(
          in oklab,
          var(--color-white) 90%,
          transparent
        );
      }
    }
    .dark\:hover\:text-gray-200:is(.dark *):hover {
      color: var(--color-gray-200);
    }
    .dark\:hover\:text-gray-300:is(.dark *):hover {
      color: var(--color-gray-300);
    }
    .dark\:hover\:text-green-400:is(.dark *):hover {
      color: var(--color-green-400);
    }
    .dark\:hover\:text-indigo-400:is(.dark *):hover {
      color: var(--color-indigo-400);
    }
    .dark\:hover\:text-purple-300:is(.dark *):hover {
      color: var(--color-purple-300);
    }
    .dark\:hover\:text-red-300:is(.dark *):hover {
      color: var(--color-red-300);
    }
    .dark\:hover\:text-red-400:is(.dark *):hover {
      color: var(--color-red-400);
    }
    .dark\:hover\:text-white:is(.dark *):hover {
      color: var(--color-white);
    }
    .dark\:hover\:text-white\/70:is(.dark *):hover {
      color: #ffffffb3;
    }
    @supports (color: color-mix(in lab, red, red)) {
      .dark\:hover\:text-white\/70:is(.dark *):hover {
        color: color-mix(in oklab, var(--color-white) 70%, transparent);
      }
    }
    .dark\:hover\:shadow-indigo-400\/25:is(.dark *):hover {
      --tw-shadow-color: #7d87ff40;
    }
    @supports (color: color-mix(in lab, red, red)) {
      .dark\:hover\:shadow-indigo-400\/25:is(.dark *):hover {
        --tw-shadow-color: color-mix(
          in oklab,
          color-mix(in oklab, var(--color-indigo-400) 25%, transparent)
            var(--tw-shadow-alpha),
          transparent
        );
      }
    }
    .dark\:hover\:ring-white\/20:is(.dark *):hover {
      --tw-ring-color: #fff3;
    }
    @supports (color: color-mix(in lab, red, red)) {
      .dark\:hover\:ring-white\/20:is(.dark *):hover {
        --tw-ring-color: color-mix(
          in oklab,
          var(--color-white) 20%,
          transparent
        );
      }
    }
  }
  .dark\:focus\:ring-indigo-600:is(.dark *):focus {
    --tw-ring-color: var(--color-indigo-600);
  }
  .dark\:focus\:ring-purple-500:is(.dark *):focus {
    --tw-ring-color: var(--color-purple-500);
  }
  .dark\:focus-visible\:ring-gray-500:is(.dark *):focus-visible {
    --tw-ring-color: var(--color-gray-500);
  }
  .dark\:focus-visible\:ring-gray-600:is(.dark *):focus-visible {
    --tw-ring-color: var(--color-gray-600);
  }
  .dark\:focus-visible\:ring-white\/40:is(.dark *):focus-visible {
    --tw-ring-color: #fff6;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .dark\:focus-visible\:ring-white\/40:is(.dark *):focus-visible {
      --tw-ring-color: color-mix(in oklab, var(--color-white) 40%, transparent);
    }
  }
  .dark\:focus-visible\:ring-white\/50:is(.dark *):focus-visible {
    --tw-ring-color: #ffffff80;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .dark\:focus-visible\:ring-white\/50:is(.dark *):focus-visible {
      --tw-ring-color: color-mix(in oklab, var(--color-white) 50%, transparent);
    }
  }
  .dark\:focus-visible\:ring-offset-gray-900:is(.dark *):focus-visible {
    --tw-ring-offset-color: var(--color-gray-900);
  }
  .dark\:disabled\:border-white\/15:is(.dark *):disabled {
    border-color: #ffffff26;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .dark\:disabled\:border-white\/15:is(.dark *):disabled {
      border-color: color-mix(in oklab, var(--color-white) 15%, transparent);
    }
  }
  .dark\:disabled\:bg-white\/2\.5:is(.dark *):disabled {
    background-color: #ffffff06;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .dark\:disabled\:bg-white\/2\.5:is(.dark *):disabled {
      background-color: color-mix(
        in oklab,
        var(--color-white) 2.5%,
        transparent
      );
    }
  }
  .dark\:data-disabled\:border-white\/15:is(.dark *)[data-disabled] {
    border-color: #ffffff26;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .dark\:data-disabled\:border-white\/15:is(.dark *)[data-disabled] {
      border-color: color-mix(in oklab, var(--color-white) 15%, transparent);
    }
  }
  .dark\:data-disabled\:bg-white\/2\.5:is(.dark *)[data-disabled] {
    background-color: #ffffff06;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .dark\:data-disabled\:bg-white\/2\.5:is(.dark *)[data-disabled] {
      background-color: color-mix(
        in oklab,
        var(--color-white) 2.5%,
        transparent
      );
    }
  }
  .dark\:data-hover\:border-red-500:is(.dark *)[data-hover] {
    border-color: var(--color-red-500);
  }
  .dark\:data-hover\:border-white\/20:is(.dark *)[data-hover] {
    border-color: #fff3;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .dark\:data-hover\:border-white\/20:is(.dark *)[data-hover] {
      border-color: color-mix(in oklab, var(--color-white) 20%, transparent);
    }
  }
  .dark\:data-hover\:disabled\:border-white\/15:is(
      .dark *
    )[data-hover]:disabled {
    border-color: #ffffff26;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .dark\:data-hover\:disabled\:border-white\/15:is(
        .dark *
      )[data-hover]:disabled {
      border-color: color-mix(in oklab, var(--color-white) 15%, transparent);
    }
  }
  .dark\:data-hover\:data-disabled\:border-white\/15:is(
      .dark *
    )[data-hover][data-disabled] {
    border-color: #ffffff26;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .dark\:data-hover\:data-disabled\:border-white\/15:is(
        .dark *
      )[data-hover][data-disabled] {
      border-color: color-mix(in oklab, var(--color-white) 15%, transparent);
    }
  }
  .dark\:data-invalid\:border-red-500:is(.dark *)[data-invalid] {
    border-color: var(--color-red-500);
  }
  .dark\:data-invalid\:border-red-600:is(.dark *)[data-invalid] {
    border-color: var(--color-red-600);
  }
  .dark\:data-invalid\:data-hover\:border-red-500:is(
      .dark *
    )[data-invalid][data-hover] {
    border-color: var(--color-red-500);
  }
  .dark\:data-invalid\:data-hover\:border-red-600:is(
      .dark *
    )[data-invalid][data-hover] {
    border-color: var(--color-red-600);
  }
  :is(
    .dark\:data-\[slot\=icon\]\:\*\:text-zinc-400:is(.dark *)[data-slot='icon']
      > *
  ) {
    color: var(--color-zinc-400);
  }
  @supports (
    (-webkit-backdrop-filter: var(--tw)) or (backdrop-filter: var(--tw))
  ) {
    .dark\:supports-backdrop-filter\:bg-\[\#0D0E12\]\/60:is(.dark *) {
      background-color: #0d0e1299;
    }
    .dark\:supports-backdrop-filter\:bg-gray-900\/60:is(.dark *) {
      background-color: #11182799;
    }
    @supports (color: color-mix(in lab, red, red)) {
      .dark\:supports-backdrop-filter\:bg-gray-900\/60:is(.dark *) {
        background-color: color-mix(
          in oklab,
          var(--color-gray-900) 60%,
          transparent
        );
      }
    }
  }
  @media (min-width: 64rem) {
    .lg\:dark\:border-gray-700:is(.dark *) {
      border-color: var(--color-gray-700);
    }
  }
  @media (forced-colors: active) {
    .forced-colors\:outline-solid {
      --tw-outline-style: solid;
      outline-style: solid;
    }
  }
  .prose-headings\:text-white
    :where(h1, h2, h3, h4, h5, h6, th):not(
      :where([class~='not-prose'], [class~='not-prose'] *)
    ) {
    color: var(--color-white);
  }
  .prose-p\:text-white\/70
    :where(p):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    color: #ffffffb3;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .prose-p\:text-white\/70
      :where(p):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
      color: color-mix(in oklab, var(--color-white) 70%, transparent);
    }
  }
  .prose-a\:text-blue-400
    :where(a):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    color: var(--color-blue-400);
  }
  .prose-strong\:text-white
    :where(strong):not(:where([class~='not-prose'], [class~='not-prose'] *)),
  .prose-code\:text-white
    :where(code):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    color: var(--color-white);
  }
  .prose-pre\:border
    :where(pre):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }
  .prose-pre\:border-white\/10
    :where(pre):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    border-color: #ffffff1a;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .prose-pre\:border-white\/10
      :where(pre):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
      border-color: color-mix(in oklab, var(--color-white) 10%, transparent);
    }
  }
  .prose-pre\:bg-white\/5
    :where(pre):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
    background-color: #ffffff0d;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .prose-pre\:bg-white\/5
      :where(pre):not(:where([class~='not-prose'], [class~='not-prose'] *)) {
      background-color: color-mix(in oklab, var(--color-white) 5%, transparent);
    }
  }
  .\[\&_input\]\:has-\[\[data-slot\=icon\]\:first-child\]\:pl-10
    input:has([data-slot='icon']:first-child) {
    padding-left: calc(var(--spacing) * 10);
  }
  .\[\&_input\]\:has-\[\[data-slot\=icon\]\:last-child\]\:pr-10
    input:has([data-slot='icon']:last-child) {
    padding-right: calc(var(--spacing) * 10);
  }
  @media (min-width: 40rem) {
    .sm\:\[\&_input\]\:has-\[\[data-slot\=icon\]\:first-child\]\:pl-8
      input:has([data-slot='icon']:first-child) {
      padding-left: calc(var(--spacing) * 8);
    }
    .sm\:\[\&_input\]\:has-\[\[data-slot\=icon\]\:last-child\]\:pr-8
      input:has([data-slot='icon']:last-child) {
      padding-right: calc(var(--spacing) * 8);
    }
  }
  .\[\&\:\:-webkit-date-and-time-value\]\:min-h-\[1\.5em\]::-webkit-date-and-time-value {
    min-height: 1.5em;
  }
  .\[\&\:\:-webkit-datetime-edit\]\:inline-flex::-webkit-datetime-edit {
    display: inline-flex;
  }
  .\[\&\:\:-webkit-datetime-edit\]\:p-0::-webkit-datetime-edit {
    padding: calc(var(--spacing) * 0);
  }
  .\[\&\:\:-webkit-datetime-edit-day-field\]\:p-0::-webkit-datetime-edit-day-field {
    padding: calc(var(--spacing) * 0);
  }
  .\[\&\:\:-webkit-datetime-edit-fields-wrapper\]\:p-0::-webkit-datetime-edit-fields-wrapper {
    padding: calc(var(--spacing) * 0);
  }
  .\[\&\:\:-webkit-datetime-edit-hour-field\]\:p-0::-webkit-datetime-edit-hour-field {
    padding: calc(var(--spacing) * 0);
  }
  .\[\&\:\:-webkit-datetime-edit-meridiem-field\]\:p-0::-webkit-datetime-edit-meridiem-field {
    padding: calc(var(--spacing) * 0);
  }
  .\[\&\:\:-webkit-datetime-edit-millisecond-field\]\:p-0::-webkit-datetime-edit-millisecond-field {
    padding: calc(var(--spacing) * 0);
  }
  .\[\&\:\:-webkit-datetime-edit-minute-field\]\:p-0::-webkit-datetime-edit-minute-field {
    padding: calc(var(--spacing) * 0);
  }
  .\[\&\:\:-webkit-datetime-edit-month-field\]\:p-0::-webkit-datetime-edit-month-field {
    padding: calc(var(--spacing) * 0);
  }
  .\[\&\:\:-webkit-datetime-edit-second-field\]\:p-0::-webkit-datetime-edit-second-field {
    padding: calc(var(--spacing) * 0);
  }
  .\[\&\:\:-webkit-datetime-edit-year-field\]\:p-0::-webkit-datetime-edit-year-field {
    padding: calc(var(--spacing) * 0);
  }
  .\[\&\:\:-webkit-scrollbar\]\:hidden::-webkit-scrollbar {
    display: none;
  }
  .\[\&\>\[data-slot\=icon\]\:first-child\]\:left-3
    > [data-slot='icon']:first-child {
    left: calc(var(--spacing) * 3);
  }
  @media (min-width: 40rem) {
    .sm\:\[\&\>\[data-slot\=icon\]\:first-child\]\:left-2\.5
      > [data-slot='icon']:first-child {
      left: calc(var(--spacing) * 2.5);
    }
  }
  .\[\&\>\[data-slot\=icon\]\:last-child\]\:right-3
    > [data-slot='icon']:last-child {
    right: calc(var(--spacing) * 3);
  }
  @media (min-width: 40rem) {
    .sm\:\[\&\>\[data-slot\=icon\]\:last-child\]\:right-2\.5
      > [data-slot='icon']:last-child {
      right: calc(var(--spacing) * 2.5);
    }
  }
}
@font-face {
  font-family: Inter;
  font-style: normal;
  font-display: swap;
  font-weight: 400;
  src:
    url(./files/inter-cyrillic-ext-400-normal.woff2) format('woff2'),
    url(./files/inter-cyrillic-ext-400-normal.woff) format('woff');
  unicode-range:
    U+460-52F, U+1C80-1C8A, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F;
}
@font-face {
  font-family: Inter;
  font-style: normal;
  font-display: swap;
  font-weight: 400;
  src:
    url(./files/inter-cyrillic-400-normal.woff2) format('woff2'),
    url(./files/inter-cyrillic-400-normal.woff) format('woff');
  unicode-range: U+301, U+400-45F, U+490-491, U+4B0-4B1, U+2116;
}
@font-face {
  font-family: Inter;
  font-style: normal;
  font-display: swap;
  font-weight: 400;
  src:
    url(./files/inter-greek-ext-400-normal.woff2) format('woff2'),
    url(./files/inter-greek-ext-400-normal.woff) format('woff');
  unicode-range: U+1F??;
}
@font-face {
  font-family: Inter;
  font-style: normal;
  font-display: swap;
  font-weight: 400;
  src:
    url(./files/inter-greek-400-normal.woff2) format('woff2'),
    url(./files/inter-greek-400-normal.woff) format('woff');
  unicode-range: U+370-377, U+37A-37F, U+384-38A, U+38C, U+38E-3A1, U+3A3-3FF;
}
@font-face {
  font-family: Inter;
  font-style: normal;
  font-display: swap;
  font-weight: 400;
  src:
    url(./files/inter-vietnamese-400-normal.woff2) format('woff2'),
    url(./files/inter-vietnamese-400-normal.woff) format('woff');
  unicode-range:
    U+102-103, U+110-111, U+128-129, U+168-169, U+1A0-1A1, U+1AF-1B0, U+300-301,
    U+303-304, U+308-309, U+323, U+329, U+1EA0-1EF9, U+20AB;
}
@font-face {
  font-family: Inter;
  font-style: normal;
  font-display: swap;
  font-weight: 400;
  src:
    url(./files/inter-latin-ext-400-normal.woff2) format('woff2'),
    url(./files/inter-latin-ext-400-normal.woff) format('woff');
  unicode-range:
    U+100-2BA, U+2BD-2C5, U+2C7-2CC, U+2CE-2D7, U+2DD-2FF, U+304, U+308, U+329,
    U+1D00-1DBF, U+1E00-1E9F, U+1EF2-1EFF, U+2020, U+20A0-20AB, U+20AD-20C0,
    U+2113, U+2C60-2C7F, U+A720-A7FF;
}
@font-face {
  font-family: Inter;
  font-style: normal;
  font-display: swap;
  font-weight: 400;
  src:
    url(./files/inter-latin-400-normal.woff2) format('woff2'),
    url(./files/inter-latin-400-normal.woff) format('woff');
  unicode-range:
    U+??, U+131, U+152-153, U+2BB-2BC, U+2C6, U+2DA, U+2DC, U+304, U+308, U+329,
    U+2000-206F, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;
}
@font-face {
  font-family: Inter;
  font-style: normal;
  font-display: swap;
  font-weight: 700;
  src:
    url(./files/inter-cyrillic-ext-700-normal.woff2) format('woff2'),
    url(./files/inter-cyrillic-ext-700-normal.woff) format('woff');
  unicode-range:
    U+460-52F, U+1C80-1C8A, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F;
}
@font-face {
  font-family: Inter;
  font-style: normal;
  font-display: swap;
  font-weight: 700;
  src:
    url(./files/inter-cyrillic-700-normal.woff2) format('woff2'),
    url(./files/inter-cyrillic-700-normal.woff) format('woff');
  unicode-range: U+301, U+400-45F, U+490-491, U+4B0-4B1, U+2116;
}
@font-face {
  font-family: Inter;
  font-style: normal;
  font-display: swap;
  font-weight: 700;
  src:
    url(./files/inter-greek-ext-700-normal.woff2) format('woff2'),
    url(./files/inter-greek-ext-700-normal.woff) format('woff');
  unicode-range: U+1F??;
}
@font-face {
  font-family: Inter;
  font-style: normal;
  font-display: swap;
  font-weight: 700;
  src:
    url(./files/inter-greek-700-normal.woff2) format('woff2'),
    url(./files/inter-greek-700-normal.woff) format('woff');
  unicode-range: U+370-377, U+37A-37F, U+384-38A, U+38C, U+38E-3A1, U+3A3-3FF;
}
@font-face {
  font-family: Inter;
  font-style: normal;
  font-display: swap;
  font-weight: 700;
  src:
    url(./files/inter-vietnamese-700-normal.woff2) format('woff2'),
    url(./files/inter-vietnamese-700-normal.woff) format('woff');
  unicode-range:
    U+102-103, U+110-111, U+128-129, U+168-169, U+1A0-1A1, U+1AF-1B0, U+300-301,
    U+303-304, U+308-309, U+323, U+329, U+1EA0-1EF9, U+20AB;
}
@font-face {
  font-family: Inter;
  font-style: normal;
  font-display: swap;
  font-weight: 700;
  src:
    url(./files/inter-latin-ext-700-normal.woff2) format('woff2'),
    url(./files/inter-latin-ext-700-normal.woff) format('woff');
  unicode-range:
    U+100-2BA, U+2BD-2C5, U+2C7-2CC, U+2CE-2D7, U+2DD-2FF, U+304, U+308, U+329,
    U+1D00-1DBF, U+1E00-1E9F, U+1EF2-1EFF, U+2020, U+20A0-20AB, U+20AD-20C0,
    U+2113, U+2C60-2C7F, U+A720-A7FF;
}
@font-face {
  font-family: Inter;
  font-style: normal;
  font-display: swap;
  font-weight: 700;
  src:
    url(./files/inter-latin-700-normal.woff2) format('woff2'),
    url(./files/inter-latin-700-normal.woff) format('woff');
  unicode-range:
    U+??, U+131, U+152-153, U+2BB-2BC, U+2C6, U+2DA, U+2DC, U+304, U+308, U+329,
    U+2000-206F, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;
}
:root {
  --bg: #fff;
  --fg: #0b0b0c;
  --muted: #6b7280;
  --panel: #f6f7f8;
  --border: #e5e7eb;
  --accent-conv: #6e56cf;
  --accent-analytics: #0ea5e9;
  --accent-speed: #22c55e;
  --accent-beauty: #f59e0b;
  --accent-seo: #ef4444;
  --accent-links: #a855f7;
  --accent-pro: #14b8a6;
}
:root.dark {
  --bg: #0b0b0c;
  --fg: #f7f7f8;
  --muted: #98a2b3;
  --panel: #111214;
  --border: #1f2124;
}
@property --tw-font-weight {
  syntax: '*';
  inherits: false;
}
@property --tw-shadow {
  syntax: '*';
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-shadow-color {
  syntax: '*';
  inherits: false;
}
@property --tw-shadow-alpha {
  syntax: '<percentage>';
  inherits: false;
  initial-value: 100%;
}
@property --tw-inset-shadow {
  syntax: '*';
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-shadow-color {
  syntax: '*';
  inherits: false;
}
@property --tw-inset-shadow-alpha {
  syntax: '<percentage>';
  inherits: false;
  initial-value: 100%;
}
@property --tw-ring-color {
  syntax: '*';
  inherits: false;
}
@property --tw-ring-shadow {
  syntax: '*';
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-ring-color {
  syntax: '*';
  inherits: false;
}
@property --tw-inset-ring-shadow {
  syntax: '*';
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-ring-inset {
  syntax: '*';
  inherits: false;
}
@property --tw-ring-offset-width {
  syntax: '<length>';
  inherits: false;
  initial-value: 0;
}
@property --tw-ring-offset-color {
  syntax: '*';
  inherits: false;
  initial-value: #fff;
}
@property --tw-ring-offset-shadow {
  syntax: '*';
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-translate-x {
  syntax: '*';
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-y {
  syntax: '*';
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-z {
  syntax: '*';
  inherits: false;
  initial-value: 0;
}
@property --tw-scale-x {
  syntax: '*';
  inherits: false;
  initial-value: 1;
}
@property --tw-scale-y {
  syntax: '*';
  inherits: false;
  initial-value: 1;
}
@property --tw-scale-z {
  syntax: '*';
  inherits: false;
  initial-value: 1;
}
@property --tw-rotate-x {
  syntax: '*';
  inherits: false;
}
@property --tw-rotate-y {
  syntax: '*';
  inherits: false;
}
@property --tw-rotate-z {
  syntax: '*';
  inherits: false;
}
@property --tw-skew-x {
  syntax: '*';
  inherits: false;
}
@property --tw-skew-y {
  syntax: '*';
  inherits: false;
}
@property --tw-space-y-reverse {
  syntax: '*';
  inherits: false;
  initial-value: 0;
}
@property --tw-space-x-reverse {
  syntax: '*';
  inherits: false;
  initial-value: 0;
}
@property --tw-divide-y-reverse {
  syntax: '*';
  inherits: false;
  initial-value: 0;
}
@property --tw-border-style {
  syntax: '*';
  inherits: false;
  initial-value: solid;
}
@property --tw-gradient-position {
  syntax: '*';
  inherits: false;
}
@property --tw-gradient-from {
  syntax: '<color>';
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-via {
  syntax: '<color>';
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-to {
  syntax: '<color>';
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-stops {
  syntax: '*';
  inherits: false;
}
@property --tw-gradient-via-stops {
  syntax: '*';
  inherits: false;
}
@property --tw-gradient-from-position {
  syntax: '<length-percentage>';
  inherits: false;
  initial-value: 0%;
}
@property --tw-gradient-via-position {
  syntax: '<length-percentage>';
  inherits: false;
  initial-value: 50%;
}
@property --tw-gradient-to-position {
  syntax: '<length-percentage>';
  inherits: false;
  initial-value: 100%;
}
@property --tw-leading {
  syntax: '*';
  inherits: false;
}
@property --tw-tracking {
  syntax: '*';
  inherits: false;
}
@property --tw-ordinal {
  syntax: '*';
  inherits: false;
}
@property --tw-slashed-zero {
  syntax: '*';
  inherits: false;
}
@property --tw-numeric-figure {
  syntax: '*';
  inherits: false;
}
@property --tw-numeric-spacing {
  syntax: '*';
  inherits: false;
}
@property --tw-numeric-fraction {
  syntax: '*';
  inherits: false;
}
@property --tw-outline-style {
  syntax: '*';
  inherits: false;
  initial-value: solid;
}
@property --tw-blur {
  syntax: '*';
  inherits: false;
}
@property --tw-brightness {
  syntax: '*';
  inherits: false;
}
@property --tw-contrast {
  syntax: '*';
  inherits: false;
}
@property --tw-grayscale {
  syntax: '*';
  inherits: false;
}
@property --tw-hue-rotate {
  syntax: '*';
  inherits: false;
}
@property --tw-invert {
  syntax: '*';
  inherits: false;
}
@property --tw-opacity {
  syntax: '*';
  inherits: false;
}
@property --tw-saturate {
  syntax: '*';
  inherits: false;
}
@property --tw-sepia {
  syntax: '*';
  inherits: false;
}
@property --tw-drop-shadow {
  syntax: '*';
  inherits: false;
}
@property --tw-drop-shadow-color {
  syntax: '*';
  inherits: false;
}
@property --tw-drop-shadow-alpha {
  syntax: '<percentage>';
  inherits: false;
  initial-value: 100%;
}
@property --tw-drop-shadow-size {
  syntax: '*';
  inherits: false;
}
@property --tw-backdrop-blur {
  syntax: '*';
  inherits: false;
}
@property --tw-backdrop-brightness {
  syntax: '*';
  inherits: false;
}
@property --tw-backdrop-contrast {
  syntax: '*';
  inherits: false;
}
@property --tw-backdrop-grayscale {
  syntax: '*';
  inherits: false;
}
@property --tw-backdrop-hue-rotate {
  syntax: '*';
  inherits: false;
}
@property --tw-backdrop-invert {
  syntax: '*';
  inherits: false;
}
@property --tw-backdrop-opacity {
  syntax: '*';
  inherits: false;
}
@property --tw-backdrop-saturate {
  syntax: '*';
  inherits: false;
}
@property --tw-backdrop-sepia {
  syntax: '*';
  inherits: false;
}
@property --tw-duration {
  syntax: '*';
  inherits: false;
}
@property --tw-ease {
  syntax: '*';
  inherits: false;
}
@property --tw-content {
  syntax: '*';
  inherits: false;
  initial-value: '';
}
@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}
@keyframes pulse {
  50% {
    opacity: 0.5;
  }
}
