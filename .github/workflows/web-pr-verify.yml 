name: PR Web Checks

on:
  pull_request:
    branches: [ dev ]
    types: [opened, synchronize, reopened]

permissions:
  contents: read
  pull-requests: write

jobs:
  pr-verify:
    runs-on: ubuntu-latest
    timeout-minutes: 25
    env:
      VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
      # Dev env (public + server) for preview deploys
      NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.DEV_NEXT_PUBLIC_SUPABASE_URL }}
      SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.DEV_SUPABASE_SERVICE_ROLE_KEY }}
      NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY: ${{ secrets.DEV_NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY }}
      CLERK_SECRET_KEY: ${{ secrets.DEV_CLERK_SECRET_KEY }}

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - run: npm ci

      - name: Typecheck
        run: npm run typecheck --if-present

      - name: Lint
        run: npm run lint --if-present

      - name: Unit tests
        run: npm run test --if-present -- --ci

      - name: Build (SSR sanity)
        run: npm run build

      - name: Vercel pull preview env
        run: npx vercel pull --environment=preview --yes --token "$VERCEL_TOKEN"

      - name: Vercel build (prebuilt artifacts)
        run: npx vercel build --token "$VERCEL_TOKEN"

      - name: Vercel deploy (preview)
        id: vercel
        run: |
          URL=$(npx vercel deploy --prebuilt --token "$VERCEL_TOKEN")
          echo "url=$URL" >> $GITHUB_OUTPUT

      - name: Comment preview URL
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          header: vercel-preview
          message: |
            âœ… Preview deployed: ${{ steps.vercel.outputs.url }}

      - name: Health check
        run: |
          curl -sSfL "${{ steps.vercel.outputs.url }}/api/health" -o /dev/null

      - name: Lighthouse CI (homepage)
        uses: treosh/lighthouse-ci-action@v12
        with:
          urls: ${{ steps.vercel.outputs.url }}
          configPath: .lighthouserc.json
          uploadArtifacts: true
          temporaryPublicStorage: true

      - name: Accessibility (axe via playwright)
        run: |
          npx playwright install --with-deps
          npm run a11y:ci --if-present

      - name: Dependency security (high+)
        run: npx audit-ci --moderate --allowlist "npm:*" || npm audit --audit-level=high