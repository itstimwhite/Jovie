name: Preview CI/CD Pipeline

on:
  push:
    branches: [preview]
  workflow_dispatch: {}

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    uses: ./.github/workflows/_reusable-build.yml

  deploy:
    needs: build
    runs-on: ubuntu-latest
    env:
      VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
      NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.PREVIEW_NEXT_PUBLIC_SUPABASE_URL }}
      SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.PREVIEW_SUPABASE_SERVICE_ROLE_KEY }}
      NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY: ${{ secrets.PREVIEW_NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY }}
      CLERK_SECRET_KEY: ${{ secrets.PREVIEW_CLERK_SECRET_KEY }}

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20.17
          cache: 'npm'

      - run: npm ci

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: build-output
          path: .next

      - name: Vercel pull preview env
        run: npx vercel pull --environment=preview --yes --token "$VERCEL_TOKEN"

      - name: Vercel build
        run: npx vercel build --token "$VERCEL_TOKEN"

      - name: Vercel deploy (preview)
        id: vercel
        run: |
          URL=$(npx vercel deploy --prebuilt --token "$VERCEL_TOKEN")
          echo "url=$URL" >> $GITHUB_OUTPUT

      - name: Upload Vercel output
        uses: actions/upload-artifact@v4
        with:
          name: vercel-output
          path: .vercel/output
          retention-days: 1

  e2e:
    needs: deploy
    runs-on: ubuntu-latest
    strategy:
      matrix:
        browser: [chromium, firefox, webkit]
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20.17
          cache: 'npm'

      - run: npm ci
      - run: npx playwright install --with-deps

      - name: Run E2E tests
        run: |
          BASE_URL="${{ needs.deploy.outputs.url }}" npm run test:e2e

  lighthouse:
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Lighthouse multipage audit
        uses: treosh/lighthouse-ci-action@v12
        with:
          urls: |
            ${{ needs.deploy.outputs.url }}
            ${{ needs.deploy.outputs.url }}/artists
            ${{ needs.deploy.outputs.url }}/dashboard
          configPath: .lighthouserc.json
          uploadArtifacts: true
          temporaryPublicStorage: true

  bundle-size:
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20.17
          cache: 'npm'

      - run: npm ci
      - run: npm run build

      - name: Analyze bundle size
        run: |
          npx @next/bundle-analyzer .next/static/chunks/*.js --out-dir ./bundle-analysis

      - name: Upload bundle analysis
        uses: actions/upload-artifact@v4
        with:
          name: bundle-analysis
          path: ./bundle-analysis
          retention-days: 7

  security:
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Run ZAP DAST
        uses: zaproxy/action-full-scan@v0.8.0
        with:
          target: '${{ needs.deploy.outputs.url }}'
          rules_file_name: '.zap/rules.tsv'
          cmd_options: '-a'

      - name: Upload ZAP results
        uses: actions/upload-artifact@v4
        with:
          name: zap-results
          path: zap-report.html
          retention-days: 30

  promote:
    needs: [deploy, e2e, lighthouse, bundle-size, security]
    if: ${{ success() && github.event_name == 'push' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Create/Update PR preview â†’ main
        id: create_pull_request
        uses: peter-evans/create-pull-request@v7
        with:
          title: 'Auto-promote: preview â†’ main'
          body: |
            ðŸ¤– **Automated Production Promotion**
            
            This PR automatically promotes changes from `preview` to `main`.
            
            **All checks passed:**
            - âœ… E2E tests (all browsers)
            - âœ… Lighthouse performance
            - âœ… Bundle size analysis
            - âœ… Security scan (ZAP)
            - âœ… All CI checks passed
            
            **Auto-merge enabled** - This PR will be automatically merged when all checks pass.
            
            **Deployment URL:** ${{ needs.deploy.outputs.url }}
          branch: auto-promote/main
          base: main
          delete-branch: true
          labels: ci, promotion, auto-merge, production
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Enable auto-merge (squash)
        uses: peter-evans/enable-pull-request-automerge@v3
        with:
          pull-request-number: ${{ steps.create_pull_request.outputs.pull-request-number }}
          merge-method: squash
          token: ${{ secrets.GITHUB_TOKEN }}
