name: Production Synthetic Monitoring

on:
  schedule:
    # Run every 5 minutes during business hours (9 AM - 9 PM PST)
    - cron: '*/5 9-21 * * *'
    # Run every 10 minutes during off-hours
    - cron: '*/10 22-8 * * *'
  workflow_dispatch: # Allow manual triggering
    inputs:
      environment:
        description: 'Environment to test'
        required: true
        default: 'production'
        type: choice
        options:
          - production
          - preview

env:
  PLAYWRIGHT_BROWSERS_PATH: 0

jobs:
  synthetic-test:
    name: Golden Path Synthetic Test
    runs-on: ubuntu-latest
    timeout-minutes: 15
    
    strategy:
      fail-fast: false
      matrix:
        environment: 
          - production
          - preview
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js with Cache
        uses: ./.github/actions/setup-node
        
      - name: Install Playwright Browsers
        run: npx playwright install --with-deps chromium
        
      - name: Set environment URLs
        run: |
          if [ "${{ matrix.environment }}" = "production" ]; then
            echo "BASE_URL=https://jovie.app" >> $GITHUB_ENV
            echo "ENVIRONMENT=production" >> $GITHUB_ENV
          else
            echo "BASE_URL=https://preview.jovie.app" >> $GITHUB_ENV
            echo "ENVIRONMENT=preview" >> $GITHUB_ENV
          fi
          
      - name: Run Golden Path Test
        env:
          BASE_URL: ${{ env.BASE_URL }}
          PLAYWRIGHT_TEST_BASE_URL: ${{ env.BASE_URL }}
          # Use production Clerk/Supabase for synthetic tests
          NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY: ${{ secrets.CLERK_PUBLISHABLE_KEY_PROD }}
          CLERK_SECRET_KEY: ${{ secrets.CLERK_SECRET_KEY_PROD }}
          NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.SUPABASE_URL_PROD }}
          NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY_PROD }}
          # Enable synthetic monitoring mode
          E2E_SYNTHETIC_MODE: 'true'
          E2E_ENVIRONMENT: ${{ env.ENVIRONMENT }}
        run: |
          # Run only the golden path test
          npx playwright test tests/e2e/golden-path.spec.ts --reporter=json --output=test-results-${{ matrix.environment }}
        continue-on-error: true
        
      - name: Parse test results
        id: test-results
        run: |
          if [ -f "test-results/results.json" ]; then
            FAILED_TESTS=$(cat test-results/results.json | jq -r '.suites[].specs[] | select(.outcome == "unexpected") | .title')
            TOTAL_TESTS=$(cat test-results/results.json | jq -r '.suites[].specs | length')
            PASSED_TESTS=$(cat test-results/results.json | jq -r '.suites[].specs[] | select(.outcome == "expected") | .title | length')
            
            echo "total_tests=$TOTAL_TESTS" >> $GITHUB_OUTPUT
            echo "passed_tests=$PASSED_TESTS" >> $GITHUB_OUTPUT
            echo "failed_tests<<EOF" >> $GITHUB_OUTPUT
            echo "$FAILED_TESTS" >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
            
            if [ "$PASSED_TESTS" -lt "$TOTAL_TESTS" ]; then
              echo "test_status=failed" >> $GITHUB_OUTPUT
            else
              echo "test_status=passed" >> $GITHUB_OUTPUT
            fi
          else
            echo "test_status=error" >> $GITHUB_OUTPUT
            echo "failed_tests=Test results file not found" >> $GITHUB_OUTPUT
          fi
          
      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: synthetic-test-results-${{ matrix.environment }}
          path: |
            test-results-${{ matrix.environment }}/
            playwright-report/
          retention-days: 30
          
      - name: Send Slack Alert on Failure
        if: steps.test-results.outputs.test_status != 'passed'
        uses: 8398a7/action-slack@v3
        with:
          status: failure
          channel: '#alerts-production'
          author_name: 'Synthetic Monitoring'
          title: 'ðŸš¨ Golden Path Test Failed'
          text: |
            *Environment:* ${{ matrix.environment }}
            *URL:* ${{ env.BASE_URL }}
            *Failed Tests:*
            ```
            ${{ steps.test-results.outputs.failed_tests }}
            ```
            *Action:* <${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|View Details>
          webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}
          
      - name: Send Slack Success Notification (Daily Summary)
        if: steps.test-results.outputs.test_status == 'passed' && github.event.schedule == '0 21 * * *'
        uses: 8398a7/action-slack@v3
        with:
          status: success
          channel: '#monitoring'
          author_name: 'Synthetic Monitoring'
          title: 'âœ… Daily Golden Path Health Check'
          text: |
            *Environment:* ${{ matrix.environment }}
            *URL:* ${{ env.BASE_URL }}
            *Status:* All critical user journeys passing
            *Tests Passed:* ${{ steps.test-results.outputs.passed_tests }}/${{ steps.test-results.outputs.total_tests }}
          webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}

  aggregate-results:
    name: Aggregate Results
    runs-on: ubuntu-latest
    needs: synthetic-test
    if: always()
    
    steps:
      - name: Check overall status
        run: |
          # Check if any matrix job failed
          if echo '${{ toJSON(needs.synthetic-test.outputs) }}' | grep -q '"test_status":"failed"'; then
            echo "OVERALL_STATUS=failed" >> $GITHUB_ENV
          else
            echo "OVERALL_STATUS=passed" >> $GITHUB_ENV
          fi
          
      - name: Send Critical Alert for Multiple Environment Failures
        if: env.OVERALL_STATUS == 'failed'
        uses: 8398a7/action-slack@v3
        with:
          status: failure
          channel: '#alerts-critical'
          author_name: 'Synthetic Monitoring'
          title: 'ðŸ”¥ CRITICAL: Multiple Environment Failures'
          text: |
            Multiple environments are experiencing issues with the golden path user journey.
            This indicates a potential service-wide problem.
            
            *Immediate Action Required*
            
            <${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|View Full Results>
          webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}
