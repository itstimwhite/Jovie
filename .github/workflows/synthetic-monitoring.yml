permissions:
  contents: read
name: Production Synthetic Monitoring

on:
  schedule:
    # Run every 5 minutes during business hours (9 AM - 9 PM PST)
    - cron: '*/5 9-21 * * *'
    # Run every 10 minutes during off-hours (split to avoid wrap-around)
    - cron: '*/10 22-23 * * *'
    - cron: '*/10 0-8 * * *'
  workflow_dispatch: # Allow manual triggering
    inputs:
      environment:
        description: 'Environment to test'
        required: true
        default: 'production'
        type: choice
        options:
          - production
          - preview

env:
  PLAYWRIGHT_BROWSERS_PATH: 0

jobs:
  synthetic-test:
    name: Golden Path Synthetic Test
    runs-on: ubuntu-latest
    timeout-minutes: 12

    strategy:
      fail-fast: false
      matrix:
        environment:
          - production
          - preview

    steps:
      - name: Skip non-selected environment on manual run
        if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.environment != matrix.environment }}
        run: |
          echo "Skipping matrix.environment='${{ matrix.environment }}' for manual run targeting '${{ github.event.inputs.environment }}'"
          exit 0

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps chromium

      - name: Set environment URLs
        run: |
          if [ "${{ matrix.environment }}" = "production" ]; then
            echo "BASE_URL=https://jov.ie" >> $GITHUB_ENV
            echo "ENVIRONMENT=production" >> $GITHUB_ENV
          else
            echo "BASE_URL=https://preview.jov.ie" >> $GITHUB_ENV
            echo "ENVIRONMENT=preview" >> $GITHUB_ENV
          fi

      - name: Run Golden Path Test
        env:
          BASE_URL: ${{ env.BASE_URL }}
          PLAYWRIGHT_TEST_BASE_URL: ${{ env.BASE_URL }}
          # Use production Clerk/Supabase for synthetic tests
          NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY: ${{ secrets.CLERK_PUBLISHABLE_KEY_PROD }}
          CLERK_SECRET_KEY: ${{ secrets.CLERK_SECRET_KEY_PROD }}
          NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.SUPABASE_URL_PROD }}
          # Prefer publishable key; keep legacy anon for fallback compatibility
          NEXT_PUBLIC_SUPABASE_PUBLISHABLE_DEFAULT_KEY: ${{ secrets.SUPABASE_ANON_KEY_PROD }}
          NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY_PROD }}
          # Enable synthetic monitoring mode
          E2E_SYNTHETIC_MODE: 'true'
          E2E_ENVIRONMENT: ${{ env.ENVIRONMENT }}
        run: |
          # Run only the golden path test
          npx playwright test tests/e2e/golden-path.spec.ts --reporter=json --output=test-results-${{ matrix.environment }}
        continue-on-error: true

      - name: Parse test results
        id: test-results
        run: |
          RESULTS_DIR="test-results-${{ matrix.environment }}"
          if [ -f "$RESULTS_DIR/results.json" ]; then
            FAILED_TESTS=$(jq -r '[.suites[].specs[] | select(.outcome == "unexpected") | .title] | join("\n")' "$RESULTS_DIR/results.json")
            TOTAL_TESTS=$(jq -r '[.suites[].specs[]] | length' "$RESULTS_DIR/results.json")
            PASSED_TESTS=$(jq -r '[.suites[].specs[] | select(.outcome == "expected")] | length' "$RESULTS_DIR/results.json")
            
            echo "total_tests=$TOTAL_TESTS" >> $GITHUB_OUTPUT
            echo "passed_tests=$PASSED_TESTS" >> $GITHUB_OUTPUT
            echo "failed_tests<<EOF" >> $GITHUB_OUTPUT
            echo "$FAILED_TESTS" >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
            
            if [ "$PASSED_TESTS" -lt "$TOTAL_TESTS" ]; then
              echo "test_status=failed" >> $GITHUB_OUTPUT
            else
              echo "test_status=passed" >> $GITHUB_OUTPUT
            fi
          else
            echo "test_status=error" >> $GITHUB_OUTPUT
            echo "failed_tests=Test results file not found" >> $GITHUB_OUTPUT
          fi

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: synthetic-test-results-${{ matrix.environment }}
          path: |
            test-results-${{ matrix.environment }}/
            playwright-report/
          retention-days: 30

      - name: Fail job if tests failed
        if: steps.test-results.outputs.test_status == 'failed'
        run: |
          echo "Marking job as failed due to test failures"
          exit 1

      - name: Send Slack Alert on Failure
        if: steps.test-results.outputs.test_status != 'passed'
        uses: 8398a7/action-slack@v3
        with:
          status: custom
          channel: '#alerts-production'
          author_name: 'Synthetic Monitoring'
          custom_payload: |
            {
              "text": "ðŸš¨ Golden Path Test Failed",
              "attachments": [
                {
                  "color": "danger",
                  "fields": [
                    {
                      "title": "Environment",
                      "value": "${{ matrix.environment }}",
                      "short": true
                    },
                    {
                      "title": "URL",
                      "value": "${{ env.BASE_URL }}",
                      "short": true
                    },
                    {
                      "title": "Failed Tests",
                      "value": "```\n${{ steps.test-results.outputs.failed_tests }}\n```",
                      "short": false
                    },
                    {
                      "title": "Action",
                      "value": "<${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|View Details>",
                      "short": false
                    }
                  ]
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Send Slack Success Notification (Scheduled Summary)
        if: steps.test-results.outputs.test_status == 'passed' && github.event_name == 'schedule'
        uses: 8398a7/action-slack@v3
        with:
          status: custom
          channel: '#monitoring'
          author_name: 'Synthetic Monitoring'
          custom_payload: |
            {
              "text": "âœ… Daily Golden Path Health Check",
              "attachments": [
                {
                  "color": "good",
                  "fields": [
                    {
                      "title": "Environment",
                      "value": "${{ matrix.environment }}",
                      "short": true
                    },
                    {
                      "title": "URL",
                      "value": "${{ env.BASE_URL }}",
                      "short": true
                    },
                    {
                      "title": "Status",
                      "value": "All critical user journeys passing",
                      "short": false
                    },
                    {
                      "title": "Tests Passed",
                      "value": "${{ steps.test-results.outputs.passed_tests }}/${{ steps.test-results.outputs.total_tests }}",
                      "short": true
                    }
                  ]
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  aggregate-results:
    name: Aggregate Results
    runs-on: ubuntu-latest
    needs: synthetic-test
    if: always()

    steps:
      - name: Check overall status
        run: |
          if [ "${{ needs.synthetic-test.result }}" = "failure" ]; then
            echo "OVERALL_STATUS=failed" >> $GITHUB_ENV
          else
            echo "OVERALL_STATUS=passed" >> $GITHUB_ENV
          fi

      - name: Send Critical Alert for Multiple Environment Failures
        if: env.OVERALL_STATUS == 'failed'
        uses: 8398a7/action-slack@v3
        with:
          status: custom
          channel: '#alerts-critical'
          author_name: 'Synthetic Monitoring'
          custom_payload: |
            {
              "text": "ðŸ”¥ CRITICAL: Multiple Environment Failures",
              "attachments": [
                {
                  "color": "danger",
                  "text": "Multiple environments are experiencing issues with the golden path user journey.\nThis indicates a potential service-wide problem.\n\n*Immediate Action Required*\n\n<${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|View Full Results>"
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
