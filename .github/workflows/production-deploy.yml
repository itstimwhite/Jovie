name: Production Deploy

on:
  push:
    branches: [main]
  workflow_dispatch: {}

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  deployments: write
  security-events: write

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: Production
    env:
      VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
      NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
      SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
      NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY: ${{ secrets.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY }}
      CLERK_SECRET_KEY: ${{ secrets.CLERK_SECRET_KEY }}
      STRIPE_SECRET_KEY: ${{ secrets.STRIPE_SECRET_KEY }}
      STRIPE_PRICE_PRO: ${{ secrets.STRIPE_PRICE_PRO }}
      STRIPE_WEBHOOK_SECRET: ${{ secrets.STRIPE_WEBHOOK_SECRET }}

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20.17
          cache: 'npm'

      - run: npm ci

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: build-output
          path: .next

      - name: Vercel pull production env
        run: npx vercel pull --environment=production --yes --token "$VERCEL_TOKEN"

      - name: Vercel build
        run: npx vercel build --token "$VERCEL_TOKEN"

      - name: Vercel deploy (production)
        id: vercel
        run: |
          URL=$(npx vercel deploy --prebuilt --prod --token "$VERCEL_TOKEN")
          echo "url=$URL" >> $GITHUB_OUTPUT

  health-check:
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - name: Health check
        run: |
          sleep 30  # Wait for deployment to stabilize
          curl -f "${{ needs.deploy.outputs.url }}/api/health" || exit 1

  smoke-test:
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20.17
          cache: 'npm'

      - run: npm ci
      - run: npx playwright install --with-deps

      - name: Run smoke test
        run: |
          BASE_URL="${{ needs.deploy.outputs.url }}" npm run e2e:smoke
