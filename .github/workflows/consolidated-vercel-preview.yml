name: Vercel Preview Deployment & Alias

on:
  pull_request:
    types: [opened, reopened, synchronize]
  push:
    branches-ignore:
      - production
      - preview
  workflow_dispatch:
    inputs:
      pr:
        description: 'PR number to alias (when running manually)'
        required: true
        type: string

permissions:
  contents: read
  pull-requests: write

concurrency:
  group: vercel-preview-${{ github.event_name }}-${{ github.ref || github.event.pull_request.head.sha }}
  cancel-in-progress: true

jobs:
  deploy:
    name: Deploy Vercel Preview
    runs-on: ubuntu-latest
    # Avoid running with secrets on forked PRs
    if: ${{ github.event_name == 'push' || github.event_name == 'workflow_dispatch' || (github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name == github.repository) }}
    env:
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
      VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Get PR information for workflow_dispatch
        id: get_pr_info
        if: ${{ github.event_name == 'workflow_dispatch' }}
        run: |
          PR="${{ github.event.inputs.pr }}"
          if [ -z "$PR" ]; then
            echo "Manual run requires 'pr' input" >&2
            exit 1
          fi
          PR_JSON=$(curl -fsSL -H "Authorization: token $GH_TOKEN" "https://api.github.com/repos/${{ github.repository }}/pulls/$PR")
          BRANCH=$(echo "$PR_JSON" | jq -r '.head.ref')
          SHA=$(echo "$PR_JSON" | jq -r '.head.sha')
          echo "pr=$PR" >> $GITHUB_OUTPUT
          echo "branch=$BRANCH" >> $GITHUB_OUTPUT
          echo "sha=$SHA" >> $GITHUB_OUTPUT

      - uses: actions/checkout@v4
        with:
          fetch-depth: 2
          # For workflow_dispatch, checkout the PR's head
          ref: ${{ steps.get_pr_info.outputs.sha || github.sha }}

      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install Vercel CLI
        run: npm i -g vercel@latest

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Pull env (preview)
        run: vercel pull --yes --environment=preview --token ${{ secrets.VERCEL_TOKEN }}

      - name: Build
        run: vercel build --token ${{ secrets.VERCEL_TOKEN }}

      - name: Deploy (prebuilt)
        id: deploy
        run: |
          url=$(vercel deploy --prebuilt --token ${{ secrets.VERCEL_TOKEN }} | grep -Eo 'https://[a-zA-Z0-9.-]+\.vercel\.app' | tail -n1)
          if [[ ! "$url" =~ ^https://[a-zA-Z0-9.-]+\.vercel\.app$ ]]; then
            echo "Failed to extract Vercel deployment URL" >&2
            exit 1
          fi
          echo "url=$url" >> $GITHUB_OUTPUT

      - name: Comment Preview URL on PR
        if: ${{ github.event_name == 'pull_request' || github.event_name == 'workflow_dispatch' }}
        uses: actions/github-script@v7
        with:
          script: |
            const url = `${{ steps.deploy.outputs.url }}`;
            if (!url) return;

            // Determine PR number based on event type
            let pr;
            if ('${{ github.event_name }}' === 'workflow_dispatch') {
              pr = '${{ steps.get_pr_info.outputs.pr }}';
            } else {
              pr = context.payload.pull_request.number;
            }

            const body = `### ðŸš€ Preview Deployment\n\n- **Preview URL**: ${url} :rocket:`;

            await github.rest.issues.createComment({ 
              owner: context.repo.owner, 
              repo: context.repo.repo, 
              issue_number: pr, 
              body 
            });
