name: Vercel Preview (PRs & branches)

on:
  pull_request:
    types: [opened, reopened, synchronize]
  push:
    branches-ignore:
      - main
      - preview

permissions:
  contents: read
  pull-requests: write

concurrency:
  group: vercel-preview-${{ github.event_name }}-${{ github.ref || github.event.pull_request.head.sha }}
  cancel-in-progress: true

jobs:
  deploy:
    name: Deploy Vercel Preview
    runs-on: ubuntu-latest
    # Avoid running with secrets on forked PRs
    if: ${{ github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name == github.repository) }}
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 2
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install Vercel CLI
        run: npm i -g vercel@latest
      - name: Pull env (preview)
        run: vercel pull --yes --environment=preview --token ${{ secrets.VERCEL_TOKEN }}
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
      - name: Build
        run: vercel build --token ${{ secrets.VERCEL_TOKEN }}
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
      - name: Deploy (prebuilt)
        id: deploy
        run: |
          url=$(vercel deploy --prebuilt --token ${{ secrets.VERCEL_TOKEN }} | grep -Eo 'https://[a-zA-Z0-9.-]+\.vercel\.app' | tail -n1)
          if [[ ! "$url" =~ ^https://[a-zA-Z0-9.-]+\.vercel\.app$ ]]; then
            echo "Failed to extract Vercel deployment URL" >&2
            exit 1
          fi
          echo "url=$url" >> $GITHUB_OUTPUT
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
      - name: Comment Preview URL on PR
        if: ${{ github.event_name == 'pull_request' }}
        uses: actions/github-script@v7
        with:
          script: |
            const url = `${{ steps.deploy.outputs.url }}`;
            if (!url) return;
            const pr = context.payload.pull_request.number;
            const body = `Vercel Preview ready: ${url}`;
            await github.rest.issues.createComment({ owner: context.repo.owner, repo: context.repo.repo, issue_number: pr, body });
